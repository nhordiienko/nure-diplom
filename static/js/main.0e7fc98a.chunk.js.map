{"version":3,"sources":["components/loader.tsx","components/screen-title/screen-title.styles.ts","components/screen-title/screen-title.tsx","services/redux/admin/admin.constants.ts","services/redux/admin/admin.reducer.ts","services/redux/income/income.constants.ts","services/redux/income/income.reducer.ts","services/redux/outcome/outcome.constants.ts","services/redux/outcome/outcome.reducer.ts","services/redux/setting/setting.constants.ts","services/redux/setting/setting.reducer.ts","services/redux/user/user.constants.ts","services/redux/user/user.reducer.ts","services/redux/vidget/vidget.constants.ts","services/redux/vidget/vidget.reducer.ts","services/redux/reducers.ts","services/redux/provider.tsx","services/redux/utils.ts","services/redux/admin/admin.actions.ts","services/redux/user/user.actions.ts","constants/config.ts","constants/currency.ts","services/redux/income/income.actions.ts","services/redux/outcome/outcome.actions.ts","services/redux/setting/setting.actions.ts","services/admin.api.ts","services/records.api.ts","constants/language.ts","components/data-table/data-table.state.ts","constants/promises.ts","services/utils.ts","services/user.api.ts","constants/routes.ts","screens/login/login.styles.ts","screens/login/login.tsx","components/navigation/navigation.styles.ts","components/navigation/navigation.tsx","components/dialog-modal/dialog.styles.tsx","components/dialog-modal/dialog-modal.tsx","components/select/select.styles.ts","components/select/select.tsx","components/dialog-modal/dialog-record/dialog-record.tsx","components/dialog-modal/dialog-record/dialog-record.state.ts","components/dialog-modal/dialog-prompt.tsx","components/dialog-modal/dialog-user/dialog-user.tsx","components/dialog-modal/dialog-user/dialog-user.state.ts","services/currency.api.ts","components/data-table/data-table.utils.ts","components/data-table/data-table.styles.ts","screens/admin/admin.state.ts","screens/admin/admin.tsx","components/plus-button/plus-button.styles.ts","components/plus-button/plus-button.tsx","services/redux/vidget/vidget.actions.ts","screens/dashboard/components/new-vidget/new-vidget.constants.ts","screens/dashboard/components/new-vidget/new-vidget.utils.ts","screens/dashboard/components/new-vidget/new-vidget.styles.ts","screens/dashboard/components/new-vidget/new-vidget.tsx","screens/dashboard/components/new-vidget/new-vidget.state.ts","styles/colors.ts","styles/utils.ts","services/vidgets/color.ts","services/vidgets/format.ts","services/vidgets/data.ts","services/vidgets/labels.ts","services/vidgets/prediction.ts","screens/dashboard/components/dashboard-card/dashboard-card.styles.ts","screens/dashboard/components/dashboard-card/dashboard-card.tsx","screens/dashboard/components/dashboard-vidget-list/dashboard-vidget-list.styles.ts","screens/dashboard/components/dashboard-vidget-list/dashboard-vidget-list.tsx","screens/dashboard/dashboard.tsx","components/add-record/add-record.tsx","components/add-record/add-record.state.ts","components/data-table/components/data-table-head.tsx","components/data-table/components/data-table-edit.tsx","components/data-table/components/data-row.tsx","components/data-table/data-table.tsx","screens/income/income.styles.ts","screens/income/income.tsx","screens/outcome/outcome.styles.ts","screens/outcome/outcome.tsx","screens/profile/profile.styles.ts","screens/profile/profile.tsx","screens/app/app.router.tsx","screens/app/app.service.tsx","screens/app/app.tsx","index.tsx"],"names":["Loader","children","id","height","width","justify","promiseInProgress","usePromiseTracker","area","style","display","justifyContent","alignItems","CircularProgress","useScreenTitleStyles","makeStyles","theme","createStyles","title","margin","spacing","ScreenTitle","classes","Typography","variant","component","className","Divider","ADMIN_ACTIONS","INIT_ADMIN","users","LOGIN","LOGOUT","USERS","DELETE","ADD","INCOME_ACTIONS","INIT_INCOME","incomes","UPDATE","SET","OUTCOME_ACTIONS","INIT_OUTCOME","outcomes","SETTING_ACTIONS","INIT_SETTING","settings","GET","USER_ACTIONS","INIT_USER","VIDGET_ACTIONS","INIT_VIDGET","vidgets","rootReducer","combineReducers","income","state","action","type","payload","map","el","filter","outcome","vidget","user","setting","admin","PERSIST_CONFIG","key","storage","reducer","persistReducer","middleware","thunk","addMiddleware","composeWithDevTools","applyMiddleware","REDUX_STORE","createStore","PERSISTOR","persistStore","ReduxProvider","props","store","loading","persistor","useReduxSelector","useSelector","useAction","dispatch","useDispatch","AdminActions","UserActions","config","Currency","CONFIG","process","IncomeActions","add","update","delete","set","OutcomeActions","SettingActions","checkAdminJWT","jwt","a","Promise","resolve","axios","method","url","headers","Authorization","then","res","data","catch","getUsers","deleteUser","getRecords","addRecord","record","message","editRecord","removeRecord","recordId","Language","CurrencyList","label","value","USD","UAH","EUR","UK","EN","Order","PROMISES","getUUID","uuidv4","getCurrency","currency","getLaunguage","language","parseCurrency","useUser","redux","login","logout","get","setIncomes","setOutcomes","fetchData","useCallback","checkJWT","getUserInfo","getSettings","records","isIncome","useEffect","trackPromise","empl","email","location","name","employee","updateInfo","ok","timestamp","Date","getTime","Error","ROUTES","useLoginStyles","screen","position","top","left","right","bottom","content","padding","input","minWidth","marginBottom","button","marginTop","Login","useState","setEmail","password","setPassword","error","setError","adminLogin","pathname","useLocation","handleFocus","getHandleChange","field","event","v","target","Paper","elevation","color","TextField","fullWidth","onFocus","onChange","Button","onClick","responce","response","useNavigationStyles","drawer","marginRight","borderRight","link","Navigation","to","Assessment","fontSize","TrendingUp","TrendingDown","Person","useDialogStyles","modal","transform","textInput","prompt","DialogModal","isOpen","handleClose","Modal","open","onClose","aria-labelledby","aria-describedby","useSelectStyles","selectContainer","select","Select","list","setValue","FormControl","displayEmpty","MenuItem","DialogRecord","setTitle","description","setDescription","setCurrency","handleSave","date","handleDateChange","handleChangeValue","parseFloat","getHandleChangeText","setter","maxLength","length","useDialogRecordState","Card","CardContent","gutterBottom","flexDirection","DatePicker","format","maxDate","multiline","rows","DialogPrompt","handleSubmit","Grid","container","item","DialogUser","setName","setLocation","usePrice","uah","setUAH","eur","setEUR","fetchPrice","fetch","json","convertUAH","convertEUR","USD_UAH","USD_EUR","getPrice","currencyFrom","currencyTo","convert","price","useDataTableState","handleDelete","useParams","page","parseInt","orderBy","setOrderBy","DESC","order","setOrder","query","URLSearchParams","search","history","useHistory","getPath","pathArr","split","slice","join","isDeleteModal","setDeleteModal","isEditModal","setEditModal","menuAnchorEl","setAnchorEl","activeRow","setActiveRow","handleCloseMenu","handleSubmitDelete","handleCancelDelete","rowsPerPage","getHandleHeaderClick","o","ASC","handleChangeRowsPerPage","replace","handleChangePage","newPage","push","getHandleOpenMenu","currentTarget","handleOpenDelete","handleOpenEdit","handleCloseEdit","getActiveRecord","find","getCompire","currencyBase","b","compireStrings","compireNumbers","time","getAdminCompire","useDataTableStyles","table","borderRadius","buttonContent","tableFooter","paddingLeft","currencySelect","marginLeft","adminPaper","buttons","useAdminState","isOpenLogout","setOpenLogout","isUser","setUser","useAdmin","handleLogout","handleOpenLogout","handleCancelLogout","handleCloseUser","handleOpenUser","headCells","skipPadding","numeric","Admin","TableContainer","Table","size","aria-label","TableHead","TableRow","TableCell","headCell","align","TableSortLabel","active","direction","TableBody","sort","row","Menu","anchorEl","keepMounted","Boolean","Row","hover","tabIndex","role","aria-controls","aria-haspopup","MoreHoriz","scope","usePlusButtonStyles","PlusButton","Add","VidgetActions","VIDGET_MAIN_PARAMETERS","VIDGET_ADDITION_PARAMETERS","VIDGET_PERIOD","getList","arr","useNewVidgetStyles","paper","paddingBottom","card","cardContent","flex","NewVidget","main","setMain","additional","setAdditional","period","setPeriod","isOpenModal","setOpenModal","handleCloseModal","handleOpenModal","handleCreate","base","useNewVidgetState","COLORS","getTransparent","opacity","Math","floor","toString","getColor","pointBorderColor","borderColor","backgroundColor","getDays","days","Array","fill","_","index","day","getFullYear","getMonth","getDate","reverse","getDaysOfWeek","getDay","getDaysOfMonth","n","getMonths","count","last","forEach","prev","getMonthsNames","getData","dates","getEmployeeData","from","formatData","reduce","acc","val","toFixed","getLabels","getPredictLabels","getPredictMonth","next","unshift","getPredictYear","getPredictWeek","getPrediction","x","getXSum","x2","y","getYSum","xy","determinants","det","detX1","detX2","i","pow","matrix","results","a11","a12","a21","a22","c1","c2","useDashboardCardStyles","VIDGETS_BASE_DATA","DashboardCard","del","isOpenDelete","setOpenDelete","getDatasets","datasets","includes","labels","dataset","getPredictionDatasets","useDashboardVidgetListStyles","DashboardVidgetList","Dashboard","AddRecord","actionAdd","isModalOpen","setModalOpen","setDate","useAddRecordState","DataTableHead","DataTableEdit","handleEdit","now","DataRow","toLocaleTimeString","toLocaleDateString","DataTable","rowCount","numSelected","TablePagination","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","useIncomeStyles","paddingRight","Income","useOutcomeStyles","Outcome","useProfileStyles","maxWidth","Profile","setEmployee","handleUpdate","u","e","alert","AppRouter","exact","path","useStyles","root","AppService","node","loadCSS","document","querySelector","parentNode","removeChild","utils","DateFnsUtils","App","ReactDOM","render","getElementById"],"mappings":"uQAWaA,EAAsB,SAAC,GAM7B,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,GACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,MACAC,EACI,EADJA,QAEQC,EAAsBC,4BAAkB,CAAEC,KAAMN,IAAhDI,kBAER,OACE,qBACEG,MAAO,CACLC,QAAS,OACTC,eAAc,OAAEN,QAAF,IAAEA,IAAW,SAC3BO,WAAY,SACZT,OAAM,OAAEA,QAAF,IAAEA,IAAU,GAClBC,SANJ,SASGE,EAAoB,cAACO,EAAA,EAAD,IAAuBZ,K,2BC5BrCa,EAAuBC,aAAW,SAACC,GAAD,OAC7CC,YAAa,CACXC,MAAO,CACLC,OAAQH,EAAMI,QAAQ,SCIfC,EAAgC,SAAC,GAAe,IAAbH,EAAY,EAAZA,MACxCI,EAAUR,IAEhB,OACE,gCACE,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,UAAWJ,EAAQJ,MAA3D,SACGA,IAEH,cAACS,EAAA,EAAD,Q,wBCjBOC,EACJ,eADIA,EAEH,gBAFGA,EAGJ,eAHIA,EAIH,gBAJGA,EAKN,aAiBMC,EAA0B,CACrCC,MAAO,ICnBDC,EAAsCH,EAA/BI,EAA+BJ,EAAvBK,EAAuBL,EAAhBM,EAAgBN,EAARO,EAAQP,ECFjCQ,EACN,cADMA,EAEH,iBAFGA,EAGH,iBAHGA,EAIN,cAOMC,EAA4B,CACvCC,QAAS,ICVHH,EAA6BC,EAAxBG,EAAwBH,EAAhBF,EAAgBE,EAARI,EAAQJ,ECFxBK,EACN,eADMA,EAEH,kBAFGA,EAGH,kBAHGA,EAIN,eAOMC,EAA8B,CACzCC,SAAU,ICRJR,GAA6BM,EAAxBF,GAAwBE,EAAhBP,GAAgBO,EAARD,GAAQC,ECNxBG,GACN,eAOMC,GAA8B,CACzCC,SAAU,ICHJC,GAAQH,GCNHI,GACJ,cADIA,GAEH,eAOGC,GAAwB,GCL7BlB,GAAkBiB,GAAXhB,GAAWgB,GCFbE,GACN,cADMA,GAEH,iBAOGC,GAA4B,CACvCC,QAAS,ICNHjB,GAAgBe,GAAXhB,GAAWgB,GCkCXG,GAAcC,0BAAgB,CACzCC,OTnC2B,WAGT,IAFlBC,EAEiB,uDAFTnB,EACRoB,EACiB,uCACjB,OAAQA,EAAOC,MACb,KAAKvB,EACH,MAAO,CACLG,QAAQ,GAAD,mBAAMkB,EAAMlB,SAAZ,CAAqBmB,EAAOE,WAGvC,KAAKpB,EACH,MAAO,CACLD,QAASkB,EAAMlB,QAAQsB,KAAI,SAACC,GAC1B,OAAIA,EAAG3D,KAAOuD,EAAOE,QAAQzD,GACpBuD,EAAOE,QAETE,MAIb,KAAK3B,EACH,MAAO,CACLI,QAASkB,EAAMlB,QAAQwB,QAAO,qBAAG5D,KAAgBuD,EAAOE,YAG5D,KAAKnB,EACH,MAAO,CACLF,QAAQ,YAAKmB,EAAOE,UAGxB,QACE,cAAOH,QAAP,IAAOA,IAASnB,ISKpB0B,QPlC4B,WAGT,IAFnBP,EAEkB,uDAFVd,EACRe,EACkB,uCAClB,OAAQA,EAAOC,MACb,KAAKvB,GACH,MAAO,CACLQ,SAAS,GAAD,mBAAMa,EAAMb,UAAZ,CAAsBc,EAAOE,WAGzC,KAAKpB,GACH,MAAO,CACLI,SAAUa,EAAMb,SAASiB,KAAI,SAACC,GAC5B,OAAIA,EAAG3D,KAAOuD,EAAOE,QAAQzD,GACpBuD,EAAOE,QAETE,MAIb,KAAK3B,GACH,MAAO,CACLS,SAAUa,EAAMb,SAASmB,QAAO,qBAAG5D,KAAgBuD,EAAOE,YAG9D,KAAKnB,GACH,MAAO,CACLG,SAAS,YAAKc,EAAOE,UAGzB,QACE,cAAOH,QAAP,IAAOA,IAASd,IOIpBsB,ODnC2B,WAGT,IAFlBR,EAEiB,uDAFTL,GACRM,EACiB,uCACjB,OAAQA,EAAOC,MACb,KAAKvB,GACH,MAAO,CACLiB,QAAQ,GAAD,mBAAMI,EAAMJ,SAAZ,CAAqBK,EAAOE,WAGvC,KAAKzB,GACH,MAAO,CACLkB,QAASI,EAAMJ,QAAQU,QAAO,qBAAG5D,KAAgBuD,EAAOE,YAG5D,QACE,cAAOH,QAAP,IAAOA,IAASL,KCoBpBc,KHtCyB,WAGT,IAFhBT,EAEe,uDAFPP,GACRQ,EACe,uCACf,OAAQA,EAAOC,MACb,KAAK3B,GACH,MAAO,CACLkC,KAAMR,EAAOE,SAGjB,KAAK3B,GACH,OAAOiB,GAET,QACE,cAAOO,QAAP,IAAOA,IAASP,KGyBpBiB,QLrC4B,WAGT,IAFnBV,EAEkB,uDAFVX,GACRY,EACkB,uCAClB,OAAQA,EAAOC,MACb,KAAKX,GACH,MAAO,CACLD,SAAS,YAAKW,EAAOE,UAGzB,QACE,cAAOH,QAAP,IAAOA,IAASX,KK2BpBsB,MXxC0B,WAGT,IAFjBX,EAEgB,uDAFR3B,EACR4B,EACgB,uCAChB,OAAQA,EAAOC,MACb,KAAK3B,EACH,OAAO,2BACFyB,GADL,IAEEW,MAAOV,EAAOE,UAGlB,KAAK1B,EACH,OAAO,2BACFuB,GADL,IAEE1B,MAAO2B,EAAOE,UAGlB,KAAKzB,EACH,OAAO,2BACFsB,GADL,IAEE1B,MAAO0B,EAAM1B,MAAMgC,QAAO,qBAAG5D,KAAgBuD,EAAOE,aAGxD,KAAKxB,EACH,OAAO,2BACFqB,GADL,IAEE1B,MAAM,GAAD,mBAAM0B,EAAM1B,OAAZ,CAAmB2B,EAAOE,YAGnC,KAAK3B,EACH,OAAOH,EAET,QACE,cAAO2B,QAAP,IAAOA,IAAS3B,M,sEY5BhBuC,GAAiB,CACrBC,IAAK,KACLC,cAGIC,GAAUC,aAAeJ,GAAgBf,IACzCoB,GAAa,CAACC,MACdC,GAAgBC,+BAAoBC,kBAAe,WAAf,EAAmBJ,KAEhDK,GAAcC,sBAAYR,GAASI,IACnCK,GAAYC,aAAaH,IAEzBI,GAAoB,SAACC,GAAD,OAC/B,cAAC,KAAD,CAAUC,MAAON,GAAjB,SACE,cAAC,KAAD,CAAaO,QAAS,KAAMC,UAAWN,GAAvC,SACGG,EAAMlF,cCXN,SAASwD,GAAwCC,EAASC,GAC/D,MAAO,CAAED,OAAMC,WAGV,IAAM4B,GAAsDC,KAEtDC,GAAY,SAAoChC,GAC3D,IAAMiC,EAAWC,eACjB,OAAO,WACLD,EAASjC,EAAM,WAAN,gBCpBL1B,GAAsCH,EAA/BI,GAA+BJ,EAAvBK,GAAuBL,EAAhBM,GAAgBN,EAARO,GAAQP,EAEjCgE,GACJ,SAACzB,GAAD,OAAmBV,GAAO1B,GAAOoC,IAD7ByB,GAEH,kBAAMnC,GAAOzB,KAFV4D,GAGD,SAAC9D,GAAD,OAAwB2B,GAAOxB,GAAOH,IAHrC8D,GAIH,SAAC1F,GAAD,OAAgBuD,GAAOvB,GAAQhC,IAJ5B0F,GAKN,SAAC3B,GAAD,OAAqBR,GAAOtB,GAAK8B,ICPhClC,GAAkBiB,GAAXhB,GAAWgB,GAEb6C,GACJ,SAAC5B,GAAD,OAAiBR,GAAO1B,GAAOkC,IAD3B4B,GAEH,kBAAMpC,GAAOzB,K,UCNvB8D,oBAEO,ICJKC,GDICC,GACGC,wFADHD,GAENC,oC,UEFC9D,GAA6BC,EAAxBG,GAAwBH,EAAhBF,GAAgBE,EAARI,GAAQJ,EAExB8D,GAAgB,CAC3BC,IAAK,SAAC5C,GAAD,OAAqBE,GAAOtB,GAAKoB,IACtC6C,OAAQ,SAAC7C,GAAD,OAAqBE,GAAOlB,GAAQgB,IAC5C8C,OAAQ,SAACnG,GAAD,OAAgBuD,GAAOvB,GAAQhC,IACvCoG,IAAK,SAAChE,GAAD,OAAwBmB,GAAOjB,GAAKF,KCNnCH,GAA6BM,EAAxBF,GAAwBE,EAAhBP,GAAgBO,EAARD,GAAQC,EAExB8D,GAAiB,CAC5BJ,IAAK,SAACpC,GAAD,OAAsBN,GAAOtB,GAAK4B,IACvCqC,OAAQ,SAACrC,GAAD,OAAsBN,GAAOlB,GAAQwB,IAC7CsC,OAAQ,SAACnG,GAAD,OAAgBuD,GAAOvB,GAAQhC,IACvCoG,IAAK,SAAC3D,GAAD,OAAyBc,GAAOjB,GAAKG,KCNpCI,GAAQH,GAEH4D,GACN,SAAC1D,GAAD,OAA0BW,GAAOV,GAAKD,ICFhC2D,GAAa,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EAC3B,IAAIC,SAAQ,SAACC,GACXC,IAAM,CACJC,OAAQ,MACRC,IAAI,GAAD,OAAKhB,GAAL,UACHiB,QAAS,CACPC,cAAeR,KAGhBS,MAAK,SAACC,GACDA,EAAIC,KAAKA,KACXR,GAAQ,GAERA,GAAQ,MAGXS,OAAM,kBAAMT,GAAQ,UAhBE,2CAAH,sDAmBbU,GAAQ,uCAAG,WAAOb,GAAP,SAAAC,EAAA,sEAEdG,IAAM,CACVC,OAAQ,MACRC,IAAI,GAAD,OAAKhB,GAAL,UACHiB,QAAS,CACPC,cAAeR,KANC,uCASpBW,KAAKA,MATe,2CAAH,sDAWRG,GAAU,uCAAG,WAAOd,EAAaxG,GAApB,SAAAyG,EAAA,sEAEhBG,IAAM,CACVC,OAAQ,SACRC,IAAI,GAAD,OAAKhB,GAAL,kBAAyB9F,GAC5B+G,QAAS,CACPC,cAAeR,KANG,uCAStBW,KAAKA,MATiB,2CAAH,wDC3BVI,GAAU,uCAAG,WAAOf,GAAP,eAAAC,EAAA,sEAEhBG,IAAM,CACVC,OAAQ,MACRC,IAAI,GAAD,OAAKhB,GAAL,WACHiB,QAAS,CACPC,cAAeR,KANG,cAChBW,EADgB,OAStBA,KARMA,KADgB,kBAWjBA,GAXiB,2CAAH,sDAcVK,GAAS,uCAAG,WACvBhB,EACAiB,GAFuB,mBAAAhB,EAAA,sEAKfG,IAAM,CACVC,OAAQ,OACRC,IAAI,GAAD,OAAKhB,GAAL,WACHiB,QAAS,CACPC,cAAeR,GAEjBW,KAAMM,IAXa,mBAarBN,KATMO,EAJe,EAIfA,QAASP,EAJM,EAINA,MAWbO,EAfmB,yCAgBdA,GAhBc,gCAmBhBP,GAnBgB,2CAAH,wDAsBTQ,GAAU,uCAAG,WACxBnB,EACAiB,GAFwB,eAAAhB,EAAA,sEAKhBG,IAAM,CACVC,OAAQ,MACRC,IAAI,GAAD,OAAKhB,GAAL,WACHiB,QAAS,CACPC,cAAeR,GAEjBW,KAAMM,IAXc,YAIhBC,EAJgB,OAatBP,KATMO,SAJgB,yCAgBfA,GAhBe,2CAAH,wDAoBVE,GAAY,uCAAG,WAC1BpB,EACAqB,GAF0B,eAAApB,EAAA,sEAKlBG,IAAM,CACVC,OAAQ,SACRC,IAAI,GAAD,OAAKhB,GAAL,mBAA0B+B,GAC7Bd,QAAS,CACPC,cAAeR,KATK,YAIlBkB,EAJkB,OAYxBP,KARMO,SAJkB,yCAejBA,GAfiB,2CAAH,yD,SLhEb7B,O,aAAAA,I,aAAAA,I,cAAAA,Q,KAWL,IMXKiC,GNWCC,GAA4B,CACvC,CAAEC,MAAO,MAAOC,MAAOpC,GAASqC,KAChC,CAAEF,MAAO,MAAOC,MAAOpC,GAASsC,KAChC,CAAEH,MAAO,MAAOC,MAAOpC,GAASuC,O,SMdtBN,O,WAAAA,I,YAAAA,Q,KAWaA,GAASO,GACTP,GAASQ,GAF3B,ICCKC,GCXCC,GACI,gBADJA,GAEI,gBAFJA,GAGE,cAHFA,GAIJ,QAJIA,GAKJ,QALIA,GAMH,SANGA,GAOL,OAPKA,GAQJ,QCaIC,GAAU,kBAAMC,gBAIhBC,GAAc,SAACC,GAC1B,OAAQA,GACN,KAAK/C,GAASqC,IACZ,MAAO,MACT,KAAKrC,GAASsC,IACZ,MAAO,MACT,KAAKtC,GAASuC,IACZ,MAAO,QAIAS,GAAe,SAACC,GAC3B,OAAQA,GACN,KAAKhB,GAASO,GACZ,OAAO,EACT,KAAKP,GAASQ,GACZ,OAAO,IAIAS,GAAgB,SAACH,GAC5B,OAAQA,GACN,IAAK,MACH,OAAO/C,GAASsC,IAClB,IAAK,MACH,OAAOtC,GAASuC,IAClB,QACE,OAAOvC,GAASqC,MAaTc,GAAU,WAAO,IACpBjF,EAASsB,IAAiB,SAAC4D,GAAD,OAAWA,EAAMlF,QAA3CA,KAEFmF,EAAQ3D,GAAUI,IAClBwD,EAAS5D,GAAUI,IACnByD,EAAM7D,GAAUe,IAChB+C,EAAa9D,GAAUS,GAAcI,KACrCkD,EAAc/D,GAAUc,GAAeD,KAEvCmD,EAAYC,sBAAW,sBAAC,gCAAA/C,EAAA,0DACxB1C,EADwB,iCAEhB0F,GAAS1F,EAAKyC,KAFE,+CAGxB0C,EAHwB,SAGZQ,GAAY3F,EAAKyC,KAHL,8CAIxB4C,EAJwB,UAIdO,GAAY5F,EAAKyC,KAJH,oDAKFe,GAAWxD,EAAKyC,KALd,QAKlBoD,EALkB,OAMlBxH,EAAUwH,EACbhG,QAAO,qBAAGiG,YACVnG,KAAI,SAACC,GAAD,mBAAC,eAAaA,GAAd,IAAkBiF,SAAUG,GAAcpF,EAAGiF,eACpDS,EAAWjH,GACLK,EAAWmH,EACdhG,QAAO,qBAAGiG,YACVnG,KAAI,SAACC,GAAD,mBAAC,eAAaA,GAAd,IAAkBiF,SAAUG,GAAcpF,EAAGiF,eACpDU,EAAY7G,GAbY,wBAexB0G,IAfwB,4CAkB3B,IAEHW,qBAAU,WACRC,uBAAaR,IAAaf,MACzB,KC1FQiB,GAAW,SAACjD,GAAD,OACtB,IAAIE,SAAQ,SAACC,GACXC,IAAM,CACJC,OAAQ,MACRC,IAAI,GAAD,OAAKhB,GAAL,iBACHiB,QAAS,CACPC,cAAeR,KAGhBS,MAAK,SAACC,GACDA,EAAIC,KAAKA,KACXR,GAAQ,GAERA,GAAQ,MAGXS,OAAM,kBAAMT,GAAQ,UAGd+C,GAAW,uCAAG,WAAOlD,GAAP,qBAAAC,EAAA,sEAEjBG,IAAM,CACVC,OAAQ,MACRC,IAAI,GAAD,OAAKhB,GAAL,iBACHiB,QAAS,CACPC,cAAeR,KANI,cACjBW,EADiB,OASvBA,KARMA,KADiB,SAYjBP,IAAM,CACVC,OAAQ,MACRC,IAAI,GAAD,OAAKhB,GAAL,kBACHiB,QAAS,CACPC,cAAeR,KAhBI,cAWnBwD,EAXmB,OAmBvB7C,KAnBuB,kBAqBlB,CACLX,MACAoC,SAAUzB,EAAKyB,SACfqB,MAAO9C,EAAK8C,MACZnB,SAAU3B,EAAK2B,SACfoB,SAAU/C,EAAK+C,SACfC,KAAMhD,EAAKgD,KACXC,SAAQ,iBAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAM7C,YAAR,aAAE,EAAYiD,gBAAd,QAA0B,IA5BX,2CAAH,sDAgCXC,GAAU,uCAAG,WAAOtG,EAAamF,GAApB,uBAAAzC,EAAA,+EAGdG,IAAM,CACVC,OAAQ,MACRC,IAAI,GAAD,OAAKhB,GAAL,iBACHiB,QAAS,CACPC,cAAejD,EAAKyC,KAEtBW,KAAMpD,IATY,uBAWpBoD,KATMA,EAFc,EAEdA,KAAMO,EAFQ,EAERA,QAAS4C,EAFD,EAECA,GAFD,SAcd1D,IAAM,CACVC,OAAQ,OACRC,IAAI,GAAD,OAAKhB,GAAL,aACHiB,QAAS,CACPC,cAAejD,EAAKyC,KAEtBW,KAAM,CACJiD,SAAUrG,EAAKqG,SACfG,WAAW,IAAIC,MAAOC,aAtBN,UAahB7H,EAbgB,OAyBpBuE,KAEGmD,GAAO1H,EAAS0H,IAAOnD,EA3BN,uBA4Bd,IAAIuD,MAAMhD,GAAW,IA5BP,QA+BtBwB,EAAM,CACJ1C,IAAKzC,EAAKyC,IACV4D,SAAUrG,EAAKqG,SACfxB,SAAUzB,EAAKyB,SACfqB,MAAO9C,EAAK8C,MACZnB,SAAU3B,EAAK2B,SACfoB,SAAU/C,EAAK+C,SACfC,KAAMhD,EAAKgD,OAtCS,2EAyCf,KAAMzC,SAzCS,0DAAH,wDA6CViC,GAAW,uCAAG,WAAOnD,GAAP,eAAAC,EAAA,sEAEjBG,IAAM,CACVC,OAAQ,MACRC,IAAI,GAAD,OAAKhB,GAAL,aACHiB,QAAS,CACPC,cAAeR,KANI,cACjBW,EADiB,OASvBA,KARMA,KADiB,kBAWlBA,EAAKzD,KAAI,SAACC,GAAD,MAAS,CACvByG,SAAUzG,EAAGyG,SACbG,UAAW5G,EAAG4G,UACdvK,GAAIyI,UAdmB,2CAAH,sDCtGXkC,GACA,IADAA,GAEH,UAFGA,GAGF,WAHEA,GAIF,WAJEA,GAKJ,SCHIC,GAAiB/J,aAAW,SAACC,GAAD,OACvCC,YAAa,CACX8J,OAAQ,CACNC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACR1K,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdyK,QAAS,CACPC,QAAStK,EAAMI,QAAQ,IAEzBmK,MAAO,CACLC,SAAU,IACV9K,QAAS,QACT+K,aAAczK,EAAMI,QAAQ,IAE9BsK,OAAQ,CACNhL,QAAS,QACTS,OAAQ,OACRwK,UAAW3K,EAAMI,QAAQ,SCLlBwK,GAAY,SAAC,GAAkB,IAAhB3L,EAAe,EAAfA,SACpBqB,EAAUwJ,KADyB,EAGfe,mBAAS,IAHM,mBAGlC1B,EAHkC,KAG3B2B,EAH2B,OAITD,mBAAS,IAJA,mBAIlCE,EAJkC,KAIxBC,EAJwB,OAKfH,mBAAS,IALM,mBAKlCI,EALkC,KAK3BC,EAL2B,OAOjB3G,IAAiB,SAAC4D,GAAD,OAAWA,KAA5ClF,EAPiC,EAOjCA,KAAME,EAP2B,EAO3BA,MAERiF,EAAQ3D,GAAUI,IAClBsG,EAAa1G,GAAUG,IAErBwG,EAAaC,cAAbD,SA0CFE,EAAc,WAClBJ,EAAS,KAGLK,EAAkB,SAACC,GAAD,OAAiC,SACvDC,GAEA,IAAMC,EAAID,EAAME,OAAOxE,MACvB,OAAQqE,GACN,IAAK,QACH,OAAOV,EAASY,GAClB,IAAK,WACH,OAAOV,EAAYU,MAIzB,OAAIzI,EAAKA,MAAQE,EAAMA,MACd,mCAAGlE,IAIV,qBAAKyB,UAAWJ,EAAQyJ,OAAxB,SACE,cAAC6B,EAAA,EAAD,CAAOlL,UAAWJ,EAAQ+J,QAASwB,UAAW,EAA9C,SACE,cAAC,EAAD,CAAQ3M,GAAIwI,GAAgBtI,MAAO,IAAKD,OAAQ,IAAhD,SACE,gCACE,cAAC,EAAD,CAAae,MAAM,UACnB,cAACK,EAAA,EAAD,CAAYuL,MAAM,QAAQtL,QAAQ,QAAQC,UAAU,IAApD,SACGwK,IAEH,cAACc,EAAA,EAAD,CACErL,UAAWJ,EAAQiK,MACnByB,WAAS,EACT9M,GAAG,QACHgI,MAAM,QACN+E,QAASX,EACTnE,MAAOgC,EACP+C,SAAUX,EAAgB,WAE5B,cAACQ,EAAA,EAAD,CACErL,UAAWJ,EAAQiK,MACnByB,WAAS,EACT9M,GAAG,WACHwD,KAAK,WACLwE,MAAM,WACN+E,QAASX,EACTnE,MAAO4D,EACPmB,SAAUX,EAAgB,cAE5B,cAACY,EAAA,EAAD,CACE3L,QAAQ,YACRsL,MAAM,UACNM,QACEhB,IAAavB,GAxDF,WACvBZ,uBAnBAnD,IAAM,CACJC,OAAQ,OACRC,IAAI,GAAD,OAAKhB,GAAL,eACHqB,KAAM,CACJ8C,QACA4B,cAGD5E,KARH,+BAAAR,EAAA,MAQQ,WAAO0G,GAAP,eAAA1G,EAAA,sDACID,EAAQ2G,EAAShG,KAAjBX,IACRyF,EAAW,CAAEzF,QAFT,2CARR,uDAYGY,OAAM,SAAC2E,GAAD,OAAWC,EAASD,EAAMqB,SAASjG,KAAKO,YAOlBc,KALb,WAClBuB,uBAhCAnD,IAAM,CACJC,OAAQ,OACRC,IAAI,GAAD,OAAKhB,GAAL,gBACHqB,KAAM,CACJ8C,QACA4B,cAGD5E,KARH,+BAAAR,EAAA,MAQQ,WAAO0G,GAAP,eAAA1G,EAAA,6DACID,EAAQ2G,EAAShG,KAAjBX,IADJ,KAEJ0C,EAFI,SAEQQ,GAAYlD,GAFpB,6EARR,uDAYGY,OAAM,SAAC2E,GACNC,EAASD,EAAMqB,SAASjG,KAAKO,YAmBPc,KA6DhBhH,UAAWJ,EAAQoK,OACnBuB,QAASX,EAPX,6B,0DCxHCiB,GAAsBxM,aAAW,SAACC,GAAD,OAC5CC,YAAa,CACXuM,OAAQ,CACNlC,QAAStK,EAAMI,QAAQ,EAAG,EAAG,GAC7BqM,YAAazM,EAAMI,QAAQ,GAC3BsM,YAAa,uBAEfC,KAAM,CACJb,MAAO,UACPxB,QAAStK,EAAMI,QAAQ,GACvBV,QAAS,OACTC,eAAgB,SAChBC,WAAY,eCJLgN,GAAa,WACxB,IAAMtM,EAAUiM,KAEhB,OACE,sBAAK7L,UAAWJ,EAAQkM,OAAxB,UACE,cAAC,KAAD,CAAM9L,UAAWJ,EAAQqM,KAAME,GAAIhD,GAAnC,SACE,cAACiD,GAAA,EAAD,CAAYC,SAAS,YAEvB,cAACpM,EAAA,EAAD,IACA,cAAC,KAAD,CAAMD,UAAWJ,EAAQqM,KAAME,GAAIhD,GAAnC,SACE,cAACmD,GAAA,EAAD,CAAYD,SAAS,YAEvB,cAACpM,EAAA,EAAD,IACA,cAAC,KAAD,CAAMD,UAAWJ,EAAQqM,KAAME,GAAIhD,GAAnC,SACE,cAACoD,GAAA,EAAD,CAAcF,SAAS,YAEzB,cAACpM,EAAA,EAAD,IACA,cAAC,KAAD,CAAMD,UAAWJ,EAAQqM,KAAME,GAAIhD,GAAnC,SACE,cAACqD,GAAA,EAAD,CAAQH,SAAS,gB,8GC1BZI,GAAkBpN,aAAW,SAACC,GAAD,OACxCC,YAAa,CACXmN,MAAO,CACLpD,SAAU,WACVE,KAAM,MACND,IAAK,MACLoD,UAAW,yBAEbC,UAAW,CACT7C,aAAczK,EAAMI,QAAQ,GAC5BhB,MAAO,QAETsL,OAAQ,CACNtL,MAAO,QAETmO,OAAQ,CACNjD,QAAStK,EAAMI,QAAQ,IAEzBuG,OAAQ,CACNvH,MAAO,UCXAoO,GAAgC,SAAC,GAIvC,IAHLC,EAGI,EAHJA,OACAC,EAEI,EAFJA,YACAzO,EACI,EADJA,SAEMqB,EAAU6M,KAEhB,OACE,cAACQ,GAAA,EAAD,CACEC,KAAMH,EACNI,QAASH,EACTI,kBAAgB,qBAChBC,mBAAiB,2BAJnB,SAME,qBAAKrN,UAAWJ,EAAQ8M,MAAxB,SAAgCnO,O,kDCtBzB+O,GAAkBjO,aAAW,SAACC,GAAD,OACxCC,YAAa,CACXgO,gBAAiB,CACf9N,OAAQH,EAAMI,QAAQ,GACtBoK,SAAU,KAEZ0D,OAAQ,CACNvD,UAAW3K,EAAMI,QAAQ,SCElB+N,GAAsB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMjH,EAAsB,EAAtBA,MAAOkH,EAAe,EAAfA,SAK3C/N,EAAU0N,KAEhB,OACE,cAACM,GAAA,EAAD,CAAa5N,UAAWJ,EAAQ2N,gBAAhC,SACE,cAAC,KAAD,CACE9G,MAAOA,EACP+E,SAVe,SAACT,GACpB4C,EAAS5C,EAAME,OAAOxE,QAUlBoH,cAAY,EACZ7N,UAAWJ,EAAQ4N,OAJrB,SAMGE,EAAKxL,KAAI,SAACC,GAAD,OACR,cAAC2L,GAAA,EAAD,CAAyBrH,MAAOtE,EAAGsE,MAAnC,SACGtE,EAAGqE,OADSrE,EAAGqE,eCQfuH,GAAkC,SAAC,GAgBzC,IAfLhB,EAeI,EAfJA,OACAvN,EAcI,EAdJA,MACAwO,EAaI,EAbJA,SACAC,EAYI,EAZJA,YACAC,EAWI,EAXJA,eACAzH,EAUI,EAVJA,MACAkH,EASI,EATJA,SACAX,EAQI,EARJA,YACA5F,EAOI,EAPJA,SACA+G,EAMI,EANJA,YACAC,EAKI,EALJA,WACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,iBACA1D,EAEI,EAFJA,YACAL,EACI,EADJA,MAEM3K,EAAU6M,KADZ,ECjD8B,SAACkB,GA0BnC,MAAO,CACLY,kBAfwB,SACxBxD,GAEA,IAAMC,EAAID,EAAME,OAAOxE,MACvB,MAAU,KAANuE,EACK2C,EAAS3C,GAEJwD,WAAWxD,GACb,EACH2C,EAAS,aAElBA,EAAS3C,IAKTyD,oBA3B0B,SAC1BC,EACAC,GAF0B,OAGvB,SAAC5D,GAAgE,IAC5DtE,EAAUsE,EAAME,OAAhBxE,MACJkI,GAAalI,EAAMmI,OAASD,GAGhCD,EAAOjI,MD0C0CoI,CACjDlB,GADMc,EAFJ,EAEIA,oBAAqBF,EAFzB,EAEyBA,kBAI7B,OACE,cAAC,GAAD,CAAaxB,OAAQA,EAAQC,YAAaA,EAA1C,SACE,cAAC8B,GAAA,EAAD,CAAM9O,UAAWJ,EAAQqG,OAAzB,SACE,eAAC8I,GAAA,EAAD,WACE,cAAClP,EAAA,EAAD,CAAYmP,cAAY,EAAClP,QAAQ,KAAKC,UAAU,KAAhD,SACGP,GAAS,eAEZ,cAACK,EAAA,EAAD,CACEG,UAAWJ,EAAQgN,UACnBxB,MAAM,QACNtL,QAAQ,QACRC,UAAU,IAJZ,SAMGwK,IAEH,cAACc,EAAA,EAAD,CACE7E,MAAM,QACNxG,UAAWJ,EAAQgN,UACnBnG,MAAOjH,EACPgM,SAAUiD,EAAoBT,EAAU,IACxCzC,QAASX,IAEX,sBAAK7L,MAAO,CAAEC,QAAS,OAAQiQ,cAAe,OAA9C,UACE,cAAC5D,EAAA,EAAD,CACErJ,KAAK,SACLwE,MAAM,QACNxG,UAAWJ,EAAQgN,UACnBnG,MAAOA,EACP+E,SAAU+C,EACVhD,QAASX,IAEX,cAAC,GAAD,CACE8C,KAAMnH,GACNE,MAAOW,EACPuG,SAAUQ,OAGd,cAACe,GAAA,EAAD,CACE5D,WAAS,EACT7L,OAAO,SACPjB,GAAG,qBACHgI,MAAM,OACN2I,OAAO,aACPC,QAAS,IAAIpG,KACbvC,MAAO4H,EACP7C,SAAU8C,EACV/C,QAASX,IAEX,cAACS,EAAA,EAAD,CACErL,UAAWJ,EAAQgN,UACnBpG,MAAM,cACNC,MAAOwH,EACPzC,SAAUiD,EAAoBP,GAC9BmB,WAAS,EACTC,KAAM,EACN/D,QAASX,IAEX,cAAC,EAAD,CAAQpM,GAAIwI,GAAZ,SACE,cAACyE,EAAA,EAAD,CACE3L,QAAQ,YACRsL,MAAM,UACNM,QAAS0C,EACTpO,UAAWJ,EAAQoK,OAJrB,4B,UEnGCuF,GAAkC,SAAC,GAMzC,IALL/P,EAKI,EALJA,MACAyO,EAII,EAJJA,YACAjB,EAGI,EAHJA,YACAwC,EAEI,EAFJA,aACAzC,EACI,EADJA,OAEMnN,EAAU6M,KAEhB,OACE,cAAC,GAAD,CAAaM,OAAQA,EAAQC,YAAaA,EAA1C,SACE,cAAC9B,EAAA,EAAD,UACE,cAAC,EAAD,CAAQ1M,GAAIwI,GAAwBvI,OAAQ,IAAKC,MAAO,IAAxD,SACE,eAACwM,EAAA,EAAD,CAAOlL,UAAWJ,EAAQiN,OAA1B,UACE,cAAChN,EAAA,EAAD,CAAYmP,cAAY,EAAClP,QAAQ,KAAKC,UAAU,KAAhD,SACGP,IAEH,cAACK,EAAA,EAAD,CAAYmP,cAAY,EAAClP,QAAQ,QAAQC,UAAU,IAAnD,SACGkO,IAEH,eAACwB,GAAA,EAAD,CAAMC,WAAS,EAAC/Q,QAAQ,gBAAxB,UACE,cAAC8Q,GAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAClE,EAAA,EAAD,CACE3L,QAAQ,YACRsL,MAAM,UACNM,QAAS8D,EAHX,mBAQF,cAACC,GAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAClE,EAAA,EAAD,CACE3L,QAAQ,YACRsL,MAAM,YACNM,QAASsB,EAHX,+BC5BH4C,GAA+B,SAAC,GAA6B,IAA3B7C,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAC/CpN,EAAU6M,KADuD,EAE/CtC,mBAAS,IAFsC,mBAEhExB,EAFgE,KAE1DkH,EAF0D,OAGvC1F,mBAAS,IAH8B,mBAGhEzB,EAHgE,KAGtDoH,EAHsD,OAI7C3F,mBAAS,IAJoC,mBAIhE1B,EAJgE,KAIzD2B,EAJyD,OAKvCD,mBAAS,IAL8B,mBAKhEE,EALgE,KAKtDC,EALsD,KAM/DmE,ECZD,CACLA,oBAX0B,SAC1BC,EACAC,GAF0B,OAGvB,SAAC5D,GAAgE,IAC5DtE,EAAUsE,EAAME,OAAhBxE,MACJkI,GAAalI,EAAMmI,OAASD,GAGhCD,EAAOjI,MDcDgI,oBAN+D,EAQ7CtE,mBAAS,IARoC,mBAQhEI,EARgE,KAQzDC,EARyD,KASjEI,EAAc,kBAAMJ,EAAS,KAE3B/H,EAAUoB,IAAiB,SAAC4D,GAAD,OAAWA,EAAMhF,SAA5CA,MAEFgC,EAAMV,GAAUG,IAqBhBkK,EAAU,uCAAG,4BAAAnJ,EAAA,sEACAsD,uBAnBjBnD,IAAM,CACJC,OAAQ,OACRC,IAAI,GAAD,OAAKhB,GAAL,iBACHqB,KAAM,CACJgD,OACAD,WACAD,QACA4B,WACAjD,SAAU,MACVE,SAAU,GAEZ/B,QAAS,CACPC,eAAoB,OAAL/C,QAAK,IAALA,OAAA,EAAAA,EAAOuC,MAAO,MAG9BS,MAAK,SAACmG,GAAD,OAAcA,EAASjG,KAAKA,QACjCC,OAAM,SAAC2E,GAAD,OAAWC,EAASD,EAAMqB,SAASjG,KAAKO,YAGTc,IADvB,UACXxI,EADW,wDAKjBiG,EAAI,CACFkE,OACAF,QACAjK,OAEFwO,IAViB,2CAAH,qDAahB,OACE,cAAC,GAAD,CAAaD,OAAQA,EAAQC,YAAaA,EAA1C,SACE,cAAC8B,GAAA,EAAD,CAAM9O,UAAWJ,EAAQqG,OAAzB,SACE,eAAC8I,GAAA,EAAD,WACE,cAAClP,EAAA,EAAD,CAAYmP,cAAY,EAAClP,QAAQ,KAAKC,UAAU,KAAhD,sBAGA,cAACF,EAAA,EAAD,CACEG,UAAWJ,EAAQgN,UACnBxB,MAAM,QACNtL,QAAQ,QACRC,UAAU,IAJZ,SAMGwK,IAEH,cAACc,EAAA,EAAD,CACE7E,MAAM,OACNxG,UAAWJ,EAAQgN,UACnBnG,MAAOkC,EACP6C,SAAUiD,EAAoBoB,EAAS,IACvCtE,QAASX,IAEX,cAACS,EAAA,EAAD,CACE7E,MAAM,QACNxG,UAAWJ,EAAQgN,UACnBnG,MAAOgC,EACP+C,SAAUiD,EAAoBrE,EAAU,IACxCmB,QAASX,IAEX,cAACS,EAAA,EAAD,CACE7E,MAAM,WACNxG,UAAWJ,EAAQgN,UACnBnG,MAAOiC,EACP8C,SAAUiD,EAAoBqB,EAAa,IAC3CvE,QAASX,IAEX,cAACS,EAAA,EAAD,CACE7E,MAAM,WACNxE,KAAK,WACLhC,UAAWJ,EAAQgN,UACnBnG,MAAO4D,EACPmB,SAAUiD,EAAoBnE,EAAa,IAC3CiB,QAASX,IAEX,cAAC,EAAD,CAAQpM,GAAIwI,GAAZ,SACE,cAACyE,EAAA,EAAD,CACE3L,QAAQ,YACRsL,MAAM,UACNM,QAAS0C,EACTpO,UAAWJ,EAAQoK,OAJrB,4BExGC+F,GAAW,WAAO,IAAD,EACN5F,mBAAS,GADH,mBACrB6F,EADqB,KAChBC,EADgB,OAEN9F,mBAAS,GAFH,mBAErB+F,EAFqB,KAEhBC,EAFgB,KAItBC,EAAapI,sBAAW,sBAAC,8BAAA/C,EAAA,sEAErBoL,MAAM,GAAD,OAAI/L,GAAJ,YAFgB,8BAG3BgM,OAH2B,cACvBC,EADuB,gBAKrBF,MAAM,GAAD,OAAI/L,GAAJ,YALgB,8BAM3BgM,OAN2B,OAIvBE,EAJuB,OAQ7BP,EAAOM,EAAWE,SAClBN,EAAOK,EAAWE,SATW,4CAU5B,IAMH,OAJApI,qBAAU,WACRC,uBAAa6H,IAAcpJ,MAC1B,CAACoJ,IAEU,CAACJ,EAAKE,IAGTS,GAAW,SACtBlK,EACAmK,EACAC,EACAC,GAEA,IAAIC,EAAQtK,EAEZ,OAAQmK,GACN,KAAKvM,GAASsC,IACZoK,GAASD,EAAQ,GACjB,MACF,KAAKzM,GAASuC,IACZmK,GAASD,EAAQ,GAIrB,OAAQD,GACN,KAAKxM,GAASsC,IACZoK,GAASD,EAAQ,GACjB,MACF,KAAKzM,GAASuC,IACZmK,GAASD,EAAQ,GAIrB,OAAOC,I,SlB7CGhK,K,UAAAA,E,aAAAA,Q,KASL,IAAMiK,GAAoB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,aAE1BzS,EAAO0S,cAAP1S,GACF2S,EAAOC,SAAS5S,IAAO,EAH4C,EAI3C2L,mBAAS,GAJkC,mBAIlEkH,EAJkE,KAIzDC,EAJyD,OAK/CnH,mBAASpD,GAAMwK,MALgC,mBAKlEC,EALkE,KAK3DC,EAL2D,KAMnEC,EEHsB,IAAIC,gBAAgBhH,cAAciH,QFIxDlJ,EAAWiC,cACXkH,EAAUC,cARyD,EAUzC3H,mBAAS9F,GAASqC,KAVuB,mBAUlEU,EAVkE,KAUxD+G,EAVwD,KAiCnE4D,EAAU,WACd,IAAMC,EAAUtJ,EAASgC,SAASuH,MAAM,KACxC,OAAOD,EAAQE,MAAM,EAAGF,EAAQpD,OAAS,GAAGuD,KAAK,MAnCsB,EAuCjChI,oBAAS,GAvCwB,mBAuClEiI,EAvCkE,KAuCnDC,EAvCmD,OAwCrClI,oBAAS,GAxC4B,mBAwClEmI,EAxCkE,KAwCrDC,EAxCqD,OAyCrCpI,mBAA6B,MAzCQ,mBAyClEqI,EAzCkE,KAyCpDC,EAzCoD,OA0CvCtI,mBAAS,IA1C8B,mBA0ClEuI,EA1CkE,KA0CvDC,EA1CuD,KA4CjEpQ,EAASsB,IAAiB,SAAC4D,GAAD,OAAWA,EAAMlF,QAA3CA,KASFqQ,EAAkB,WACtBH,EAAY,OAQRI,EAAkB,uCAAG,sBAAA5N,EAAA,sEACLsD,uBAClBnC,IAAiB,OAAJ7D,QAAI,IAAJA,OAAA,EAAAA,EAAMyC,MAAO,GAAI0N,GAC9B1L,IAHuB,gBAMvBiK,EAAayB,GACbI,KAPuB,2CAAH,qDAWlBA,EAAqB,WACzBT,GAAe,IAejB,MAAO,CACLlB,OACAE,UACAG,QACAuB,YAAa3B,SAASM,EAAM9J,IAAI,gBAAkB,KAAO,GACzDoL,qBAlF2B,SAACxU,GAAD,OAAgB,WAC3C,GAAI6S,IAAY7S,EACd,OAAOiT,GAAS,SAACwB,GAAD,OAAQA,IAAMlM,GAAMwK,KAAOxK,GAAMmM,IAAMnM,GAAMwK,QAE/DD,EAAW9S,KA+EX2U,wBA5E8B,SAC9BpI,GAEA8G,EAAQuB,QAAR,UAAmBrB,IAAnB,0BAA8ChH,EAAME,OAAOxE,SA0E3D4M,iBAvEuB,SAACtI,EAAgBuI,GACxCzB,EAAQ0B,KAAR,UACKxB,IADL,YACkBuB,EAAU,EAD5B,wBAEI5B,EAAM9J,IAAI,gBAAkB,MAsEhC4K,eACAgB,kBArDwB,SAAChV,GAAD,OAAgB,SACxCuM,GAEA0H,EAAY1H,EAAM0I,eAClBd,EAAanU,KAkDboU,kBAEAc,iBA7CuB,WACvBd,IACAP,GAAe,IA4CfQ,qBACAC,qBACAV,gBAEAuB,eA9BqB,WACrBf,IACAL,GAAa,IA6BbqB,gBA1BsB,WACtBrB,GAAa,IA0BbD,cAEAuB,gBAzBsB,SAAClO,GAAD,OACtBA,EAAKmO,MAAK,qBAAGtV,KAAgBkU,MA0B7BtL,WACA+G,gBmBhIS4F,GAAa,SACxBvC,EACAH,EACA2C,EACAlD,GAJwB,OAKrB,SAAC7L,EAAYgP,GAChB,OAAQ5C,GACN,KAAK,EACH,OAAO6C,GAAe1C,EAAOvM,EAAEzF,MAAOyU,EAAEzU,OAC1C,KAAK,EACH,OAAO0U,GAAe1C,EAAOvM,EAAEgJ,YAAagG,EAAEhG,aAChD,KAAK,EACH,OAAOkG,GACL3C,EACAb,GAAS1L,EAAEwB,MAAOxB,EAAEmC,SAAU4M,EAAclD,GAC5CH,GAASsD,EAAExN,MAAOwN,EAAE7M,SAAU4M,EAAclD,IAEhD,KAAK,EACH,OAAOqD,GAAe3C,EAAOvM,EAAEmP,KAAMH,EAAEG,MACzC,QACE,OAAO,KAIPD,GAAiB,SAAC3C,EAAcvM,EAAWgP,GAA1B,OACrBzC,IAAUzK,GAAMmM,IAAMjO,EAAIgP,EAAIA,EAAIhP,GAE9BiP,GAAiB,SAAC1C,EAAcvM,EAAWgP,GAC/C,OAAIhP,EAAIgP,EACCzC,IAAUzK,GAAMmM,KAAO,EAAI,EAEhCjO,EAAIgP,EACCzC,IAAUzK,GAAMmM,IAAM,GAAK,EAE7B,GAGImB,GAAkB,SAAC7C,EAAcH,GAAf,OAAmC,SAChEpM,EACAgP,GAEA,OAAQ5C,GACN,KAAK,EACH,OAAO6C,GAAe1C,EAAOvM,EAAEwD,OAAS,GAAIwL,EAAExL,OAAS,IACzD,KAAK,EACH,OAAOyL,GAAe1C,EAAOvM,EAAE0D,MAAQ,GAAIsL,EAAEtL,MAAQ,IACvD,QACE,OAAO,KCnDA2L,GAAqBjV,aAAW,SAACC,GAAD,OAC3CC,YAAa,CACXgV,MAAO,CACL7V,MAAO,QAETsL,OAAQ,CACNF,SAAU,EACVrK,OAAQH,EAAMI,QAAQ,GACtBhB,MAAO,GACPD,OAAQ,GACR+V,aAAc,MACdlL,SAAU,YAEZmL,cAAe,CACbzV,QAAS,QACTsK,SAAU,WACVE,KAAM,MACND,IAAK,MACLoD,UAAW,yBAEb+H,YAAa,CACXC,YAAarV,EAAMI,QAAQ,GAC3BV,QAAS,OACTC,eAAgB,iBAElBmI,SAAU,CACRpI,QAAS,OACTE,WAAY,UAEd0V,eAAgB,CACd3K,UAAW3K,EAAMI,SAAS,GAC1BmV,WAAYvV,EAAMI,QAAQ,IAE5B+C,MAAO,CACLmH,QAAStK,EAAMI,QAAQ,IAEzBoV,WAAY,CACV7K,UAAW3K,EAAMI,QAAQ,IAE3BqV,QAAS,CACPrW,MAAO,IACPM,QAAS,OACTE,WAAY,SACZD,eAAgB,gBAChBgL,UAAW3K,EAAMI,QAAQ,SCjClBsV,GAAgB,WAAO,IAAD,EACG7K,mBAA6B,MADhC,mBAC1BqI,EAD0B,KACZC,EADY,OAEOtI,oBAAS,GAFhB,mBAE1BiI,EAF0B,KAEXC,EAFW,OAGClI,mBAAS,IAHV,mBAG1BuI,EAH0B,KAGfC,EAHe,OAIR9O,IAAiB,SAAC4D,GAAD,OAAWA,EAAMhF,SAAnDrC,EAJyB,EAIzBA,MAAOqC,EAJkB,EAIlBA,MACT7C,EAAU0U,KALiB,EAOKnK,oBAAS,GAPd,mBAO1B8K,EAP0B,KAOZC,EAPY,OASP/K,oBAAS,GATF,mBAS1BgL,EAT0B,KASlBC,EATkB,OAWHjL,mBAAS,GAXN,mBAW1BkH,EAX0B,KAWjBC,EAXiB,OAYPnH,mBAASpD,GAAMwK,MAZR,mBAY1BC,EAZ0B,KAYnBC,EAZmB,MnBsFX,WAAO,IACrBhP,EAAUoB,IAAiB,SAAC4D,GAAD,OAAWA,EAAMhF,SAA5CA,MAEFkF,EAAS5D,GAAUG,IACnB9D,EAAQ2D,GAAUG,IAElB6D,EAAYC,sBAAW,sBAAC,sBAAA/C,EAAA,0DACxBxC,EADwB,iCAEhBsC,GAActC,EAAMuC,KAFJ,+CAGxB5E,EAHwB,SAGZyF,GAASpD,EAAMuC,KAHH,0DAKxB2C,IALwB,4CAQ3B,IAEHW,qBAAU,WACRC,uBAAaR,IAAaf,MACzB,ImBnFHqO,GAEA,IAAMpE,EAAelN,GAAUG,IACzBoR,EAAevR,GAAUG,IAEzB0O,EAAkB,WACtBH,EAAY,OAWRI,EAAkB,uCAAG,sBAAA5N,EAAA,sEACLsD,uBAClBzC,IAAgB,OAALrD,QAAK,IAALA,OAAA,EAAAA,EAAOuC,MAAO,GAAI0N,GAC7B1L,IAHuB,gBAMvBiK,EAAayB,GACbI,KAPuB,2CAAH,qDAWlBA,EAAqB,WACzBT,GAAe,IAgBjB,MAAO,CACLG,eACAJ,gBACAhS,QACAR,UACAqV,eACAzD,QACAH,UACA2B,qBA5D2B,SAACxU,GAAD,OAAgB,WAC3C,GAAI6S,IAAY7S,EACd,OAAOiT,GAAS,SAACwB,GAAD,OAAQA,IAAMlM,GAAMwK,KAAOxK,GAAMmM,IAAMnM,GAAMwK,QAE/DD,EAAW9S,KAyDX8W,eACA5B,iBA9CuB,WACvBd,IACAP,GAAe,IA6CfQ,qBACA0C,iBA1BuB,WACvBL,GAAc,IA0BdM,mBAxByB,WACzBN,GAAc,IAwBd1B,kBArBwB,SAAChV,GAAD,OAAgB,SACxCuM,GAEA0H,EAAY1H,EAAM0I,eAClBd,EAAanU,KAkBboU,kBACAE,qBACAqC,SACAM,gBAjDsB,kBAAML,GAAQ,IAkDpCM,eAjDqB,kBAAMN,GAAQ,MClCjCO,GAAY,CAChB,CAAEnX,GAAI,EAAGgI,MAAO,QAASoP,aAAa,EAAMC,SAAS,GACrD,CAAErX,GAAI,EAAGgI,MAAO,OAAQqP,SAAS,IAGtBC,GAAQ,WAAO,IAAD,EAqBrBd,KAnBFxC,EAFuB,EAEvBA,aACAJ,EAHuB,EAGvBA,cACAhS,EAJuB,EAIvBA,MACAR,EALuB,EAKvBA,QACAqV,EANuB,EAMvBA,aACA5D,EAPuB,EAOvBA,QACAG,EARuB,EAQvBA,MACAwB,EATuB,EASvBA,qBACAsC,EAVuB,EAUvBA,aACA5B,EAXuB,EAWvBA,iBACAb,EAZuB,EAYvBA,mBACA0C,EAbuB,EAavBA,iBACAC,EAduB,EAcvBA,mBACAhC,EAfuB,EAevBA,kBACAZ,EAhBuB,EAgBvBA,gBACAE,EAjBuB,EAiBvBA,mBACAqC,EAlBuB,EAkBvBA,OACAM,EAnBuB,EAmBvBA,gBACAC,EApBuB,EAoBvBA,eAGF,OACE,sBAAK1V,UAAWJ,EAAQ6C,MAAxB,UACE,cAAC,EAAD,CAAajD,MAAM,UACnB,eAAC0L,EAAA,EAAD,CAAOlL,UAAWJ,EAAQkV,WAA1B,UACE,cAACiB,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACEhW,UAAWJ,EAAQ2U,MACnBnH,kBAAgB,aAChB6I,KAAK,SACLC,aAAW,iBAJb,UAME,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWzM,QAAQ,aAClB+L,GAAUzT,KAAI,SAACoU,GAAD,OACb,cAACD,GAAA,EAAD,CAEEE,MAAOD,EAAST,QAAU,QAAU,OACpCjM,QAAS0M,EAASV,YAAc,OAAS,UACzClK,QAASsH,EAAqBsD,EAAS9X,IAJzC,SAME,cAACgY,GAAA,EAAD,CACEC,OAAQpF,IAAYiF,EAAS9X,GAC7BkY,UAAWlF,EAFb,SAIG8E,EAAS9P,SATP8P,EAAS9X,YAetB,cAACmY,GAAA,EAAD,UACGvW,EAAMwW,KAAKvC,GAAgB7C,EAAOH,IAAUnP,KAAI,SAAC2U,GAAD,OAC/C,cAAC,GAAD,CACErY,GAAIqY,EAAIrY,GACRmK,KAAMkO,EAAIlO,KACVF,MAAOoO,EAAIpO,MACX+K,kBAAmBA,GACdqD,EAAIrY,cAMnB,cAACsY,GAAA,EAAD,CACEtY,GAAG,kBACHuY,SAAUvE,EACVwE,aAAW,EACX9J,KAAM+J,QAAQzE,GACdrF,QAASyF,EALX,SAOE,cAAC9E,GAAA,EAAD,CAAUpC,QAASgI,EAAnB,sBAEF,cAAC,GAAD,CACE3G,OAAQqF,EACRnE,YAAY,oCACZzO,MAAM,SACNwN,YAAa8F,EACbtD,aAAcqD,IAEhB,cAAC,GAAD,CACE9F,OAAQkI,EACRhH,YAAY,oCACZzO,MAAM,SACNwN,YAAawI,EACbhG,aAAc8F,IAEhB,cAAC,GAAD,CAAYvI,OAAQoI,EAAQnI,YAAayI,OAG3C,sBAAKzV,UAAWJ,EAAQmV,QAAxB,UACE,cAACtJ,EAAA,EAAD,CACE3L,QAAQ,YACRsL,MAAM,YACNM,QAAS6J,EAHX,oBAOA,cAAC9J,EAAA,EAAD,CAAQ3L,QAAQ,YAAYsL,MAAM,UAAUM,QAASgK,EAArD,wBAiBFwB,GAAgB,SAAC,GAA4C,IAA1C1D,EAAyC,EAAzCA,kBAAmBhV,EAAsB,EAAtBA,GAAIiK,EAAkB,EAAlBA,MAAOE,EAAW,EAAXA,KAC/C/I,EAAU0U,KAEhB,OACE,eAAC8B,GAAA,EAAD,CAAUe,OAAK,EAACC,UAAW,EAAGC,KAAK,WAAnC,UACE,cAAChB,GAAA,EAAD,CAAWzM,QAAQ,WAAnB,SACE,cAAC6B,EAAA,EAAD,CACE6L,gBAAc,kBACdC,gBAAc,OACdvX,UAAWJ,EAAQoK,OACnB0B,QAAS8H,EAAkBhV,GAJ7B,SAME,cAACgZ,GAAA,EAAD,CAAWxX,UAAWJ,EAAQ6U,oBAGlC,cAAC4B,GAAA,EAAD,CAAWtW,UAAU,KAAK0X,MAAM,MAAM7N,QAAQ,OAA9C,SACGnB,IAEH,cAAC4N,GAAA,EAAD,CAAWE,MAAM,OAAjB,SAAyB5N,Q,oBC1JlB+O,GAAsBrY,aAAW,SAACC,GAAD,OAC5CC,YAAa,CACXyK,OAAQ,CACNV,SAAU,QACVG,MAAO,GACPC,OAAQ,GACRE,QAAStK,EAAMI,QAAQ,GACvB8U,aAAc,YCCPmD,GAA8B,SAAC,GAAiB,IAAfjM,EAAc,EAAdA,QACtC9L,EAAU8X,KAEhB,OACE,cAACjM,EAAA,EAAD,CACEC,QAASA,EACT1L,UAAWJ,EAAQoK,OACnBlK,QAAQ,YACRsL,MAAM,UAJR,SAME,cAACwM,GAAA,EAAD,CAAKvL,SAAS,aChBZ5L,GAAgBe,GAAXhB,GAAWgB,GAEXqW,GACN,SAACvV,GAAD,OAAqBP,GAAOtB,GAAK6B,IAD3BuV,GAEH,SAACrZ,GAAD,OAAgBuD,GAAOvB,GAAQhC,ICR5BsZ,GAAyB,CAAC,SAAU,UAAW,YAE/CC,GAA6B,CACxC,OACA,SACA,UACA,WACA,cAGWC,GAAgB,CAAC,OAAQ,QAAS,QCVlCC,GAAU,SAACC,EAAe9V,GAAhB,OACrB8V,EACG9V,QAAO,SAACD,GAAD,OAAQA,IAAOC,KACtBF,KAAI,SAACC,GAAD,MAAS,CACZsE,MAAOtE,EACPqE,MAAOrE,OCHAgW,GAAqB9Y,aAAW,SAACC,GAAD,OAC3CC,YAAa,CACX6Y,MAAO,CACLxO,QAAStK,EAAMI,QAAQ,IAEzBmX,IAAK,CACH7X,QAAS,OACTiQ,cAAe,MACf/P,WAAY,YAEdsH,MAAO,CACL6R,cAAe/Y,EAAMI,QAAQ,KAC7BhB,MAAO,KAETsL,OAAQ,CACNhL,QAAS,QACTS,OAAQ,OACRwK,UAAW3K,EAAMI,QAAQ,IAE3B4Y,KAAM,CACJtZ,QAAS,OACTN,MAAO,QACPD,OAAQ,SAEV8Z,YAAa,CACXvZ,QAAS,OACTwZ,KAAM,EACNvJ,cAAe,SACfhQ,eAAgB,SAChBC,WAAY,eChBLuZ,GAAY,WACvB,IAAM7Y,EAAUuY,KADa,ECLE,WAAO,IAAD,EACbhO,mBAAS2N,GAAuB,IADnB,mBAC9BY,EAD8B,KACxBC,EADwB,OAEDxO,mBAAS4N,GAA2B,IAFnC,mBAE9Ba,EAF8B,KAElBC,EAFkB,OAGT1O,mBAAS6N,GAAc,IAHd,mBAG9Bc,EAH8B,KAGtBC,EAHsB,OAKD5O,oBAAS,GALR,mBAK9B6O,EAL8B,KAKjBC,EALiB,KAO/BxU,EAAMV,GAAU8T,IAGhBqB,EAAmB,WACvBD,GAAa,GACbN,EAAQb,GAAuB,IAC/Be,EAAcd,GAA2B,IACzCgB,EAAUf,GAAc,KAa1B,MAAO,CACLU,OACAE,aACAE,SACAH,UACAE,gBACAE,YAEAC,cACAG,gBA3BsB,kBAAMF,GAAa,IA4BzCC,mBAEAE,aAtBmB,WACnB3U,EAAI,CACFjG,GAAIyI,KACJoS,KAAMX,EACNE,aACAE,WAEFI,MDHEI,GAZFZ,EAJ2B,EAI3BA,KACAE,EAL2B,EAK3BA,WACAE,EAN2B,EAM3BA,OACAH,EAP2B,EAO3BA,QACAE,EAR2B,EAQ3BA,cACAE,EAT2B,EAS3BA,UAEAC,EAX2B,EAW3BA,YACAG,EAZ2B,EAY3BA,gBACAD,EAb2B,EAa3BA,iBAEAE,EAf2B,EAe3BA,aAGF,OACE,qCACE,cAAC,GAAD,CAAY1N,QAASyN,IACrB,cAAC,GAAD,CAAapM,OAAQiM,EAAahM,YAAakM,EAA/C,SACE,eAAChO,EAAA,EAAD,CAAOlL,UAAWJ,EAAQwY,MAA1B,UACE,cAACvY,EAAA,EAAD,CAAYmP,cAAY,EAAClP,QAAQ,KAAKC,UAAU,KAAhD,wBAGA,sBAAKC,UAAWJ,EAAQiX,IAAxB,UACE,cAAChX,EAAA,EAAD,CAAYG,UAAWJ,EAAQ4G,MAAO1G,QAAQ,QAAQC,UAAU,IAAhE,4BAGA,cAAC,GAAD,CACE2N,KAAMuK,GAAQH,GAAwBc,GACtCnS,MAAOiS,EACP/K,SAAUgL,OAGd,sBAAK3Y,UAAWJ,EAAQiX,IAAxB,UACE,cAAChX,EAAA,EAAD,CAAYG,UAAWJ,EAAQ4G,MAAO1G,QAAQ,QAAQC,UAAU,IAAhE,kCAGA,cAAC,GAAD,CACE2N,KAAMuK,GAAQF,GAA4BW,GAC1CjS,MAAOmS,EACPjL,SAAUkL,OAGd,sBAAK7Y,UAAWJ,EAAQiX,IAAxB,UACE,cAAChX,EAAA,EAAD,CAAYG,UAAWJ,EAAQ4G,MAAO1G,QAAQ,QAAQC,UAAU,IAAhE,oBAGA,cAAC,GAAD,CACE2N,KAAMuK,GAAQD,IACdvR,MAAOqS,EACPnL,SAAUoL,OAGd,cAACtN,EAAA,EAAD,CACEzL,UAAWJ,EAAQoK,OACnBlK,QAAQ,YACRsL,MAAM,UACNM,QAAS0N,EAJX,6BEvEGG,GACE,UADFA,GAGI,UAHJA,GAKC,UALDA,GAOE,UCPFC,GAAiB,SAACpO,EAAeqO,GAAhB,gBACzBrO,GADyB,OACjBsO,KAAKC,MAAgB,IAAVF,GAAeG,SAAS,MCInCC,GAAW,SAAC7X,GACvB,OAAQA,GACN,KAAK+V,GAA2B,GAC9B,MAAO,CACL+B,iBAAkBN,GAAeD,GAAsB,IACvDQ,YAAaP,GAAeD,GAAsB,IAClDS,gBAAiBR,GAAeD,GAAsB,KAE1D,KAAKxB,GAA2B,GAC9B,MAAO,CACL+B,iBAAkBN,GAAeD,GAAoB,IACrDQ,YAAaP,GAAeD,GAAoB,IAChDS,gBAAiBR,GAAeD,GAAoB,KAExD,KAAKxB,GAA2B,GAC9B,MAAO,CACL+B,iBAAkBN,GAAeD,GAAoB,IACrDQ,YAAaP,GAAeD,GAAoB,IAChDS,gBAAiBR,GAAeD,GAAoB,KAExD,KAAKxB,GAA2B,GAC9B,MAAO,CACL+B,iBAAkBN,GAAeD,GAAmB,IACpDQ,YAAaP,GAAeD,GAAmB,IAC/CS,gBAAiB,mBC7BZC,GAAU,SAACC,GAAD,OACrB,IAAIC,MAAMD,GACPE,KAAK,GACLlY,KAAI,SAACmY,EAAGC,GACP,IAAMC,EAAM,IAAIvR,MAAK,IAAIA,MAAOC,UAAY,MAAsBqR,GAElE,OAAO,IAAItR,KAAKuR,EAAIC,cAAeD,EAAIE,WAAYF,EAAIG,cAExDC,WAEQC,GAAgB,SAACV,GAAD,OAC3BA,EAAKhY,KACH,SAACmM,GAAD,MAAU,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOA,EAAKwM,cAiCxDC,GAAiB,SAACZ,GAAD,OAC5BA,EAAKhY,KACH,SAACmM,GAAD,gBAAac,GAAOd,EAAKqM,WAAzB,YAAuCvL,GAAOd,EAAKoM,WAAa,QAG9DtL,GAAS,SAAC4L,GAAD,OAAgBA,EAAI,GAAJ,WAAaA,GAAMA,GAErCC,GAAY,SAACC,GACxB,IAAIC,EAAOT,GAAS,IAAIzR,MAElBtD,EAAc,GAOpB,OANA,IAAIyU,MAAMc,GAAOb,KAAK,GAAGe,SAAQ,WAC/B,IAAMC,EAAOX,GAAS,IAAIzR,KAAKkS,EAAKjS,UAAY,QAChDvD,EAAI6N,KAAK2H,GACTA,EAAOE,KAGF1V,EAAIiV,WAGAF,GAAW,SAACpM,GAAD,OAAgB,IAAIrF,KAAKqF,EAAKmM,cAAenM,EAAKoM,aAE7DY,GAAiB,SAACnB,GAAD,OAC5BA,EAAKhY,KACH,SAACmM,GAAD,gBAAac,GAAOd,EAAKoM,WAAa,GAAtC,YAA4CtL,GAAOd,EAAKmM,oBC1D/Cc,GAAU,SACrB7T,EACAzF,EACA8O,EACAgI,GAEA,IAAIyC,EAAQtB,GAAQ,GAEpB,OAAQnB,GACN,KAAKd,GAAc,GACjBuD,EAAQtB,GAAQ,IAChB,MACF,KAAKjC,GAAc,GACjBuD,EAAQP,GAAU,IAItB,GAAIhZ,IAAS+V,GAA2B,GACtC,OAAOyD,GAAgB/T,EAAMjF,QAAQpB,SAAUma,EAAOzC,GAbrD,IAgBKlY,EAAY6G,EAAM5F,OAAlBjB,QACAK,EAAawG,EAAMpF,QAAnBpB,SAER,OAAOsa,EAAMrZ,KAAI,SAACuZ,GAAU,IAAD,IACnBtP,EACJ2M,IAAWd,GAAc,GACrByC,GAAS,IAAIzR,KAAKyS,EAAKxS,UAAY,SAA2BA,UAC9D,IAAID,KAAKyS,EAAKxS,UAAY,OAAqBA,UAErD,OAAQjH,GACN,KAAK+V,GAA2B,GAC9B,OAAO2D,GAAWza,EAAUwa,EAAKxS,UAAWkD,EAAI2E,EAASvJ,IAAc,UAAAE,EAAMlF,KAAKA,YAAX,eAAiB6E,WAAY,QACtG,QACE,OAAOsU,GAAW9a,EAAS6a,EAAKxS,UAAWkD,EAAI2E,EAASvJ,IAAc,UAAAE,EAAMlF,KAAKA,YAAX,eAAiB6E,WAAY,aAK9FoU,GAAkB,SAACpa,EAAsBma,EAAezC,GACnE,OAAOyC,EAAMrZ,KAAI,SAACuZ,GAAU,IAAD,EACnBtP,EACJ2M,IAAWd,GAAc,GACrByC,GAAS,IAAIzR,KAAKyS,EAAKxS,UAAY,SAA2BA,UAC9D,IAAID,KAAKyS,EAAKxS,UAAY,OAAqBA,UAErD,OACE,UAAA7H,EACGgB,QAAO,gBAAG2G,EAAH,EAAGA,UAAH,OAAmB0S,EAAKxS,UAAYF,GAAaA,EAAYoD,KACpEyK,MAAK,SAAC3R,EAAGgP,GAAJ,OAAUA,EAAElL,UAAY9D,EAAE8D,aAAW,UAF7C,eAEiDH,WAAY,MAK7D8S,GAAa,SACjB/V,EACA8V,EACAtP,EACA2E,EACA1J,GALiB,OAOhBzB,EACEvD,QAAO,gBAAGgS,EAAH,EAAGA,KAAH,OAAcqH,EAAOrH,GAAQA,EAAOjI,KAC3CwP,QAAO,SAACC,EAAKC,GACZ,OAAOD,EAAMjL,GAASkL,EAAIpV,MAAOoV,EAAIzU,SAAUA,EAAU0J,KACxD,GACFgL,QAAQ,ICvEAC,GAAY,SAACjD,GACxB,OAAQA,GACN,KAAKd,GAAc,GACjB,OAAO8C,GAAeb,GAAQ,KAChC,KAAKjC,GAAc,GACjB,OAAOqD,GAAeL,GAAU,KAClC,QACE,OAAOJ,GAAcX,GAAQ,MAItB+B,GAAmB,SAAClD,GAC/B,OAAQA,GACN,KAAKd,GAAc,GACjB,OFUyB,WAC7B,IAAMkC,EAAOD,GAAQ,IAWrB,OATAC,EAAK3G,KAAL,MAAA2G,EAAI,YACC,IAAIC,MAAM,IACVC,KAAK,GACLlY,KACC,SAACmY,EAAGC,GAAJ,OACE,IAAItR,MAAK,IAAIA,MAAOC,UAAY,OAAuBqR,EAAQ,SAIhEQ,GAAeZ,GEtBX+B,GACT,KAAKjE,GAAc,GACjB,OFkDwB,WAC5B,IAAMkC,EAAOc,GAAU,IAAIL,UAEvBO,EAAOT,GACT,IAAIzR,KAAKyR,GAAS,IAAIzR,MAAQC,UAAY,SAS5C,OANA,IAAIkR,MAAM,GAAGC,KAAK,GAAGe,SAAQ,WAC3B,IAAMe,EAAOzB,GAAS,IAAIzR,KAAKkS,EAAKjS,UAAY,SAChDiR,EAAKiC,QAAQjB,GACbA,EAAOgB,KAGFb,GAAenB,EAAKS,WE/DhByB,GACT,QACE,OFTwB,WAC5B,IAAMlC,EAAOD,GAAQ,GAWrB,OATAC,EAAK3G,KAAL,MAAA2G,EAAI,YACC,IAAIC,MAAM,GACVC,KAAK,GACLlY,KACC,SAACmY,EAAGC,GAAJ,OACE,IAAItR,MAAK,IAAIA,MAAOC,UAAY,OAAuBqR,EAAQ,SAIhEM,GAAcV,GEHVmC,KCtBAC,GAAgB,SAAC3W,EAAgBmT,GAC5C,IAAMiC,EAAIpV,EAAKiJ,OAET2N,EAAIC,GAAQ7W,EAAM,GAClB8W,EAAKD,GAAQ7W,EAAM,GAEnB+W,EAAIC,GAAQhX,EAAM,GAClBiX,EAAKD,GAAQhX,EAAM,GAPsC,EAejCkX,GANf,CACb,CAAC9B,EAAGwB,GACJ,CAACA,EAAGE,IAEU,CAACC,EAAGE,IAEZE,EAfuD,EAevDA,IAAKC,EAfkD,EAelDA,MAAOC,EAf2C,EAe3CA,MAEpB,GAAY,IAARF,EAaF,MAAO,GAZP,IAAM7X,EAAI8X,EAAQD,EACZ7I,EAAI+I,EAAQF,EAElB,OAAQhE,GACN,KAAKd,GAAc,GACjB,OAAO,IAAImC,MAAM,IAAIC,KAAK,GAAGlY,KAAI,SAACmY,EAAG4C,GAAJ,SAAaA,EAAIhY,GAAKgP,GAAG6H,QAAQ,MACpE,KAAK9D,GAAc,GACjB,OAAO,IAAImC,MAAM,IAAIC,KAAK,GAAGlY,KAAI,SAACmY,EAAG4C,GAAJ,SAAaA,EAAIhY,GAAKgP,GAAG6H,QAAQ,MACpE,QACE,OAAO,IAAI3B,MAAM,IAAIC,KAAK,GAAGlY,KAAI,SAACmY,EAAG4C,GAAJ,SAAaA,EAAIhY,GAAKgP,GAAG6H,QAAQ,QAOpEU,GAAU,SAAC7W,EAAgBuX,GAAjB,OACdvX,EAAKgW,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMlC,KAAKwD,IAAIrB,EAAKqB,KAAM,IAEhDP,GAAU,SAAChX,EAAgBuX,GAAjB,OACdvX,EAAKzD,KAAI,SAACqa,EAAGG,GAAJ,OAAUA,EAAIhD,KAAKwD,IAAIX,EAAGW,MAAMvB,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,IAAK,IAErEgB,GAAe,SAACM,EAAoBC,GACxC,IAAMC,EAAMF,EAAO,GAAG,GAChBG,EAAMH,EAAO,GAAG,GAChBI,EAAMJ,EAAO,GAAG,GAChBK,EAAML,EAAO,GAAG,GAChBM,EAAKL,EAAQ,GACbM,EAAKN,EAAQ,GAQnB,MAAO,CAAEN,IANGO,EAAMG,EAAMF,EAAMC,EAMhBR,MAJAU,EAAKD,EAAMF,EAAMI,EAIVV,MAFPK,EAAMK,EAAKD,EAAKF,ICpDnBI,GAAyBte,aAAW,kBAC/CE,YAAa,CACX+Y,KAAM,CACJtZ,QAAS,OACTN,MAAO,SACPD,OAAQ,SAEV8Z,YAAa,CACXvZ,QAAS,OACTwZ,KAAM,EACNvJ,cAAe,SACfhQ,eAAgB,SAChBC,WAAY,eCUZ0e,GAAoB,CACxB7F,GAA2B,GAC3BA,GAA2B,GAC3BA,GAA2B,IAGhB8F,GAAoC,SAAC,GAAyB,IAAvBvb,EAAsB,EAAtBA,OAAQwO,EAAc,EAAdA,QACpDlR,EAAU+d,KAEVlW,EAAQ5D,IAAiB,SAAC4D,GAAD,OAAWA,KAEpCqW,EAAM/Z,GAAU8T,IALkD,EAOlC1N,oBAAS,GAPyB,mBAOjE4T,EAPiE,KAOnDC,EAPmD,KASlEhR,EAAc,kBAAMgR,GAAc,IAOlCC,EAAc,WAClB,IAAMC,EAA4B,CAAC,aAE/B1X,MAAOlE,EAAO+W,KACd1T,KAAM2V,GAAQ7T,EAAOnF,EAAO+W,KAAMvI,EAASxO,EAAOwW,SAC/Ce,GAASvX,EAAO+W,QAYvB,OARIuE,GAAkBO,SAAS7b,EAAOsW,aACpCsF,EAAS3K,KAAT,aACE/M,MAAOlE,EAAOsW,WACdjT,KAAM2V,GAAQ7T,EAAOnF,EAAOsW,WAAY9H,EAASxO,EAAOwW,SACrDe,GAASvX,EAAOsW,cAIhBsF,GAkBT,OACE,eAACpP,GAAA,EAAD,CAAM9O,UAAWJ,EAAQ0Y,KAAMnN,UAAW,EAA1C,UACE,eAAC4D,GAAA,EAAD,CAAa/O,UAAWJ,EAAQ2Y,YAAhC,UACE,cAAC,EAAD,CAAQ/Z,GAAIwI,GAAgBtI,MAAO,IAAKD,OAAQ,IAAhD,SACG6D,EAAOsW,aAAeb,GAA2B,GAChD,cAAC,QAAD,CACEpS,KAAM,CACJyY,OAAQpC,GAAiB1Z,EAAOwW,QAChCoF,SAvBgB,WAC5B,IAAMG,EAAUJ,IAWhB,OATAI,EAAQ9K,KAAR,aACE/M,MAAOlE,EAAOsW,WACdjT,KAAM2W,GACJhB,GAAQ7T,EAAOnF,EAAO+W,KAAMvI,EAASxO,EAAOwW,QAC5CxW,EAAOwW,SAENe,GAASvX,EAAOsW,cAGdyF,EAWeC,MAId,cAAC,QAAD,CACE3Y,KAAM,CACJyY,OAAQrC,GAAUzZ,EAAOwW,QACzBoF,SAAUD,SAKlB,8BACE,cAACxS,EAAA,EAAD,CAAQ3L,QAAQ,YAAYsL,MAAM,YAAYM,QA9DnC,kBAAMsS,GAAc,IA8D/B,yBAKJ,cAAC,GAAD,CACEjR,OAAQgR,EACR9P,YAAY,+CACZzO,MAAM,gBACNwN,YAAaA,EACbwC,aAvEe,WACnBsO,EAAIxb,EAAO9D,IACXwO,WCzCSuR,GAA+Blf,aAAW,SAACC,GAAD,OACrDC,YAAa,CACXmQ,UAAW,CACThR,MAAO,OACPe,OAAQH,EAAMI,QAAQ,SCIf8e,GAAsB,WACjC,IAAM5e,EAAU2e,KAER7c,EAAYmC,IAAiB,SAAC4D,GAAD,OAAWA,EAAMnF,UAA9CZ,QACFoP,EAAUf,KAEhB,OACE,eAACN,GAAA,EAAD,CACEzP,UAAWJ,EAAQ8P,UACnBA,WAAS,EACT/Q,QAAQ,aACRe,QAAS,EAJX,UAMGgC,EAAQQ,KAAI,SAACI,GAAD,OACX,cAACmN,GAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,GAAD,CAAerN,OAAQA,EAAQwO,QAASA,KAD1BxO,EAAO9D,OAIzB,cAACiR,GAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,GAAD,UCnBK8O,GAAY,WACvBjX,KAD6B,IAGrB5I,EAAsBC,4BAAkB,CAAEC,KAAMkI,KAAhDpI,kBAER,OACE,gCACE,cAAC,EAAD,CAAaY,MAAM,cAClBZ,EACC,cAAC,EAAD,CAAQJ,GAAIwI,KAEZ,cAAC,GAAD,QCTK0X,GAA4B,SAAC,GAA6B,IAAD,ECFrC,SAACC,EAAgBtW,GAAuB,IAAD,EAClC8B,oBAAS,GADyB,mBAC/DyU,EAD+D,KAClDC,EADkD,OAE5C1U,mBAAS,IAFmC,mBAE/D3K,EAF+D,KAExDwO,EAFwD,OAGhC7D,mBAAS,IAHuB,mBAG/D8D,EAH+D,KAGlDC,EAHkD,OAI5C/D,mBAAS,IAJmC,mBAI/D1D,EAJ+D,KAIxDkH,EAJwD,OAKtCxD,mBAAS9F,GAASqC,KALoB,mBAK/DU,EAL+D,KAKrD+G,EALqD,OAM5ChE,mBAAS,IANmC,mBAM/DI,EAN+D,KAMxDC,EANwD,KAOhE/F,EAAMV,GAAU4a,GAPgD,EAS9CxU,mBAAsB,IAAInB,MAToB,mBAS/DqF,EAT+D,KASzDyQ,EATyD,KAc9Dvc,EAASsB,IAAiB,SAAC4D,GAAD,OAAWA,EAAMlF,QAA3CA,KAQF2W,EAAmB,WACvBlL,EAAS,IACTE,EAAe,IACfP,EAAS,IACTQ,EAAY9J,GAASqC,KACrBmY,GAAa,IAGTzQ,EAAU,uCAAG,4BAAAnJ,EAAA,sEACGsD,uBAClBvC,IAAc,OAAJzD,QAAI,IAAJA,OAAA,EAAAA,EAAMyC,MAAO,GAAI,CACzBxF,QACAyO,cACAxH,MAAO+H,WAAW/H,GAClBW,SAAUD,GAAYC,GACtBgN,KAAM/F,EAAOA,EAAKpF,WAAY,IAAID,MAAOC,UACzCZ,aAEFrB,IAVe,OAYI,kBAXfuD,EADW,QAafC,EAASD,IAET9F,EAAI,CACFjG,GAAI+L,EAAM/L,GACV4V,KAAM/F,EAAOA,EAAKpF,WAAY,IAAID,MAAOC,UACzCzJ,QACAyO,cACA7G,WACAX,MAAO+H,WAAW/H,KAEpByS,KAvBe,2CAAH,qDA2BhB,MAAO,CACL0F,cACApf,QACAyO,cACAxH,QACAuH,WACAE,iBACAP,WACAvG,WACA+G,cAEAE,OACAC,iBA3DuB,SAACD,GACxByQ,EAAQzQ,IA4DR8K,gBAvDsB,WACtB0F,GAAa,IAuDb3F,mBACA9K,aAEA7D,QACAK,YAxDkB,kBAAMJ,EAAS,MDG/BuU,CArBgE,EAA1BJ,UAA0B,EAAftW,UAEnDuW,EAFkE,EAElEA,YACApf,EAHkE,EAGlEA,MACAyO,EAJkE,EAIlEA,YACAxH,EALkE,EAKlEA,MACAuH,EANkE,EAMlEA,SACAE,EAPkE,EAOlEA,eACAP,EARkE,EAQlEA,SACAvG,EATkE,EASlEA,SACA+G,EAVkE,EAUlEA,YAEAE,EAZkE,EAYlEA,KACAC,EAbkE,EAalEA,iBAEA4K,EAfkE,EAelEA,iBACA9K,EAhBkE,EAgBlEA,WACA+K,EAjBkE,EAiBlEA,gBAEA5O,EAnBkE,EAmBlEA,MACAK,EApBkE,EAoBlEA,YAGF,OACE,qCACE,cAAC,GAAD,CAAYc,QAASyN,IACrB,cAAC,GAAD,CACEpM,OAAQ6R,EACRpf,MAAOA,EACPyO,YAAaA,EACbxH,MAAOA,EACPuH,SAAUA,EACVE,eAAgBA,EAChBP,SAAUA,EACVX,YAAakM,EACb9R,SAAUA,EACV+G,YAAaA,EACbC,WAAYA,EACZC,KAAMA,EACNC,iBAAkBA,EAClB/D,MAAOA,EACPK,YAAaA,Q,UE/Bf+K,GAAyB,CAC7B,CAAEnX,GAAI,EAAGgI,MAAO,QAASoP,aAAa,EAAMC,SAAS,GACrD,CAAErX,GAAI,EAAGgI,MAAO,cAAeqP,SAAS,GACxC,CAAErX,GAAI,EAAGgI,MAAO,QAASqP,SAAS,GAClC,CAAErX,GAAI,EAAGgI,MAAO,aAAcqP,SAAS,IAG5BmJ,GAAoC,SAAC,GAAD,IAC/C3N,EAD+C,EAC/CA,QACAG,EAF+C,EAE/CA,MACAwB,EAH+C,EAG/CA,qBAH+C,OAK/C,cAACmD,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWzM,QAAQ,aAClB+L,GAAUzT,KAAI,SAACoU,GAAD,OACb,cAACD,GAAA,EAAD,CAEEE,MAAOD,EAAST,QAAU,QAAU,OACpCjM,QAAS0M,EAASV,YAAc,OAAS,UACzClK,QAASsH,EAAqBsD,EAAS9X,IAJzC,SAME,cAACgY,GAAA,EAAD,CAAgBC,OAAQpF,IAAYiF,EAAS9X,GAAIkY,UAAWlF,EAA5D,SACG8E,EAAS9P,SANP8P,EAAS9X,aCnBXygB,GAAoC,SAAC,GAM3C,IALLhZ,EAKI,EALJA,OACAiZ,EAII,EAJJA,WACA5M,EAGI,EAHJA,YACA4G,EAEI,EAFJA,iBACA7Q,EACI,EADJA,SACI,EACsB8B,oBAAe,OAANlE,QAAM,IAANA,OAAA,EAAAA,EAAQzG,QAAS,IADhD,mBACGA,EADH,KACUwO,EADV,OAEkC7D,oBAAe,OAANlE,QAAM,IAANA,OAAA,EAAAA,EAAQgI,cAAe,IAFlE,mBAEGA,EAFH,KAEgBC,EAFhB,OAGsB/D,oBAAe,OAANlE,QAAM,IAANA,OAAA,EAAAA,EAAQQ,MAAMmT,aAAc,IAH3D,mBAGGnT,EAHH,KAGUkH,EAHV,OAI4BxD,oBAAe,OAANlE,QAAM,IAANA,OAAA,EAAAA,EAAQmB,WAAY/C,GAASqC,KAJlE,mBAIGU,EAJH,KAIa+G,EAJb,OAKoBhE,oBAAe,OAANlE,QAAM,IAANA,OAAA,EAAAA,EAAQmB,WAAY/C,GAASqC,KAL1D,mBAKG2H,EALH,KAKSyQ,EALT,OAMsB3U,mBAAS,IAN/B,mBAMGI,EANH,KAMUC,EANV,KAWIjI,EAASsB,IAAiB,SAAC4D,GAAD,OAAWA,EAAMlF,QAA3CA,KAER+F,qBAAU,WACR0F,GAAe,OAAN/H,QAAM,IAANA,OAAA,EAAAA,EAAQzG,QAAS,IAC1B0O,GAAqB,OAANjI,QAAM,IAANA,OAAA,EAAAA,EAAQgI,cAAe,IACtCN,GAAe,OAAN1H,QAAM,IAANA,OAAA,EAAAA,EAAQQ,MAAMmT,aAAc,IACrCzL,GAAkB,OAANlI,QAAM,IAANA,OAAA,EAAAA,EAAQmB,WAAY/C,GAASqC,KACzCoY,EAAQ,IAAI9V,MAAW,OAAN/C,QAAM,IAANA,OAAA,EAAAA,EAAQmO,OAAQpL,KAAKmW,UACrC,CAAClZ,IAEJ,IAAMmI,EAAU,uCAAG,sBAAAnJ,EAAA,sEACXsD,uBACJpC,IAAe,OAAJ5D,QAAI,IAAJA,OAAA,EAAAA,EAAMyC,MAAO,GAAI,CAC1BxF,QACAyO,cACAxH,MAAO+H,WAAW/H,GAClBW,SAAUD,GAAYC,GACtBgN,KAAM/F,EAAKpF,UACXZ,WACA7J,GAAE,OAAEyH,QAAF,IAAEA,OAAF,EAAEA,EAAQzH,KAEdwI,IAXe,OAajBkY,EAAW,CACT1f,QACAyO,cACAxH,MAAO+H,WAAW/H,GAClBW,WACAgN,KAAM/F,EAAKpF,UACXzK,IAAU,OAANyH,QAAM,IAANA,OAAA,EAAAA,EAAQzH,KAAMyI,OAEpBiS,IArBiB,2CAAH,qDAwBhB,OAAKjT,EAKH,cAAC,GAAD,CACE8G,OAAQuF,EACR9S,MAAOA,EACPyO,YAAaA,EACbxH,MAAOA,EACPuH,SAAUA,EACVE,eAAgBA,EAChBP,SAAUA,EACVX,YAAakM,EACb9R,SAAUA,EACV+G,YAAaA,EACbC,WAAYA,EACZC,KAAMA,EACNC,iBAtDqB,SAACD,GAAD,OAAuByQ,EAAQzQ,IAuDpD9D,MAAOA,EACPK,YA1DgB,kBAAMJ,EAAS,OAuC1B,MClDE4U,GAAwB,SAAC,GAU/B,IATL5gB,EASI,EATJA,GACAgB,EAQI,EARJA,MACAyO,EAOI,EAPJA,YACAxH,EAMI,EANJA,MACAuN,EAKI,EALJA,aACAR,EAII,EAJJA,kBACA1C,EAGI,EAHJA,QACAsD,EAEI,EAFJA,KACAhN,EACI,EADJA,SAEMxH,EAAU0U,KAEhB,OACE,eAAC8B,GAAA,EAAD,CAAUe,OAAK,EAACC,UAAW,EAAGC,KAAK,WAAnC,UACE,cAAChB,GAAA,EAAD,CAAWzM,QAAQ,WAAnB,SACE,cAAC6B,EAAA,EAAD,CACE6L,gBAAc,kBACdC,gBAAc,OACdvX,UAAWJ,EAAQoK,OACnB0B,QAAS8H,EAAkBhV,GAJ7B,SAME,cAACgZ,GAAA,EAAD,CAAWxX,UAAWJ,EAAQ6U,oBAGlC,cAAC4B,GAAA,EAAD,CAAWtW,UAAU,KAAK0X,MAAM,MAAM7N,QAAQ,OAA9C,SACGpK,IAEH,cAAC6W,GAAA,EAAD,CAAWE,MAAM,OAAjB,SAAyBtI,IACzB,cAACoI,GAAA,EAAD,CAAWE,MAAM,QAAjB,SACE,eAAC,EAAD,CAAQ/X,GAAIwI,GAAgBvI,OAAQ,GAAIE,QAAQ,WAAhD,UACGgS,GAASlK,EAAOW,EAAU4M,EAAclD,GAASgL,QAAQ,GAAI,IAC7D3U,GAAY6M,QAGjB,eAACqC,GAAA,EAAD,CAAWE,MAAM,QAAjB,UACG,IAAIvN,KAAKoL,GAAMiL,mBAAmB,SADrC,KACiD,IAC9C,IAAIrW,KAAKoL,GAAMkL,mBAAmB,gBC/B9BC,GAA4B,SAAC,GAKnC,IAJL5Z,EAII,EAJJA,KACAsL,EAGI,EAHJA,aACAiO,EAEI,EAFJA,WACA7W,EACI,EADJA,SAEMzI,EAAU0U,KADZ,EA6BAtD,GAAkB,CAAEC,iBAzBtBE,EAJE,EAIFA,KACAE,EALE,EAKFA,QACAG,EANE,EAMFA,MACAuB,EAPE,EAOFA,YACAC,EARE,EAQFA,qBACAG,EATE,EASFA,wBACAE,EAVE,EAUFA,iBAEAb,EAZE,EAYFA,aACAgB,EAbE,EAaFA,kBACAZ,EAdE,EAcFA,gBAEAc,EAhBE,EAgBFA,iBACAb,EAjBE,EAiBFA,mBACAC,EAlBE,EAkBFA,mBACAV,EAnBE,EAmBFA,cAEAuB,EArBE,EAqBFA,eACAC,EAtBE,EAsBFA,gBACAtB,EAvBE,EAuBFA,YAEAuB,EAzBE,EAyBFA,gBAEAzM,EA3BE,EA2BFA,SACA+G,EA5BE,EA4BFA,YAGI2C,EAAUf,KAMhB,OAJ8BlR,4BAAkB,CAC9CC,KAAMkI,KADApI,kBAKN,cAAC,EAAD,CAAQJ,GAAIwI,KAEZ,eAACkE,EAAA,EAAD,WACE,cAAC6K,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACEhW,UAAWJ,EAAQ2U,MACnBnH,kBAAgB,aAChB6I,KAAK,SACLC,aAAW,iBAJb,UAME,cAAC,GAAD,CACEsJ,SAAU7Z,EAAKiJ,OACf6Q,YAAa,EACbpO,QAASA,EACTG,MAAOA,EACPwB,qBAAsBA,IAExB,cAAC2D,GAAA,EAAD,UACGhR,EACEiR,KAAK7C,GAAWvC,EAAOH,EAASjK,EAAU0J,IAC1CoB,OAAOf,EAAO,GAAK4B,EAAa5B,EAAO4B,GACvC7Q,KAAI,SAAC2U,GAAD,OACH,wBAAC,GAAD,2BACMA,GADN,IAEE7C,aAAc5M,EACdoM,kBAAmBA,EACnB7Q,IAAKkU,EAAIrY,GACTsS,QAASA,eAOrB,sBAAK9Q,UAAWJ,EAAQ8U,YAAxB,UACE,sBAAK1U,UAAWJ,EAAQwH,SAAxB,UACE,cAACvH,EAAA,EAAD,+BACA,qBAAKG,UAAWJ,EAAQgV,eAAxB,SACE,cAAC,GAAD,CACElH,KAAMnH,GACNE,MAAOW,EACPuG,SAAUQ,SAIhB,cAACuR,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5B1E,MAAOtV,EAAKiJ,OACZmE,YAAaA,EACb5B,KAAMA,EAAO,EACbpR,UAAU,MACV6f,aAAcvM,EACdwM,oBAAqB1M,OAGzB,eAAC2D,GAAA,EAAD,CACEtY,GAAG,kBACHuY,SAAUvE,EACVwE,aAAW,EACX9J,KAAM+J,QAAQzE,GACdrF,QAASyF,EALX,UAOE,cAAC9E,GAAA,EAAD,CAAUpC,QAASiI,EAAnB,kBACA,cAAC7F,GAAA,EAAD,CAAUpC,QAASgI,EAAnB,uBAEF,cAAC,GAAD,CACE3G,OAAQqF,EACRnE,YAAY,sCACZzO,MAAM,SACNwN,YAAa8F,EACbtD,aAAcqD,IAEhB,cAAC,GAAD,CACEqG,iBAAkBtF,EAClBsL,WAAYA,EACZjZ,OAAQ4N,EAAgBlO,GACxB2M,YAAaA,EACbjK,SAAUA,QClJLyX,GAAkBzgB,aAAW,SAACC,GAAD,OACxCC,YAAa,CACX8J,OAAQ,CACN0W,aAAczgB,EAAMI,QAAQ,SCIrBsgB,GAAS,WAAO,IACnBpf,EAAYiD,IAAiB,SAAC4D,GAAD,OAAWA,EAAM5F,UAA9CjB,QACFqQ,EAAelN,GAAUS,GAAcG,QACvCua,EAAanb,GAAUS,GAAcE,QACrC9E,EAAUkgB,KAEhB,OACE,sBAAK9f,UAAWJ,EAAQyJ,OAAxB,UACE,cAAC,EAAD,CAAa7J,MAAM,WACnB,cAAC,GAAD,CAAWmf,UAAWna,GAAcC,IAAK4D,UAAQ,IACjD,cAAC,GAAD,CACE1C,KAAM/E,EACNqQ,aAAcA,EACdiO,WAAYA,EACZ7W,UAAQ,QCrBH4X,GAAmB5gB,aAAW,SAACC,GAAD,OACzCC,YAAa,CACX8J,OAAQ,CACN0W,aAAczgB,EAAMI,QAAQ,SCIrBwgB,GAAU,WAAO,IACpBjf,EAAa4C,IAAiB,SAAC4D,GAAD,OAAWA,EAAMpF,WAA/CpB,SACFgQ,EAAelN,GAAUc,GAAeF,QACxCua,EAAanb,GAAUc,GAAeH,QACtC9E,EAAUqgB,KAEhB,OACE,sBAAKjgB,UAAWJ,EAAQyJ,OAAxB,UACE,cAAC,EAAD,CAAa7J,MAAM,YACnB,cAAC,GAAD,CAAWmf,UAAW9Z,GAAeJ,IAAK4D,UAAU,IACpD,cAAC,GAAD,CACE1C,KAAM1E,EACNgQ,aAAcA,EACdiO,WAAYA,EACZ7W,UAAU,QCrBL8X,GAAmB9gB,aAAW,SAACC,GAAD,OACzCC,YAAa,CACX8J,OAAQ,CACN0W,aAAczgB,EAAMI,QAAQ,IAE9BmK,MAAO,CACLuW,SAAU,IACVphB,QAAS,QACT+K,aAAczK,EAAMI,QAAQ,GAC5BmV,WAAYvV,EAAMI,QAAQ,IAE5B0H,SAAU,CACR1I,MAAO,IACPM,QAAS,OACTE,WAAY,SACZD,eAAgB,gBAChB4V,WAAYvV,EAAMI,QAAQ,IAE5BkV,eAAgB,CACd3K,UAAW3K,EAAMI,SAAS,GAC1BmV,WAAYvV,EAAMI,QAAQ,IAE5BqV,QAAS,CACPrW,MAAO,IACPM,QAAS,OACTE,WAAY,SACZD,eAAgB,gBAChB4V,WAAYvV,EAAMI,QAAQ,GAC1BuK,UAAW3K,EAAMI,QAAQ,SCTlB2gB,GAAU,WAAO,IAAD,QACrBzgB,EAAUugB,KACR5d,EAASsB,IAAiB,SAAC4D,GAAD,OAAWA,EAAMlF,QAA3CA,KAEFoF,EAAS5D,GAAUI,IACnBuD,EAAQ3D,GAAUI,IALG,EAOHgG,mBAAQ,iBAAC5H,QAAD,IAACA,OAAD,EAACA,EAAMoG,YAAP,QAAe,IAPpB,mBAOpBA,EAPoB,KAOdkH,EAPc,OAQD1F,mBAAQ,iBAAC5H,QAAD,IAACA,OAAD,EAACA,EAAMkG,aAAP,QAAgB,IARvB,mBAQpBA,EARoB,KAQb2B,EARa,OASKD,mBAAQ,iBAAC5H,QAAD,IAACA,OAAD,EAACA,EAAMmG,gBAAP,QAAmB,IAThC,mBASpBA,EAToB,KASVoH,EATU,OAUK3F,mBAAS5C,GAAa,OAAChF,QAAD,IAACA,OAAD,EAACA,EAAM6E,WAVlC,mBAUpBA,EAVoB,KAUV+G,EAVU,OAaDhE,mBAAS,IAbR,mBAapBI,EAboB,KAabC,EAba,KAerBI,EAAc,kBAAMJ,EAAS,KAfR,EAiBWL,oBAAS,GAjBpB,mBAiBpB8K,EAjBoB,KAiBNC,EAjBM,KAmB3B5M,qBAAU,WAAO,IAAD,EACdgY,GAAgB,OAAJ/d,QAAI,IAAJA,GAAA,UAAAA,EAAMqG,gBAAN,eAAgBgR,aAAc,MACzC,QAACrX,QAAD,IAACA,OAAD,EAACA,EAAMqG,WArBiB,MAuBKuB,oBAAa,OAAJ5H,QAAI,IAAJA,GAAA,UAAAA,EAAMqG,gBAAN,eAAgBgR,aAAc,IAvB5C,mBAuBpBhR,EAvBoB,KAuBV0X,EAvBU,KAyBrBzV,EAAkB,SAAC6D,GAAD,OAAqC,SAC3D3D,GAEA,IAAMC,EAAID,EAAME,OAAOxE,MAEvBiI,EAAO1D,KA6BHuV,EAAY,uCAAG,8BAAAtb,EAAA,6DACbub,EAAI,CACRxb,KAAS,OAAJzC,QAAI,IAAJA,OAAA,EAAAA,EAAMyC,MAAO,GAClBoC,SAAUD,GAAYC,GACtBqB,QACAE,OACAD,WACApB,SAAUD,GAAaf,GAASQ,IAChC8B,UAAWA,GARM,SAWHL,uBAAaM,GAAW2X,EAAG9Y,GAAQV,IAXhC,OAWbyZ,EAXa,OAYnBjW,EAASiW,GAEJA,GAAKD,EAAE/X,SAAF,OAAYlG,QAAZ,IAAYA,OAAZ,EAAYA,EAAMkG,SAC1Bd,IACA+Y,MAAM,4CAhBW,2CAAH,qDAoBlB,OACE,sBAAK1gB,UAAWJ,EAAQyJ,OAAxB,UACE,cAAC,EAAD,CAAa7J,MAAM,YACnB,cAACK,EAAA,EAAD,CACEG,UAAWJ,EAAQiK,MACnBuB,MAAM,QACNtL,QAAQ,QACRC,UAAU,IAJZ,SAMGwK,IAEH,cAACc,EAAA,EAAD,CACErL,UAAWJ,EAAQiK,MACnByB,WAAS,EACT9M,GAAG,OACHgI,MAAM,OACNC,MAAOkC,EACP6C,SAAUX,EAAgBgF,GAC1BtE,QAASX,IAEX,cAACS,EAAA,EAAD,CACErL,UAAWJ,EAAQiK,MACnByB,WAAS,EACT9M,GAAG,QACHgI,MAAM,QACNC,MAAOgC,EACP+C,SAAUX,EAAgBT,GAC1BmB,QAASX,IAEX,cAACS,EAAA,EAAD,CACErL,UAAWJ,EAAQiK,MACnByB,WAAS,EACT9M,GAAG,WACHgI,MAAM,WACNC,MAAOiC,EACP8C,SAAUX,EAAgBiF,GAC1BvE,QAASX,IAEX,cAACS,EAAA,EAAD,CACErL,UAAWJ,EAAQiK,MACnByB,WAAS,EACTtJ,KAAK,SACLwE,MAAM,WACNC,MAAOmC,EACP4C,SA9EuB,SAC3BT,GAEA,IAAMC,EAAID,EAAME,OAAOxE,MACvB,GAAU,KAANuE,EACF,OAAOsV,EAAYtV,GAErB,IAAMvE,EAAQ2K,SAASpG,GACvB,GAAIvE,EAAQ,EACV,OAAO6Z,EAAY,KAErBA,EAAY7Z,EAAMmT,SAAS,MAoEvBrO,QAASX,IAEX,sBAAK5K,UAAWJ,EAAQwH,SAAxB,UACE,cAACvH,EAAA,EAAD,+BACA,qBAAKG,UAAWJ,EAAQgV,eAAxB,SACE,cAAC,GAAD,CAAQlH,KAAMnH,GAAcE,MAAOW,EAAUuG,SAAUQ,SAU3D,cAAC,GAAD,CACEpB,OAAQkI,EACRhH,YAAY,oCACZzO,MAAM,SACNwN,YA1GqB,WACzBkI,GAAc,IA0GV1F,aA/Ge,WACnB7H,OAiHE,cAAC,EAAD,CAAQnJ,GAAIwI,GAAiBtI,MAAO,IAAKD,OAAQ,GAAjD,SACE,sBAAKuB,UAAWJ,EAAQmV,QAAxB,UACE,cAACtJ,EAAA,EAAD,CACE3L,QAAQ,YACRsL,MAAM,YACNM,QA/Ge,WACvBwJ,GAAc,IA2GR,oBAOA,cAACzJ,EAAA,EAAD,CAAQ3L,QAAQ,YAAYsL,MAAM,UAAUM,QAAS6U,EAArD,2BCpKGI,GAAY,WAGvB,OAFkB9c,IAAiB,SAAC4D,GAAD,OAAWA,EAAMhF,SAA5CA,MAGC,cAAC,GAAD,IAIP,sBAAKzC,UAAU,MAAf,UACE,cAAC,GAAD,IACA,sBAAMjB,MAAO,CAAEL,MAAO,QAAtB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkiB,OAAK,EAACC,KAAM1X,GAAkBpJ,UAAW0e,KAEhD,cAAC,IAAD,CAAOoC,KAAI,UAAK1X,GAAL,QAA0BpJ,UAAWigB,KAChD,cAAC,IAAD,CAAUa,KAAM1X,GAAegD,GAAE,UAAKhD,GAAL,QAEjC,cAAC,IAAD,CAAO0X,KAAI,UAAK1X,GAAL,QAA2BpJ,UAAWmgB,KACjD,cAAC,IAAD,CAAUW,KAAM1X,GAAgBgD,GAAE,UAAKhD,GAAL,QAElC,cAAC,IAAD,CAAO0X,KAAM1X,GAAgByX,OAAK,EAAC7gB,UAAWsgB,c,6BCvBlDS,GAAYzhB,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwhB,KAAM,CACJ,UAAW,CACTthB,OAAQH,EAAMI,QAAQ,UAMjBshB,GAAiB,SAAC,GAAkB,IAAhBziB,EAAe,EAAfA,SACzBqB,EAAUkhB,KAehB,OAbAxY,qBAAU,WACR,IAAM2Y,EAAOC,mBACX,2DACAC,SAASC,cAAc,sBAGzB,OAAO,WACLH,EAAKI,WAAYC,YAAYL,MAE9B,IAEHzZ,KAGE,cAAC,KAAD,UACE,cAAC,KAAD,CAAyB+Z,MAAOC,KAAhC,SACE,qBAAKxhB,UAAWJ,EAAQmhB,KAAxB,SAA+BxiB,SC/B1BkjB,GAAM,kBACjB,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,WCPRC,IAASC,OAAO,cAAC,GAAD,IAASR,SAASS,eAAe,W","file":"static/js/main.0e7fc98a.chunk.js","sourcesContent":["import { CircularProgress } from '@material-ui/core';\nimport { FC } from 'react';\nimport { usePromiseTracker } from 'react-promise-tracker';\n\ninterface ILoader {\n  id: string;\n  height?: number;\n  width?: number;\n  justify?: string;\n}\n\nexport const Loader: FC<ILoader> = ({\n  children,\n  id,\n  height,\n  width,\n  justify,\n}) => {\n  const { promiseInProgress } = usePromiseTracker({ area: id });\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: justify ?? 'center',\n        alignItems: 'center',\n        height: height ?? 30,\n        width,\n      }}\n    >\n      {promiseInProgress ? <CircularProgress /> : children}\n    </div>\n  );\n};\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nexport const useScreenTitleStyles = makeStyles((theme) =>\n  createStyles({\n    title: {\n      margin: theme.spacing(2),\n    },\n  })\n);\n","import { Divider, Typography } from '@material-ui/core';\nimport { FC } from 'react';\n\nimport { useScreenTitleStyles } from './screen-title.styles';\n\ninterface IScreenTitle {\n  title: string;\n}\n\nexport const ScreenTitle: FC<IScreenTitle> = ({ title }) => {\n  const classes = useScreenTitleStyles();\n\n  return (\n    <div>\n      <Typography variant=\"h2\" component=\"h1\" className={classes.title}>\n        {title}\n      </Typography>\n      <Divider />\n    </div>\n  );\n};\n","export const ADMIN_ACTIONS = <const>{\n  LOGIN: '@ADMIN/LOGIN',\n  LOGOUT: '@ADMIN/LOGOUT',\n  USERS: '@ADMIN/USERS',\n  DELETE: '@ADMIN/DELETE',\n  ADD: '@ADMIN/ADD',\n};\n\nexport interface IAdmin {\n  jwt: string;\n}\n\nexport interface IUserInfo {\n  email: string;\n  name: string;\n  id: string;\n}\nexport interface IAdminRedux {\n  admin?: IAdmin;\n  users: IUserInfo[];\n}\n\nexport const INIT_ADMIN: IAdminRedux = {\n  users: [],\n};\n","import { TAdminActions } from './admin.actions';\n\nimport { ADMIN_ACTIONS, IAdminRedux, INIT_ADMIN } from './admin.constants';\n\nconst { LOGIN, LOGOUT, USERS, DELETE, ADD } = ADMIN_ACTIONS;\n\nexport const reducerAdmin = (\n  state = INIT_ADMIN,\n  action: TAdminActions\n): IAdminRedux => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        admin: action.payload,\n      };\n\n    case USERS:\n      return {\n        ...state,\n        users: action.payload,\n      };\n\n    case DELETE:\n      return {\n        ...state,\n        users: state.users.filter(({ id }) => id !== action.payload),\n      };\n\n    case ADD:\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      };\n\n    case LOGOUT:\n      return INIT_ADMIN;\n\n    default:\n      return state ?? INIT_ADMIN;\n  }\n};\n","\n\nexport const INCOME_ACTIONS = <const>{\n  ADD: '@INCOME/ADD',\n  UPDATE: '@INCOME/UPDATE',\n  DELETE: '@INCOME/DELETE',\n  SET: '@INCOME/SET',\n};\n\nexport interface IIncomeRedux {\n  incomes: IRecord[];\n}\n\nexport const INIT_INCOME: IIncomeRedux = {\n  incomes: [],\n};\n","import { TIncomeActions } from './income.actions';\n\nimport { IIncomeRedux, INCOME_ACTIONS, INIT_INCOME } from './income.constants';\n\nconst { ADD, UPDATE, DELETE, SET } = INCOME_ACTIONS;\n\nexport const reducerIncome = (\n  state = INIT_INCOME,\n  action: TIncomeActions\n): IIncomeRedux => {\n  switch (action.type) {\n    case ADD:\n      return {\n        incomes: [...state.incomes, action.payload],\n      };\n\n    case UPDATE:\n      return {\n        incomes: state.incomes.map((el) => {\n          if (el.id === action.payload.id) {\n            return action.payload;\n          }\n          return el;\n        }),\n      };\n\n    case DELETE:\n      return {\n        incomes: state.incomes.filter(({ id }) => id !== action.payload),\n      };\n\n    case SET:\n      return {\n        incomes: [...action.payload],\n      };\n\n    default:\n      return state ?? INIT_INCOME;\n  }\n};\n","\n\nexport const OUTCOME_ACTIONS = <const>{\n  ADD: '@OUTCOME/ADD',\n  UPDATE: '@OUTCOME/UPDATE',\n  DELETE: '@OUTCOME/DELETE',\n  SET: '@OUTCOME/SET',\n};\n\nexport interface IOutcomeRedux {\n  outcomes: IRecord[];\n}\n\nexport const INIT_OUTCOME: IOutcomeRedux = {\n  outcomes: [],\n};\n","import { TOutcomeActions } from './outcome.actions';\n\nimport {\n  INIT_OUTCOME, IOutcomeRedux, OUTCOME_ACTIONS\n} from './outcome.constants';\n\nconst { ADD, UPDATE, DELETE, SET } = OUTCOME_ACTIONS;\n\nexport const reducerOutcome = (\n  state = INIT_OUTCOME,\n  action: TOutcomeActions\n): IOutcomeRedux => {\n  switch (action.type) {\n    case ADD:\n      return {\n        outcomes: [...state.outcomes, action.payload],\n      };\n\n    case UPDATE:\n      return {\n        outcomes: state.outcomes.map((el) => {\n          if (el.id === action.payload.id) {\n            return action.payload;\n          }\n          return el;\n        }),\n      };\n\n    case DELETE:\n      return {\n        outcomes: state.outcomes.filter(({ id }) => id !== action.payload),\n      };\n\n    case SET:\n      return {\n        outcomes: [...action.payload],\n      };\n\n    default:\n      return state ?? INIT_OUTCOME;\n  }\n};\n","export const SETTING_ACTIONS = <const>{\n  GET: '@SETTING/GET',\n};\n\nexport interface ISettingRedux {\n  settings: ISetting[];\n}\n\nexport const INIT_SETTING: ISettingRedux = {\n  settings: [],\n};\n","import { TSettingActions } from './setting.actions';\n\nimport {\n  INIT_SETTING, ISettingRedux, SETTING_ACTIONS\n} from './setting.constants';\n\nconst { GET } = SETTING_ACTIONS;\n\nexport const reducerSetting = (\n  state = INIT_SETTING,\n  action: TSettingActions\n): ISettingRedux => {\n  switch (action.type) {\n    case GET:\n      return {\n        settings: [...action.payload],\n      };\n\n    default:\n      return state ?? INIT_SETTING;\n  }\n};\n","export const USER_ACTIONS = <const>{\n  LOGIN: '@USER/LOGIN',\n  LOGOUT: '@USER/LOGOUT',\n};\n\nexport interface IUserRedux {\n  user?: IUser;\n}\n\nexport const INIT_USER: IUserRedux = {};\n","import { TUserActions } from './user.actions';\n\nimport { INIT_USER, IUserRedux, USER_ACTIONS } from './user.constants';\n\nconst { LOGIN, LOGOUT } = USER_ACTIONS;\n\nexport const reducerUser = (\n  state = INIT_USER,\n  action: TUserActions\n): IUserRedux => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        user: action.payload,\n      };\n\n    case LOGOUT:\n      return INIT_USER;\n\n    default:\n      return state ?? INIT_USER;\n  }\n};\n","\n\nexport const VIDGET_ACTIONS = <const>{\n  ADD: '@VIDGET/ADD',\n  DELETE: '@VIDGET/DELETE',\n};\n\nexport interface IVidgetRedux {\n  vidgets: IVidget[];\n}\n\nexport const INIT_VIDGET: IVidgetRedux = {\n  vidgets: [],\n};\n","import { TUserActions } from '../user';\n\nimport { TVidgetActions } from './vidget.actions';\n\nimport { INIT_VIDGET, IVidgetRedux, VIDGET_ACTIONS } from './vidget.constants';\n\nconst { ADD, DELETE } = VIDGET_ACTIONS;\n\nexport const reducerVidget = (\n  state = INIT_VIDGET,\n  action: TVidgetActions | TUserActions\n): IVidgetRedux => {\n  switch (action.type) {\n    case ADD:\n      return {\n        vidgets: [...state.vidgets, action.payload],\n      };\n\n    case DELETE:\n      return {\n        vidgets: state.vidgets.filter(({ id }) => id !== action.payload),\n      };\n\n    default:\n      return state ?? INIT_VIDGET;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport { TAdminActions } from './admin';\nimport { TIncomeActions } from './income';\nimport { TOutcomeActions } from './outcome';\nimport { TSettingActions } from './setting';\nimport { TUserActions } from './user';\nimport { TVidgetActions } from './vidget';\n\nimport { reducerAdmin } from './admin/admin.reducer';\nimport { reducerIncome } from './income/income.reducer';\nimport { reducerOutcome } from './outcome/outcome.reducer';\nimport { reducerSetting } from './setting/setting.reducer';\nimport { reducerUser } from './user/user.reducer';\nimport { reducerVidget } from './vidget/vidget.reducer';\n\nimport { IAdminRedux } from './admin/admin.constants';\nimport { IIncomeRedux } from './income/income.constants';\nimport { IOutcomeRedux } from './outcome/outcome.constants';\nimport { ISettingRedux } from './setting/setting.constants';\nimport { IUserRedux } from './user/user.constants';\nimport { IVidgetRedux } from './vidget/vidget.constants';\n\nexport interface IReduxStore {\n  income: IIncomeRedux;\n  outcome: IOutcomeRedux;\n  vidget: IVidgetRedux;\n  user: IUserRedux;\n  setting: ISettingRedux;\n  admin: IAdminRedux;\n}\n\nexport type TActions =\n  | TIncomeActions\n  | TOutcomeActions\n  | TVidgetActions\n  | TUserActions\n  | TSettingActions\n  | TAdminActions;\n\nexport const rootReducer = combineReducers({\n  income: reducerIncome,\n  outcome: reducerOutcome,\n  vidget: reducerVidget,\n  user: reducerUser,\n  setting: reducerSetting,\n  admin: reducerAdmin,\n}) as any;\n","import React, { FC } from 'react';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\n\nimport { IReduxStore, rootReducer, TActions } from './reducers';\n\nconst PERSIST_CONFIG = {\n  key: 'fe',\n  storage,\n};\n\nconst reducer = persistReducer(PERSIST_CONFIG, rootReducer);\nconst middleware = [thunk as ThunkMiddleware<IReduxStore, TActions>];\nconst addMiddleware = composeWithDevTools(applyMiddleware(...middleware));\n\nexport const REDUX_STORE = createStore(reducer, addMiddleware);\nexport const PERSISTOR = persistStore(REDUX_STORE);\n\nexport const ReduxProvider: FC = (props) => (\n  <Provider store={REDUX_STORE}>\n    <PersistGate loading={null} persistor={PERSISTOR}>\n      {props.children}\n    </PersistGate>\n  </Provider>\n);\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport { IReduxStore } from './reducers';\n\nexport type TActionCombiner<T> = T extends { [key: string]: infer U }\n  ? U\n  : never;\n\nexport function action<T extends string, P>(\n  type: T,\n  payload: P\n): { type: T; payload: P };\n\nexport function action<T extends string>(type: T): { type: T };\n\nexport function action<T extends string, P = undefined>(type: T, payload?: P) {\n  return { type, payload } as any;\n}\n\nexport const useReduxSelector: TypedUseSelectorHook<IReduxStore> = useSelector;\n\nexport const useAction = <T extends (...args: any[]) => any>(action: T) => {\n  const dispatch = useDispatch();\n  return (...args: Parameters<T>) => {\n    dispatch(action(...args));\n  };\n};\n","import { action, TActionCombiner } from '../utils';\n\nimport { ADMIN_ACTIONS, IAdmin, IUserInfo } from './admin.constants';\n\nconst { LOGIN, LOGOUT, USERS, DELETE, ADD } = ADMIN_ACTIONS;\n\nexport const AdminActions = {\n  login: (admin: IAdmin) => action(LOGIN, admin),\n  logout: () => action(LOGOUT),\n  getUsers: (users: IUserInfo[]) => action(USERS, users),\n  delete: (id: string) => action(DELETE, id),\n  add: (user: IUserInfo) => action(ADD, user),\n};\n\nexport type TAdminActions = ReturnType<TActionCombiner<typeof AdminActions>>;\n","import { action, TActionCombiner } from '../utils';\n\nimport { USER_ACTIONS } from './user.constants';\n\nconst { LOGIN, LOGOUT } = USER_ACTIONS;\n\nexport const UserActions = {\n  login: (user: IUser) => action(LOGIN, user),\n  logout: () => action(LOGOUT),\n};\n\nexport type TUserActions = ReturnType<TActionCombiner<typeof UserActions>>;\n","import { config } from 'dotenv';\n\nconfig();\n\nexport const CONFIG = {\n  CURRENCY_API: process.env.REACT_APP_CURRENCY_API || '',\n  API: process.env.REACT_APP_API || '',\n};\n","export enum Currency {\n  USD,\n  UAH,\n  EUR,\n}\n\ninterface ICurrency {\n  label: string;\n  value: Currency;\n}\n\nexport const CurrencyList: ICurrency[] = [\n  { label: 'USD', value: Currency.USD },\n  { label: 'UAH', value: Currency.UAH },\n  { label: 'EUR', value: Currency.EUR },\n];\n","import { action, TActionCombiner } from '../utils';\n\nimport { INCOME_ACTIONS } from './income.constants';\n\nconst { ADD, UPDATE, DELETE, SET } = INCOME_ACTIONS;\n\nexport const IncomeActions = {\n  add: (income: IRecord) => action(ADD, income),\n  update: (income: IRecord) => action(UPDATE, income),\n  delete: (id: string) => action(DELETE, id),\n  set: (incomes: IRecord[]) => action(SET, incomes)\n};\n\nexport type TIncomeActions = ReturnType<TActionCombiner<typeof IncomeActions>>;\n","import { action, TActionCombiner } from '../utils';\n\nimport { OUTCOME_ACTIONS } from './outcome.constants';\n\nconst { ADD, UPDATE, DELETE, SET } = OUTCOME_ACTIONS;\n\nexport const OutcomeActions = {\n  add: (outcome: IRecord) => action(ADD, outcome),\n  update: (outcome: IRecord) => action(UPDATE, outcome),\n  delete: (id: string) => action(DELETE, id),\n  set: (outcomes: IRecord[]) => action(SET, outcomes)\n};\n\nexport type TOutcomeActions = ReturnType<TActionCombiner<typeof OutcomeActions>>;\n","import { action, TActionCombiner } from '../utils';\n\nimport { SETTING_ACTIONS } from './setting.constants';\n\nconst { GET } = SETTING_ACTIONS;\n\nexport const SettingActions = {\n  get: (settings: ISetting[]) => action(GET, settings),\n};\n\nexport type TSettingActions = ReturnType<\n  TActionCombiner<typeof SettingActions>\n>;\n","import axios from 'axios';\n\nimport { CONFIG } from '@constants/config';\nimport { IUserInfo } from './redux/admin/admin.constants';\n\nexport const checkAdminJWT = async (jwt: string): Promise<boolean> =>\n  new Promise((resolve) => {\n    axios({\n      method: 'GET',\n      url: `${CONFIG.API}/admin`,\n      headers: {\n        Authorization: jwt,\n      },\n    })\n      .then((res) => {\n        if (res.data.data) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      })\n      .catch(() => resolve(false));\n  });\n\nexport const getUsers = async (jwt: string): Promise<IUserInfo[]> =>\n  (\n    await axios({\n      method: 'GET',\n      url: `${CONFIG.API}/admin`,\n      headers: {\n        Authorization: jwt,\n      },\n    })\n  ).data.data;\n\nexport const deleteUser = async (jwt: string, id: string) =>\n  (\n    await axios({\n      method: 'DELETE',\n      url: `${CONFIG.API}/admin/${id}`,\n      headers: {\n        Authorization: jwt,\n      },\n    })\n  ).data.data;\n","import axios from 'axios';\n\nimport { CONFIG } from '@constants/config';\n\ninterface IAPIRecors extends IRecord {\n  isIncome: boolean;\n}\n\nexport const getRecords = async (jwt: string): Promise<IAPIRecors[]> => {\n  const { data } = (\n    await axios({\n      method: 'GET',\n      url: `${CONFIG.API}/record`,\n      headers: {\n        Authorization: jwt,\n      },\n    })\n  ).data;\n\n  return data;\n};\n\nexport const addRecord = async (\n  jwt: string,\n  record: Partial<IRecord | { isIncome: boolean }>\n): Promise<string | { id: string }> => {\n  const { message, data } = (\n    await axios({\n      method: 'POST',\n      url: `${CONFIG.API}/record`,\n      headers: {\n        Authorization: jwt,\n      },\n      data: record,\n    })\n  ).data;\n\n  if (message) {\n    return message;\n  }\n\n  return data;\n};\n\nexport const editRecord = async (\n  jwt: string,\n  record: Partial<IRecord | { isIncome: boolean }>\n): Promise<string | undefined> => {\n  const { message } = (\n    await axios({\n      method: 'PUT',\n      url: `${CONFIG.API}/record`,\n      headers: {\n        Authorization: jwt,\n      },\n      data: record,\n    })\n  ).data;\n\n  if (message) {\n    return message;\n  }\n};\n\nexport const removeRecord = async (\n  jwt: string,\n  recordId: string\n): Promise<string | undefined> => {\n  const { message } = (\n    await axios({\n      method: 'DELETE',\n      url: `${CONFIG.API}/record/${recordId}`,\n      headers: {\n        Authorization: jwt,\n      },\n    })\n  ).data;\n\n  if (message) {\n    return message;\n  }\n};\n","export enum Language {\n  UK,\n  EN,\n}\n\ninterface ILanguage {\n  label: string;\n  value: Language;\n}\n\nexport const LanguageList: ILanguage[] = [\n  { label: 'Укр', value: Language.UK },\n  { label: 'Eng', value: Language.EN },\n];\n","import { MouseEvent, useState } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\nimport { useHistory, useLocation, useParams } from 'react-router';\n\nimport { removeRecord } from '@services/records.api';\nimport { useReduxSelector } from '@services/redux';\nimport { useQuery } from '@services/utils';\n\nimport { Currency } from '@constants/currency';\nimport { PROMISES } from '@constants/promises';\n\nexport enum Order {\n  ASC = 'asc',\n  DESC = 'desc',\n}\n\ninterface IUseDataTableState {\n  handleDelete: (id: string) => void;\n}\n\nexport const useDataTableState = ({ handleDelete }: IUseDataTableState) => {\n  /* TABLE CONTROLS */\n  const { id } = useParams<{ id: string }>();\n  const page = parseInt(id) || 1;\n  const [orderBy, setOrderBy] = useState(3);\n  const [order, setOrder] = useState(Order.DESC);\n  const query = useQuery();\n  const location = useLocation();\n  const history = useHistory();\n\n  const [currency, setCurrency] = useState(Currency.USD);\n\n  const getHandleHeaderClick = (id: number) => () => {\n    if (orderBy === id) {\n      return setOrder((o) => (o === Order.DESC ? Order.ASC : Order.DESC));\n    }\n    setOrderBy(id);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    history.replace(`${getPath()}/1?rowsPerPage=${event.target.value}`);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    history.push(\n      `${getPath()}/${newPage + 1}?rowsPerPage=${\n        query.get('rowsPerPage') || 10\n      }`\n    );\n  };\n\n  const getPath = () => {\n    const pathArr = location.pathname.split('/');\n    return pathArr.slice(0, pathArr.length - 1).join('/');\n  };\n\n  /* TABLE MENU */\n  const [isDeleteModal, setDeleteModal] = useState(false);\n  const [isEditModal, setEditModal] = useState(false);\n  const [menuAnchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [activeRow, setActiveRow] = useState('');\n\n  const { user } = useReduxSelector((redux) => redux.user);\n\n  const getHandleOpenMenu = (id: string) => (\n    event: MouseEvent<HTMLButtonElement>\n  ) => {\n    setAnchorEl(event.currentTarget);\n    setActiveRow(id);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleOpenDelete = () => {\n    handleCloseMenu();\n    setDeleteModal(true);\n  };\n\n  const handleSubmitDelete = async () => {\n    const error = await trackPromise(\n      removeRecord(user?.jwt || '', activeRow),\n      PROMISES.DIALOG_PROMPT\n    );\n    if (!error) {\n      handleDelete(activeRow);\n      handleCancelDelete();\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setDeleteModal(false);\n  };\n\n  const handleOpenEdit = () => {\n    handleCloseMenu();\n    setEditModal(true);\n  };\n\n  const handleCloseEdit = () => {\n    setEditModal(false);\n  };\n\n  const getActiveRecord = (data: IRecord[]) =>\n    data.find(({ id }) => id === activeRow);\n\n  return {\n    page,\n    orderBy,\n    order,\n    rowsPerPage: parseInt(query.get('rowsPerPage') || '') || 10,\n    getHandleHeaderClick,\n    handleChangeRowsPerPage,\n    handleChangePage,\n\n    menuAnchorEl,\n    getHandleOpenMenu,\n    handleCloseMenu,\n\n    handleOpenDelete,\n    handleSubmitDelete,\n    handleCancelDelete,\n    isDeleteModal,\n\n    handleOpenEdit,\n    handleCloseEdit,\n    isEditModal,\n\n    getActiveRecord,\n\n    currency,\n    setCurrency,\n  };\n};\n","export const PROMISES = {\n  DIALOG_RECORD: 'dialog-record',\n  DIALOG_PROMPT: 'dialog-prompt',\n  DIALOG_USER: 'dialog-user',\n  PRICE: 'price',\n  LOGIN: 'login',\n  UPDATE: 'update',\n  USER: 'user',\n  ADMIN: 'admin',\n};\n","import { useCallback, useEffect } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useLocation } from 'react-router';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { useAction, useReduxSelector } from './redux';\nimport { AdminActions } from './redux/admin';\nimport { IncomeActions } from './redux/income';\nimport { OutcomeActions } from './redux/outcome';\nimport { SettingActions } from './redux/setting';\nimport { UserActions } from './redux/user';\n\nimport { checkAdminJWT, getUsers } from './admin.api';\nimport { getRecords } from './records.api';\nimport { checkJWT, getSettings, getUserInfo } from './user.api';\n\nimport { Currency } from '@constants/currency';\nimport { Language } from '@constants/language';\nimport { PROMISES } from '@constants/promises';\n\nexport const getUUID = () => uuidv4();\n\nexport const useQuery = () => new URLSearchParams(useLocation().search);\n\nexport const getCurrency = (currency: Currency) => {\n  switch (currency) {\n    case Currency.USD:\n      return 'USD';\n    case Currency.UAH:\n      return 'UAH';\n    case Currency.EUR:\n      return 'EUR';\n  }\n};\n\nexport const getLaunguage = (language: Language) => {\n  switch (language) {\n    case Language.UK:\n      return 0;\n    case Language.EN:\n      return 1;\n  }\n};\n\nexport const parseCurrency = (currency?: string) => {\n  switch (currency) {\n    case 'UAH':\n      return Currency.UAH;\n    case 'EUR':\n      return Currency.EUR;\n    default:\n      return Currency.USD;\n  }\n};\n\nexport const parseLanguage = (language?: number) => {\n  switch (language) {\n    case 0:\n      return Language.UK;\n    default:\n      return Language.EN;\n  }\n};\n\nexport const useUser = () => {\n  const { user } = useReduxSelector((redux) => redux.user);\n\n  const login = useAction(UserActions.login);\n  const logout = useAction(UserActions.logout);\n  const get = useAction(SettingActions.get);\n  const setIncomes = useAction(IncomeActions.set);\n  const setOutcomes = useAction(OutcomeActions.set);\n\n  const fetchData = useCallback(async () => {\n    if (user) {\n      if (await checkJWT(user.jwt)) {\n        login(await getUserInfo(user.jwt));\n        get(await getSettings(user.jwt));\n        const records = await getRecords(user.jwt);\n        const incomes = records\n          .filter(({ isIncome }) => isIncome)\n          .map((el) => ({ ...el, currency: parseCurrency(el.currency) }));\n        setIncomes(incomes);\n        const outcomes = records\n          .filter(({ isIncome }) => !isIncome)\n          .map((el) => ({ ...el, currency: parseCurrency(el.currency) }));\n        setOutcomes(outcomes);\n      } else {\n        logout();\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    trackPromise(fetchData(), PROMISES.USER);\n  }, []);\n};\n\nexport const useAdmin = () => {\n  const { admin } = useReduxSelector((redux) => redux.admin);\n\n  const logout = useAction(AdminActions.logout);\n  const users = useAction(AdminActions.getUsers);\n\n  const fetchData = useCallback(async () => {\n    if (admin) {\n      if (await checkAdminJWT(admin.jwt)) {\n        users(await getUsers(admin.jwt));\n      } else {\n        logout();\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    trackPromise(fetchData(), PROMISES.ADMIN);\n  }, []);\n};\n","import axios from 'axios';\n\nimport { CONFIG } from '@constants/config';\n\nimport { getUUID } from './utils';\n\nexport const checkJWT = (jwt: string) =>\n  new Promise((resolve) => {\n    axios({\n      method: 'GET',\n      url: `${CONFIG.API}/user/profile`,\n      headers: {\n        Authorization: jwt,\n      },\n    })\n      .then((res) => {\n        if (res.data.data) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      })\n      .catch(() => resolve(false));\n  });\n\nexport const getUserInfo = async (jwt: string): Promise<IUser> => {\n  const { data } = (\n    await axios({\n      method: 'GET',\n      url: `${CONFIG.API}/user/profile`,\n      headers: {\n        Authorization: jwt,\n      },\n    })\n  ).data;\n\n  const empl = (\n    await axios({\n      method: 'GET',\n      url: `${CONFIG.API}/settings/last`,\n      headers: {\n        Authorization: jwt,\n      },\n    })\n  ).data;\n\n  return {\n    jwt,\n    currency: data.currency,\n    email: data.email,\n    language: data.language,\n    location: data.location,\n    name: data.name,\n    employee: empl?.data?.employee ?? 0,\n  };\n};\n\nexport const updateInfo = async (user: IUser, login: (user: IUser) => void) => {\n  try {\n    const { data, message, ok } = (\n      await axios({\n        method: 'PUT',\n        url: `${CONFIG.API}/user/profile`,\n        headers: {\n          Authorization: user.jwt,\n        },\n        data: user,\n      })\n    ).data;\n\n    const settings = (\n      await axios({\n        method: 'POST',\n        url: `${CONFIG.API}/settings`,\n        headers: {\n          Authorization: user.jwt,\n        },\n        data: {\n          employee: user.employee,\n          timestamp: new Date().getTime(),\n        },\n      })\n    ).data;\n\n    if (!ok || !settings.ok || !data) {\n      throw new Error(message || '');\n    }\n\n    login({\n      jwt: user.jwt,\n      employee: user.employee,\n      currency: data.currency,\n      email: data.email,\n      language: data.language,\n      location: data.location,\n      name: data.name,\n    });\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const getSettings = async (jwt: string): Promise<ISetting[]> => {\n  const { data }: { data: any[] } = (\n    await axios({\n      method: 'GET',\n      url: `${CONFIG.API}/settings`,\n      headers: {\n        Authorization: jwt,\n      },\n    })\n  ).data;\n\n  return data.map((el) => ({\n    employee: el.employee,\n    timestamp: el.timestamp,\n    id: getUUID(),\n  }));\n};\n","export const ROUTES = {\n  dashboard: '/',\n  income: '/income',\n  outcome: '/outcome',\n  profile: '/profile',\n  admin: '/admin',\n};\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nexport const useLoginStyles = makeStyles((theme) =>\n  createStyles({\n    screen: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    content: {\n      padding: theme.spacing(2),\n    },\n    input: {\n      minWidth: 400,\n      display: 'block',\n      marginBottom: theme.spacing(1),\n    },\n    button: {\n      display: 'block',\n      margin: 'auto',\n      marginTop: theme.spacing(2),\n    },\n  })\n);\n","import { Button, Paper, TextField, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport { ChangeEvent, FC, useState } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\nimport { useLocation } from 'react-router';\n\nimport { Loader } from '@components/loader';\nimport { ScreenTitle } from '@components/screen-title';\n\nimport { useAction, useReduxSelector } from '@services/redux';\nimport { AdminActions } from '@services/redux/admin';\nimport { UserActions } from '@services/redux/user';\nimport { getUserInfo } from '@services/user.api';\n\nimport { CONFIG } from '@constants/config';\nimport { PROMISES } from '@constants/promises';\nimport { ROUTES } from '@constants/routes';\n\nimport { useLoginStyles } from './login.styles';\n\nexport const Login: FC = ({ children }) => {\n  const classes = useLoginStyles();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const { user, admin } = useReduxSelector((redux) => redux);\n\n  const login = useAction(UserActions.login);\n  const adminLogin = useAction(AdminActions.login);\n\n  const { pathname } = useLocation();\n\n  const fetchData = () =>\n    axios({\n      method: 'POST',\n      url: `${CONFIG.API}/auth/signin`,\n      data: {\n        email,\n        password,\n      },\n    })\n      .then(async (responce) => {\n        const { jwt } = responce.data;\n        login(await getUserInfo(jwt));\n      })\n      .catch((error) => {\n        setError(error.response.data.message);\n      });\n\n  const fetchAdminData = () =>\n    axios({\n      method: 'POST',\n      url: `${CONFIG.API}/auth/admin`,\n      data: {\n        email,\n        password,\n      },\n    })\n      .then(async (responce) => {\n        const { jwt } = responce.data;\n        adminLogin({ jwt });\n      })\n      .catch((error) => setError(error.response.data.message));\n\n  const handleLogin = () => {\n    trackPromise(fetchData(), PROMISES.LOGIN);\n  };\n\n  const handleAdminLogin = () => {\n    trackPromise(fetchAdminData(), PROMISES.LOGIN);\n  };\n\n  const handleFocus = () => {\n    setError('');\n  };\n\n  const getHandleChange = (field: 'email' | 'password') => (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    const v = event.target.value;\n    switch (field) {\n      case 'email':\n        return setEmail(v);\n      case 'password':\n        return setPassword(v);\n    }\n  };\n\n  if (user.user || admin.admin) {\n    return <>{children}</>;\n  }\n\n  return (\n    <div className={classes.screen}>\n      <Paper className={classes.content} elevation={5}>\n        <Loader id={PROMISES.LOGIN} width={400} height={261}>\n          <div>\n            <ScreenTitle title=\"Login\" />\n            <Typography color=\"error\" variant=\"body1\" component=\"p\">\n              {error}\n            </Typography>\n            <TextField\n              className={classes.input}\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              onFocus={handleFocus}\n              value={email}\n              onChange={getHandleChange('email')}\n            />\n            <TextField\n              className={classes.input}\n              fullWidth\n              id=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              onFocus={handleFocus}\n              value={password}\n              onChange={getHandleChange('password')}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={\n                pathname === ROUTES.admin ? handleAdminLogin : handleLogin\n              }\n              className={classes.button}\n              onFocus={handleFocus}\n            >\n              Login\n            </Button>\n          </div>\n        </Loader>\n      </Paper>\n    </div>\n  );\n};\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nexport const useNavigationStyles = makeStyles((theme) =>\n  createStyles({\n    drawer: {\n      padding: theme.spacing(3, 1, 1),\n      marginRight: theme.spacing(1),\n      borderRight: '1px solid #0d47a133',\n    },\n    link: {\n      color: '#0d47a1',\n      padding: theme.spacing(1),\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  })\n);\n","import { Divider } from '@material-ui/core';\nimport {\n  Assessment, Person, TrendingDown, TrendingUp\n} from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\n\nimport { ROUTES } from '@constants/routes';\n\nimport { useNavigationStyles } from './navigation.styles';\n\nexport const Navigation = () => {\n  const classes = useNavigationStyles();\n\n  return (\n    <nav className={classes.drawer}>\n      <Link className={classes.link} to={ROUTES.dashboard}>\n        <Assessment fontSize=\"large\" />\n      </Link>\n      <Divider />\n      <Link className={classes.link} to={ROUTES.income}>\n        <TrendingUp fontSize=\"large\" />\n      </Link>\n      <Divider />\n      <Link className={classes.link} to={ROUTES.outcome}>\n        <TrendingDown fontSize=\"large\" />\n      </Link>\n      <Divider />\n      <Link className={classes.link} to={ROUTES.profile}>\n        <Person fontSize=\"large\" />\n      </Link>\n    </nav>\n  );\n};\n","import { createStyles, makeStyles, Theme } from '@material-ui/core';\n\nexport const useDialogStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    textInput: {\n      marginBottom: theme.spacing(2),\n      width: '100%',\n    },\n    button: {\n      width: '100%',\n    },\n    prompt: {\n      padding: theme.spacing(2),\n    },\n    record: {\n      width: 500,\n    }\n  })\n);\n","import { Modal } from '@material-ui/core';\nimport { FC } from 'react';\n\nimport { useDialogStyles } from './dialog.styles';\n\nexport interface IDialogModal {\n  isOpen: boolean;\n  handleClose: () => void;\n}\n\nexport const DialogModal: FC<IDialogModal> = ({\n  isOpen,\n  handleClose,\n  children,\n}) => {\n  const classes = useDialogStyles();\n\n  return (\n    <Modal\n      open={isOpen}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div className={classes.modal}>{children}</div>\n    </Modal>\n  );\n};\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nexport const useSelectStyles = makeStyles((theme) =>\n  createStyles({\n    selectContainer: {\n      margin: theme.spacing(1),\n      minWidth: 100,\n    },\n    select: {\n      marginTop: theme.spacing(1),\n    }\n  })\n);\n","import { FormControl, MenuItem, Select as MSelect } from '@material-ui/core';\nimport { ChangeEvent, FC } from 'react';\n\nimport { useSelectStyles } from './select.styles';\n\ninterface ISelect {\n  list: { value: any; label: string }[];\n  value: any;\n  setValue: (value: any) => void;\n}\n\nexport const Select: FC<ISelect> = ({ list, value, setValue }) => {\n  const handleChange = (event: ChangeEvent<{ value: any }>) => {\n    setValue(event.target.value);\n  };\n\n  const classes = useSelectStyles();\n\n  return (\n    <FormControl className={classes.selectContainer}>\n      <MSelect\n        value={value}\n        onChange={handleChange}\n        displayEmpty\n        className={classes.select}\n      >\n        {list.map((el) => (\n          <MenuItem key={el.label} value={el.value}>\n            {el.label}\n          </MenuItem>\n        ))}\n      </MSelect>\n    </FormControl>\n  );\n};\n","import {\n  Button, Card, CardContent, TextField, Typography\n} from '@material-ui/core';\nimport { DatePicker } from '@material-ui/pickers';\nimport { FC } from 'react';\n\nimport { Loader } from '@components/loader';\nimport { Select } from '@components/select';\nimport { DialogModal, IDialogModal } from '../dialog-modal';\n\nimport { useDialogRecordState } from './dialog-record.state';\n\nimport { Currency, CurrencyList } from '@constants/currency';\nimport { PROMISES } from '@constants/promises';\n\nimport { useDialogStyles } from '../dialog.styles';\n\nexport interface IDialogRecord extends IDialogModal {\n  title: string;\n  setTitle: (title: string) => void;\n  value: string;\n  setValue: (value: string) => void;\n  currency: Currency;\n  setCurrency: (currency: Currency) => void;\n  description: string;\n  setDescription: (description: string) => void;\n  handleSave: () => void;\n\n  date: Date | null;\n  handleDateChange: (date: Date | null) => void;\n\n  handleFocus: () => void;\n  error: string;\n}\n\nexport const DialogRecord: FC<IDialogRecord> = ({\n  isOpen,\n  title,\n  setTitle,\n  description,\n  setDescription,\n  value,\n  setValue,\n  handleClose,\n  currency,\n  setCurrency,\n  handleSave,\n  date,\n  handleDateChange,\n  handleFocus,\n  error,\n}) => {\n  const classes = useDialogStyles();\n  const { getHandleChangeText, handleChangeValue } = useDialogRecordState(\n    setValue\n  );\n\n  return (\n    <DialogModal isOpen={isOpen} handleClose={handleClose}>\n      <Card className={classes.record}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\n            {title || 'New record'}\n          </Typography>\n          <Typography\n            className={classes.textInput}\n            color=\"error\"\n            variant=\"body1\"\n            component=\"p\"\n          >\n            {error}\n          </Typography>\n          <TextField\n            label=\"Title\"\n            className={classes.textInput}\n            value={title}\n            onChange={getHandleChangeText(setTitle, 24)}\n            onFocus={handleFocus}\n          />\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <TextField\n              type=\"number\"\n              label=\"Value\"\n              className={classes.textInput}\n              value={value}\n              onChange={handleChangeValue}\n              onFocus={handleFocus}\n            />\n            <Select\n              list={CurrencyList}\n              value={currency}\n              setValue={setCurrency}\n            />\n          </div>\n          <DatePicker\n            fullWidth\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"Date\"\n            format=\"MM/dd/yyyy\"\n            maxDate={new Date()}\n            value={date}\n            onChange={handleDateChange}\n            onFocus={handleFocus}\n          />\n          <TextField\n            className={classes.textInput}\n            label=\"Description\"\n            value={description}\n            onChange={getHandleChangeText(setDescription)}\n            multiline\n            rows={4}\n            onFocus={handleFocus}\n          />\n          <Loader id={PROMISES.DIALOG_RECORD}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSave}\n              className={classes.button}\n            >\n              Save\n            </Button>\n          </Loader>\n        </CardContent>\n      </Card>\n    </DialogModal>\n  );\n};\n","import { ChangeEvent } from 'react';\n\nexport const useDialogRecordState = (setValue: (value: string) => void) => {\n  const getHandleChangeText = (\n    setter: (text: string) => void,\n    maxLength?: number\n  ) => (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    const { value } = event.target;\n    if (maxLength && value.length > maxLength) {\n      return;\n    }\n    setter(value);\n  };\n\n  const handleChangeValue = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    const v = event.target.value;\n    if (v === '') {\n      return setValue(v);\n    }\n    const value = parseFloat(v);\n    if (value < 0) {\n      return setValue('0.00');\n    }\n    setValue(v);\n  };\n\n  return {\n    handleChangeValue,\n    getHandleChangeText,\n  };\n};\n","import { Button, Grid, Paper, Typography } from '@material-ui/core';\nimport { FC } from 'react';\n\nimport { Loader } from '@components/loader';\nimport { DialogModal, IDialogModal } from './dialog-modal';\n\nimport { PROMISES } from '@constants/promises';\n\nimport { useDialogStyles } from './dialog.styles';\n\ninterface IDialogPrompt extends IDialogModal {\n  title: string;\n  description: string;\n  handleSubmit: () => void;\n}\n\nexport const DialogPrompt: FC<IDialogPrompt> = ({\n  title,\n  description,\n  handleClose,\n  handleSubmit,\n  isOpen,\n}) => {\n  const classes = useDialogStyles();\n\n  return (\n    <DialogModal isOpen={isOpen} handleClose={handleClose}>\n      <Paper>\n        <Loader id={PROMISES.DIALOG_PROMPT} height={145} width={242}>\n          <Paper className={classes.prompt}>\n            <Typography gutterBottom variant=\"h4\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography gutterBottom variant=\"body2\" component=\"p\">\n              {description}\n            </Typography>\n            <Grid container justify=\"space-between\">\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSubmit}\n                >\n                  Yes\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={handleClose}\n                >\n                  No\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Loader>\n      </Paper>\n    </DialogModal>\n  );\n};\n","import {\n  Button, Card, CardContent, TextField, Typography\n} from '@material-ui/core';\nimport axios from 'axios';\nimport { FC, useState } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\n\nimport { Loader } from '@components/loader';\nimport { DialogModal, IDialogModal } from '../dialog-modal';\n\nimport { useAction, useReduxSelector } from '@services/redux';\nimport { AdminActions } from '@services/redux/admin';\nimport { useDialogRecordState } from './dialog-user.state';\n\nimport { CONFIG } from '@constants/config';\nimport { PROMISES } from '@constants/promises';\n\nimport { useDialogStyles } from '../dialog.styles';\n\nexport const DialogUser: FC<IDialogModal> = ({ isOpen, handleClose }) => {\n  const classes = useDialogStyles();\n  const [name, setName] = useState('');\n  const [location, setLocation] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { getHandleChangeText } = useDialogRecordState();\n\n  const [error, setError] = useState('');\n  const handleFocus = () => setError('');\n\n  const { admin } = useReduxSelector((redux) => redux.admin);\n\n  const add = useAction(AdminActions.add);\n\n  const signup = () =>\n    axios({\n      method: 'POST',\n      url: `${CONFIG.API}/admin/signup`,\n      data: {\n        name,\n        location,\n        email,\n        password,\n        currency: 'USD',\n        language: 0,\n      },\n      headers: {\n        Authorization: admin?.jwt || '',\n      },\n    })\n      .then((response) => response.data.data)\n      .catch((error) => setError(error.response.data.message));\n\n  const handleSave = async () => {\n    const id = await trackPromise(signup(), PROMISES.DIALOG_USER);\n    if (!id) {\n      return;\n    }\n    add({\n      name,\n      email,\n      id,\n    });\n    handleClose();\n  };\n\n  return (\n    <DialogModal isOpen={isOpen} handleClose={handleClose}>\n      <Card className={classes.record}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\n            New user\n          </Typography>\n          <Typography\n            className={classes.textInput}\n            color=\"error\"\n            variant=\"body1\"\n            component=\"p\"\n          >\n            {error}\n          </Typography>\n          <TextField\n            label=\"Name\"\n            className={classes.textInput}\n            value={name}\n            onChange={getHandleChangeText(setName, 24)}\n            onFocus={handleFocus}\n          />\n          <TextField\n            label=\"Email\"\n            className={classes.textInput}\n            value={email}\n            onChange={getHandleChangeText(setEmail, 60)}\n            onFocus={handleFocus}\n          />\n          <TextField\n            label=\"Location\"\n            className={classes.textInput}\n            value={location}\n            onChange={getHandleChangeText(setLocation, 32)}\n            onFocus={handleFocus}\n          />\n          <TextField\n            label=\"Password\"\n            type=\"password\"\n            className={classes.textInput}\n            value={password}\n            onChange={getHandleChangeText(setPassword, 32)}\n            onFocus={handleFocus}\n          />\n          <Loader id={PROMISES.DIALOG_USER}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSave}\n              className={classes.button}\n            >\n              Save\n            </Button>\n          </Loader>\n        </CardContent>\n      </Card>\n    </DialogModal>\n  );\n};\n","import { ChangeEvent } from 'react';\n\nexport const useDialogRecordState = () => {\n  const getHandleChangeText = (\n    setter: (text: string) => void,\n    maxLength?: number\n  ) => (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    const { value } = event.target;\n    if (maxLength && value.length > maxLength) {\n      return;\n    }\n    setter(value);\n  };\n  return {\n    getHandleChangeText,\n  };\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\n\nimport { CONFIG } from '@constants/config';\nimport { Currency } from '@constants/currency';\nimport { PROMISES } from '@constants/promises';\n\nexport const usePrice = () => {\n  const [uah, setUAH] = useState(0);\n  const [eur, setEUR] = useState(0);\n\n  const fetchPrice = useCallback(async () => {\n    const convertUAH = (await (\n      await fetch(`${CONFIG.CURRENCY_API}USD_UAH`)\n    ).json()) as { USD_UAH: number };\n    const convertEUR = (await (\n      await fetch(`${CONFIG.CURRENCY_API}USD_EUR`)\n    ).json()) as { USD_EUR: number };\n\n    setUAH(convertUAH.USD_UAH);\n    setEUR(convertEUR.USD_EUR);\n  }, []);\n\n  useEffect(() => {\n    trackPromise(fetchPrice(), PROMISES.PRICE);\n  }, [fetchPrice]);\n\n  return <const>[uah, eur];\n};\n\nexport const getPrice = (\n  value: number,\n  currencyFrom: Currency,\n  currencyTo: Currency,\n  convert: readonly [number, number]\n) => {\n  let price = value;\n\n  switch (currencyFrom) {\n    case Currency.UAH:\n      price /= convert[0];\n      break;\n    case Currency.EUR:\n      price /= convert[1];\n      break;\n  }\n\n  switch (currencyTo) {\n    case Currency.UAH:\n      price *= convert[0];\n      break;\n    case Currency.EUR:\n      price *= convert[1];\n      break;\n  }\n\n  return price;\n};\n","import { getPrice } from '@services/currency.api';\nimport { IUserInfo } from '@services/redux/admin/admin.constants';\nimport { Order } from './data-table.state';\n\nimport { Currency } from '@constants/currency';\n\nexport const getCompire = (\n  order: Order,\n  orderBy: number,\n  currencyBase: Currency,\n  convert: readonly [number, number]\n) => (a: IRecord, b: IRecord) => {\n  switch (orderBy) {\n    case 0:\n      return compireStrings(order, a.title, b.title);\n    case 1:\n      return compireStrings(order, a.description, b.description);\n    case 2:\n      return compireNumbers(\n        order,\n        getPrice(a.value, a.currency, currencyBase, convert),\n        getPrice(b.value, b.currency, currencyBase, convert)\n      );\n    case 3:\n      return compireNumbers(order, a.time, b.time);\n    default:\n      return 0;\n  }\n};\n\nconst compireNumbers = (order: Order, a: number, b: number) =>\n  order === Order.ASC ? a - b : b - a;\n\nconst compireStrings = (order: Order, a: string, b: string) => {\n  if (a < b) {\n    return order === Order.ASC ? -1 : 1;\n  }\n  if (a > b) {\n    return order === Order.ASC ? 1 : -1;\n  }\n  return 0;\n};\n\nexport const getAdminCompire = (order: Order, orderBy: number) => (\n  a: IUserInfo,\n  b: IUserInfo\n) => {\n  switch (orderBy) {\n    case 0:\n      return compireStrings(order, a.email || '', b.email || '');\n    case 1:\n      return compireStrings(order, a.name || '', b.name || '');\n    default:\n      return 0;\n  }\n};\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nexport const useDataTableStyles = makeStyles((theme) =>\n  createStyles({\n    table: {\n      width: '100%',\n    },\n    button: {\n      minWidth: 0,\n      margin: theme.spacing(1),\n      width: 50,\n      height: 50,\n      borderRadius: '50%',\n      position: 'relative',\n    },\n    buttonContent: {\n      display: 'block',\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      transform: 'translate(-50%, -50%)',\n    },\n    tableFooter: {\n      paddingLeft: theme.spacing(2),\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    currency: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    currencySelect: {\n      marginTop: theme.spacing(-1),\n      marginLeft: theme.spacing(1),\n    },\n    admin: {\n      padding: theme.spacing(2),\n    },\n    adminPaper: {\n      marginTop: theme.spacing(2),\n    },\n    buttons: {\n      width: 400,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginTop: theme.spacing(2)\n    },\n  })\n);\n","import { MouseEvent, useState } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\n\nimport { Order } from '@components/data-table/data-table.state';\nimport { deleteUser } from '@services/admin.api';\nimport { useAction, useReduxSelector } from '@services/redux';\nimport { AdminActions } from '@services/redux/admin';\nimport { useAdmin } from '@services/utils';\n\nimport { PROMISES } from '@constants/promises';\n\nimport { useDataTableStyles } from '@components/data-table/data-table.styles';\n\nexport const useAdminState = () => {\n  const [menuAnchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [isDeleteModal, setDeleteModal] = useState(false);\n  const [activeRow, setActiveRow] = useState('');\n  const { users, admin } = useReduxSelector((redux) => redux.admin);\n  const classes = useDataTableStyles();\n\n  const [isOpenLogout, setOpenLogout] = useState(false);\n\n  const [isUser, setUser] = useState(false);\n\n  const [orderBy, setOrderBy] = useState(0);\n  const [order, setOrder] = useState(Order.DESC);\n\n  const getHandleHeaderClick = (id: number) => () => {\n    if (orderBy === id) {\n      return setOrder((o) => (o === Order.DESC ? Order.ASC : Order.DESC));\n    }\n    setOrderBy(id);\n  };\n\n  useAdmin();\n\n  const handleDelete = useAction(AdminActions.delete);\n  const handleLogout = useAction(AdminActions.logout);\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleOpenDelete = () => {\n    handleCloseMenu();\n    setDeleteModal(true);\n  };\n\n  const handleCloseUser = () => setUser(false);\n  const handleOpenUser = () => setUser(true);\n\n  const handleSubmitDelete = async () => {\n    const error = await trackPromise(\n      deleteUser(admin?.jwt || '', activeRow),\n      PROMISES.DIALOG_PROMPT\n    );\n    if (!error) {\n      handleDelete(activeRow);\n      handleCancelDelete();\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setDeleteModal(false);\n  };\n  const handleOpenLogout = () => {\n    setOpenLogout(true);\n  };\n  const handleCancelLogout = () => {\n    setOpenLogout(false);\n  };\n\n  const getHandleOpenMenu = (id: string) => (\n    event: MouseEvent<HTMLButtonElement>\n  ) => {\n    setAnchorEl(event.currentTarget);\n    setActiveRow(id);\n  };\n\n  return {\n    menuAnchorEl,\n    isDeleteModal,\n    users,\n    classes,\n    isOpenLogout,\n    order,\n    orderBy,\n    getHandleHeaderClick,\n    handleLogout,\n    handleOpenDelete,\n    handleSubmitDelete,\n    handleOpenLogout,\n    handleCancelLogout,\n    getHandleOpenMenu,\n    handleCloseMenu,\n    handleCancelDelete,\n    isUser,\n    handleCloseUser,\n    handleOpenUser,\n  };\n};\n","import {\n  Button, Menu, MenuItem, Paper, Table, TableBody, TableCell, TableContainer,\n  TableHead, TableRow, TableSortLabel\n} from '@material-ui/core';\nimport { MoreHoriz } from '@material-ui/icons';\nimport { FC, MouseEvent } from 'react';\n\nimport { DialogPrompt, DialogUser } from '@components/dialog-modal';\nimport { ScreenTitle } from '@components/screen-title';\n\nimport { getAdminCompire } from '@components/data-table/data-table.utils';\nimport { useAdminState } from './admin.state';\n\nimport { useDataTableStyles } from '@components/data-table/data-table.styles';\n\nconst headCells = [\n  { id: 0, label: 'Email', skipPadding: true, numeric: false },\n  { id: 1, label: 'Name', numeric: false },\n];\n\nexport const Admin = () => {\n  const {\n    menuAnchorEl,\n    isDeleteModal,\n    users,\n    classes,\n    isOpenLogout,\n    orderBy,\n    order,\n    getHandleHeaderClick,\n    handleLogout,\n    handleOpenDelete,\n    handleSubmitDelete,\n    handleOpenLogout,\n    handleCancelLogout,\n    getHandleOpenMenu,\n    handleCloseMenu,\n    handleCancelDelete,\n    isUser,\n    handleCloseUser,\n    handleOpenUser,\n  } = useAdminState();\n\n  return (\n    <div className={classes.admin}>\n      <ScreenTitle title=\"Admin\" />\n      <Paper className={classes.adminPaper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"medium\"\n            aria-label=\"enhanced table\"\n          >\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\" />\n                {headCells.map((headCell) => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.skipPadding ? 'none' : 'default'}\n                    onClick={getHandleHeaderClick(headCell.id)}\n                  >\n                    <TableSortLabel\n                      active={orderBy === headCell.id}\n                      direction={order}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {users.sort(getAdminCompire(order, orderBy)).map((row) => (\n                <Row\n                  id={row.id}\n                  name={row.name}\n                  email={row.email}\n                  getHandleOpenMenu={getHandleOpenMenu}\n                  key={row.id}\n                />\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Menu\n          id=\"data-table-menu\"\n          anchorEl={menuAnchorEl}\n          keepMounted\n          open={Boolean(menuAnchorEl)}\n          onClose={handleCloseMenu}\n        >\n          <MenuItem onClick={handleOpenDelete}>Delete</MenuItem>\n        </Menu>\n        <DialogPrompt\n          isOpen={isDeleteModal}\n          description=\"This action will delete this user\"\n          title=\"Delete\"\n          handleClose={handleCancelDelete}\n          handleSubmit={handleSubmitDelete}\n        />\n        <DialogPrompt\n          isOpen={isOpenLogout}\n          description=\"Are you sure you want to log out?\"\n          title=\"Logout\"\n          handleClose={handleCancelLogout}\n          handleSubmit={handleLogout}\n        />\n        <DialogUser isOpen={isUser} handleClose={handleCloseUser} />\n      </Paper>\n\n      <div className={classes.buttons}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={handleOpenLogout}\n        >\n          Logout\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleOpenUser}>\n          Add\n        </Button>\n      </div>\n    </div>\n  );\n};\n\ninterface IRow {\n  id: string;\n  getHandleOpenMenu: (\n    id: string\n  ) => (event: MouseEvent<HTMLButtonElement>) => void;\n  email: string;\n  name: string;\n}\n\nconst Row: FC<IRow> = ({ getHandleOpenMenu, id, email, name }) => {\n  const classes = useDataTableStyles();\n\n  return (\n    <TableRow hover tabIndex={-1} role=\"checkbox\">\n      <TableCell padding=\"checkbox\">\n        <Button\n          aria-controls=\"data-table-menu\"\n          aria-haspopup=\"true\"\n          className={classes.button}\n          onClick={getHandleOpenMenu(id)}\n        >\n          <MoreHoriz className={classes.buttonContent} />\n        </Button>\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n        {email}\n      </TableCell>\n      <TableCell align=\"left\">{name}</TableCell>\n    </TableRow>\n  );\n};\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nexport const usePlusButtonStyles = makeStyles((theme) =>\n  createStyles({\n    button: {\n      position: 'fixed',\n      right: 50,\n      bottom: 50,\n      padding: theme.spacing(2),\n      borderRadius: '50%',\n    },\n  })\n);\n","import { Button } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { FC } from 'react';\n\nimport { usePlusButtonStyles } from './plus-button.styles';\n\ninterface IPlusButton {\n  onClick: () => void;\n}\n\nexport const PlusButton: FC<IPlusButton> = ({ onClick }) => {\n  const classes = usePlusButtonStyles();\n\n  return (\n    <Button\n      onClick={onClick}\n      className={classes.button}\n      variant=\"contained\"\n      color=\"primary\"\n    >\n      <Add fontSize=\"large\" />\n    </Button>\n  );\n};\n","import { action, TActionCombiner } from '../utils';\n\nimport { VIDGET_ACTIONS } from './vidget.constants';\n\nconst { ADD, DELETE } = VIDGET_ACTIONS;\n\nexport const VidgetActions = {\n  add: (vidget: IVidget) => action(ADD, vidget),\n  delete: (id: string) => action(DELETE, id),\n};\n\nexport type TVidgetActions = ReturnType<TActionCombiner<typeof VidgetActions>>;\n","export const VIDGET_MAIN_PARAMETERS = ['Income', 'Outcome', 'Employee'];\n\nexport const VIDGET_ADDITION_PARAMETERS = [\n  'None',\n  'Income',\n  'Outcome',\n  'Employee',\n  'Prediction',\n];\n\nexport const VIDGET_PERIOD = ['Week', 'Month', 'Year'];\n","export const getList = (arr: string[], filter?: string) =>\n  arr\n    .filter((el) => el !== filter)\n    .map((el) => ({\n      value: el,\n      label: el,\n    }));\n","import { createStyles, makeStyles, Theme } from '@material-ui/core';\n\nexport const useNewVidgetStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      padding: theme.spacing(2),\n    },\n    row: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'flex-end',\n    },\n    label: {\n      paddingBottom: theme.spacing(1.5),\n      width: 300,\n    },\n    button: {\n      display: 'block',\n      margin: 'auto',\n      marginTop: theme.spacing(2),\n    },\n    card: {\n      display: 'flex',\n      width: '500px',\n      height: '300px',\n    },\n    cardContent: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  })\n);\n","import { Button, Paper, Typography } from '@material-ui/core';\n\nimport { DialogModal } from '@components/dialog-modal';\nimport { PlusButton } from '@components/plus-button';\nimport { Select } from '@components/select';\n\nimport { useNewVidgetState } from './new-vidget.state';\nimport { getList } from './new-vidget.utils';\n\nimport {\n  VIDGET_ADDITION_PARAMETERS, VIDGET_MAIN_PARAMETERS, VIDGET_PERIOD\n} from './new-vidget.constants';\n\nimport { useNewVidgetStyles } from './new-vidget.styles';\n\nexport const NewVidget = () => {\n  const classes = useNewVidgetStyles();\n\n  const {\n    main,\n    additional,\n    period,\n    setMain,\n    setAdditional,\n    setPeriod,\n\n    isOpenModal,\n    handleOpenModal,\n    handleCloseModal,\n\n    handleCreate,\n  } = useNewVidgetState();\n\n  return (\n    <>\n      <PlusButton onClick={handleOpenModal} />\n      <DialogModal isOpen={isOpenModal} handleClose={handleCloseModal}>\n        <Paper className={classes.paper}>\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\n            NEW VIDGET\n          </Typography>\n          <div className={classes.row}>\n            <Typography className={classes.label} variant=\"body1\" component=\"p\">\n              Base parameter\n            </Typography>\n            <Select\n              list={getList(VIDGET_MAIN_PARAMETERS, additional)}\n              value={main}\n              setValue={setMain}\n            />\n          </div>\n          <div className={classes.row}>\n            <Typography className={classes.label} variant=\"body1\" component=\"p\">\n              Additional parameter\n            </Typography>\n            <Select\n              list={getList(VIDGET_ADDITION_PARAMETERS, main)}\n              value={additional}\n              setValue={setAdditional}\n            />\n          </div>\n          <div className={classes.row}>\n            <Typography className={classes.label} variant=\"body1\" component=\"p\">\n              Period\n            </Typography>\n            <Select\n              list={getList(VIDGET_PERIOD)}\n              value={period}\n              setValue={setPeriod}\n            />\n          </div>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleCreate}\n          >\n            Create\n          </Button>\n        </Paper>\n      </DialogModal>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport { useAction } from '@services/redux';\nimport { VidgetActions } from '@services/redux/vidget';\nimport { getUUID } from '@services/utils';\n\nimport {\n  VIDGET_ADDITION_PARAMETERS, VIDGET_MAIN_PARAMETERS, VIDGET_PERIOD\n} from './new-vidget.constants';\n\nexport const useNewVidgetState = () => {\n  const [main, setMain] = useState(VIDGET_MAIN_PARAMETERS[0]);\n  const [additional, setAdditional] = useState(VIDGET_ADDITION_PARAMETERS[0]);\n  const [period, setPeriod] = useState(VIDGET_PERIOD[0]);\n\n  const [isOpenModal, setOpenModal] = useState(false);\n\n  const add = useAction(VidgetActions.add);\n\n  const handleOpenModal = () => setOpenModal(true);\n  const handleCloseModal = () => {\n    setOpenModal(false);\n    setMain(VIDGET_MAIN_PARAMETERS[0]);\n    setAdditional(VIDGET_ADDITION_PARAMETERS[0]);\n    setPeriod(VIDGET_PERIOD[0]);\n  }\n\n  const handleCreate = () => {\n    add({\n      id: getUUID(),\n      base: main,\n      additional,\n      period,\n    });\n    handleCloseModal();\n  }\n\n  return {\n    main,\n    additional,\n    period,\n    setMain,\n    setAdditional,\n    setPeriod,\n\n    isOpenModal,\n    handleOpenModal,\n    handleCloseModal,\n\n    handleCreate,\n  };\n};\n","export const COLORS = {\n  primaryBlue: '#3f51b5',\n\n  primaryOrange: '#FF9800',\n\n  primaryRed: '#D32F2F',\n\n  primaryLime: '#AFB42B',\n};\n","export const getTransparent = (color: string, opacity: number) =>\n  `${color}${Math.floor(opacity * 255).toString(16)}`;\n","import { VIDGET_ADDITION_PARAMETERS } from '@screens/dashboard/components';\n\nimport { COLORS } from 'styles/colors';\nimport { getTransparent } from 'styles/utils';\n\nexport const getColor = (type: string) => {\n  switch (type) {\n    case VIDGET_ADDITION_PARAMETERS[1]:\n      return {\n        pointBorderColor: getTransparent(COLORS.primaryOrange, 0.8),\n        borderColor: getTransparent(COLORS.primaryOrange, 0.7),\n        backgroundColor: getTransparent(COLORS.primaryOrange, 0.2),\n      };\n    case VIDGET_ADDITION_PARAMETERS[2]:\n      return {\n        pointBorderColor: getTransparent(COLORS.primaryBlue, 0.8),\n        borderColor: getTransparent(COLORS.primaryBlue, 0.7),\n        backgroundColor: getTransparent(COLORS.primaryBlue, 0.2),\n      };\n    case VIDGET_ADDITION_PARAMETERS[3]:\n      return {\n        pointBorderColor: getTransparent(COLORS.primaryLime, 0.8),\n        borderColor: getTransparent(COLORS.primaryLime, 0.7),\n        backgroundColor: getTransparent(COLORS.primaryLime, 0.2),\n      };\n    case VIDGET_ADDITION_PARAMETERS[4]:\n      return {\n        pointBorderColor: getTransparent(COLORS.primaryRed, 0.8),\n        borderColor: getTransparent(COLORS.primaryRed, 0.7),\n        backgroundColor: 'rgba(0,0,0,0)',\n      };\n  }\n};\n","export const getDays = (days: number) =>\n  new Array(days)\n    .fill(1)\n    .map((_, index) => {\n      const day = new Date(new Date().getTime() - 24 * 60 * 60 * 1000 * index);\n\n      return new Date(day.getFullYear(), day.getMonth(), day.getDate());\n    })\n    .reverse();\n\nexport const getDaysOfWeek = (days: Date[]) =>\n  days.map(\n    (date) => ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][date.getDay()]\n  );\n\nexport const getPredictWeek = () => {\n  const days = getDays(7);\n\n  days.push(\n    ...new Array(3)\n      .fill(1)\n      .map(\n        (_, index) =>\n          new Date(new Date().getTime() + 24 * 60 * 60 * 1000 * (index + 1))\n      )\n  );\n\n  return getDaysOfWeek(days);\n};\n\nexport const getPredictMonth = () => {\n  const days = getDays(30);\n\n  days.push(\n    ...new Array(10)\n      .fill(1)\n      .map(\n        (_, index) =>\n          new Date(new Date().getTime() + 24 * 60 * 60 * 1000 * (index + 1))\n      )\n  );\n\n  return getDaysOfMonth(days);\n};\n\nexport const getDaysOfMonth = (days: Date[]) =>\n  days.map(\n    (date) => `${format(date.getDate())}.${format(date.getMonth() + 1)}`\n  );\n\nconst format = (n: number) => (n < 10 ? `0${n}` : n);\n\nexport const getMonths = (count: number) => {\n  let last = getMonth(new Date());\n\n  const res: Date[] = [];\n  new Array(count).fill(1).forEach(() => {\n    const prev = getMonth(new Date(last.getTime() - 24 * 60 * 60 * 1000));\n    res.push(last);\n    last = prev;\n  });\n\n  return res.reverse();\n};\n\nexport const getMonth = (date: Date) => new Date(date.getFullYear(), date.getMonth());\n\nexport const getMonthsNames = (days: Date[]) =>\n  days.map(\n    (date) => `${format(date.getMonth() + 1)}.${format(date.getFullYear())}`\n  );\n\nexport const getPredictYear = () => {\n  const days = getMonths(12).reverse();\n\n  let last = getMonth(\n    new Date(getMonth(new Date()).getTime() + 24 * 60 * 60 * 1000 * 35)\n  );\n\n  new Array(3).fill(1).forEach(() => {\n    const next = getMonth(new Date(last.getTime() + 24 * 60 * 60 * 1000 * 35));\n    days.unshift(last);\n    last = next;\n  });\n\n  return getMonthsNames(days.reverse());\n};\n","import {\n  VIDGET_ADDITION_PARAMETERS, VIDGET_PERIOD\n} from '@screens/dashboard/components';\nimport { getDays, getMonth, getMonths } from './format';\n\nimport { getPrice } from '@services/currency.api';\nimport { IReduxStore } from '@services/redux';\nimport { parseCurrency } from '@services/utils';\n\nimport { Currency } from '@constants/currency';\n\nexport const getData = (\n  redux: IReduxStore,\n  type: string,\n  convert: readonly [number, number],\n  period: string\n) => {\n  let dates = getDays(7);\n\n  switch (period) {\n    case VIDGET_PERIOD[1]:\n      dates = getDays(30);\n      break;\n    case VIDGET_PERIOD[2]:\n      dates = getMonths(12);\n      break;\n  }\n\n  if (type === VIDGET_ADDITION_PARAMETERS[3]) {\n    return getEmployeeData(redux.setting.settings, dates, period);\n  }\n\n  const { incomes } = redux.income;\n  const { outcomes } = redux.outcome;\n\n  return dates.map((from) => {\n    const to =\n      period === VIDGET_PERIOD[2]\n        ? getMonth(new Date(from.getTime() + 24 * 60 * 60 * 1000 * 35)).getTime()\n        : new Date(from.getTime() + 24 * 60 * 60 * 1000).getTime();\n\n    switch (type) {\n      case VIDGET_ADDITION_PARAMETERS[2]:\n        return formatData(outcomes, from.getTime(), to, convert, parseCurrency(redux.user.user?.currency || 'USD'));\n      default:\n        return formatData(incomes, from.getTime(), to, convert, parseCurrency(redux.user.user?.currency || 'USD'));\n    }\n  });\n};\n\nexport const getEmployeeData = (settings: ISetting[], dates: Date[], period: string) => {\n  return dates.map((from) => {\n    const to =\n      period === VIDGET_PERIOD[2]\n        ? getMonth(new Date(from.getTime() + 24 * 60 * 60 * 1000 * 35)).getTime()\n        : new Date(from.getTime() + 24 * 60 * 60 * 1000).getTime();\n\n    return (\n      settings\n        .filter(({ timestamp }) => from.getTime() < timestamp && timestamp < to)\n        .sort((a, b) => b.timestamp - a.timestamp)[0]?.employee || 0\n    );\n  });\n};\n\nconst formatData = (\n  data: IRecord[],\n  from: number,\n  to: number,\n  convert: readonly [number, number],\n  currency: Currency,\n) =>\n  +data\n    .filter(({ time }) => from < time && time < to)\n    .reduce((acc, val) => {\n      return acc + getPrice(val.value, val.currency, currency, convert);\n    }, 0)\n    .toFixed(2);\n","import { VIDGET_PERIOD } from '@screens/dashboard/components';\nimport {\n  getDays, getDaysOfMonth, getDaysOfWeek, getMonths, getMonthsNames,\n  getPredictMonth, getPredictWeek, getPredictYear\n} from './format';\n\nexport const getLabels = (period: string) => {\n  switch (period) {\n    case VIDGET_PERIOD[1]:\n      return getDaysOfMonth(getDays(30));\n    case VIDGET_PERIOD[2]:\n      return getMonthsNames(getMonths(12));\n    default:\n      return getDaysOfWeek(getDays(7));\n  }\n};\n\nexport const getPredictLabels = (period: string) => {\n  switch (period) {\n    case VIDGET_PERIOD[1]:\n      return getPredictMonth();\n    case VIDGET_PERIOD[2]:\n      return getPredictYear();\n    default:\n      return getPredictWeek();\n  }\n};\n\n","import { VIDGET_PERIOD } from '@screens/dashboard/components';\n\nexport const getPrediction = (data: number[], period: string) => {\n  const n = data.length;\n\n  const x = getXSum(data, 1);\n  const x2 = getXSum(data, 2);\n\n  const y = getYSum(data, 0);\n  const xy = getYSum(data, 1);\n\n  const matrix = [\n    [n, x],\n    [x, x2],\n  ];\n  const results = [y, xy];\n\n  const { det, detX1, detX2 } = determinants(matrix, results);\n\n  if (det !== 0) {\n    const a = detX1 / det;\n    const b = detX2 / det;\n\n    switch (period) {\n      case VIDGET_PERIOD[2]:\n        return new Array(15).fill(1).map((_, i) => +((i - a) / b).toFixed(2));\n      case VIDGET_PERIOD[1]:\n        return new Array(40).fill(1).map((_, i) => +((i - a) / b).toFixed(2));\n      default:\n        return new Array(10).fill(1).map((_, i) => +((i - a) / b).toFixed(2));\n    }\n  } else {\n    return [];\n  }\n};\n\nconst getXSum = (data: number[], pow: number) =>\n  data.reduce((acc, val) => acc + Math.pow(val, pow), 0);\n\nconst getYSum = (data: number[], pow: number) =>\n  data.map((x, y) => y * Math.pow(x, pow)).reduce((acc, val) => acc + val, 0);\n\nconst determinants = (matrix: number[][], results: number[]) => {\n  const a11 = matrix[0][0];\n  const a12 = matrix[0][1];\n  const a21 = matrix[1][0];\n  const a22 = matrix[1][1];\n  const c1 = results[0];\n  const c2 = results[1];\n\n  const det = a11 * a22 - a12 * a21;\n\n  const detX1 = c1 * a22 - a12 * c2;\n\n  const detX2 = a11 * c2 - c1 * a21;\n\n  return { det, detX1, detX2 };\n};\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nexport const useDashboardCardStyles = makeStyles(() =>\n  createStyles({\n    card: {\n      display: 'flex',\n      width: '1000px',\n      height: '600px',\n    },\n    cardContent: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  })\n);\n","import { Button, Card, CardContent } from '@material-ui/core';\nimport { ChartDataSets } from 'chart.js';\nimport { FC, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport { DialogPrompt } from '@components/dialog-modal';\nimport { Loader } from '@components/loader';\nimport { VIDGET_ADDITION_PARAMETERS } from '../new-vidget';\n\nimport { useAction, useReduxSelector } from '@services/redux';\nimport { VidgetActions } from '@services/redux/vidget';\nimport {\n  getColor, getData, getLabels, getPrediction, getPredictLabels\n} from '@services/vidgets';\n\nimport { PROMISES } from '@constants/promises';\n\nimport { useDashboardCardStyles } from './dashboard-card.styles';\n\ninterface IDashboardCard {\n  vidget: IVidget;\n  convert: readonly [number, number];\n}\n\nconst VIDGETS_BASE_DATA = [\n  VIDGET_ADDITION_PARAMETERS[1],\n  VIDGET_ADDITION_PARAMETERS[2],\n  VIDGET_ADDITION_PARAMETERS[3],\n];\n\nexport const DashboardCard: FC<IDashboardCard> = ({ vidget, convert }) => {\n  const classes = useDashboardCardStyles();\n\n  const redux = useReduxSelector((redux) => redux);\n\n  const del = useAction(VidgetActions.delete);\n\n  const [isOpenDelete, setOpenDelete] = useState(false);\n\n  const handleClose = () => setOpenDelete(false);\n  const handleOpen = () => setOpenDelete(true);\n  const handleDelete = () => {\n    del(vidget.id);\n    handleClose();\n  };\n\n  const getDatasets = () => {\n    const datasets: ChartDataSets[] = [\n      {\n        label: vidget.base,\n        data: getData(redux, vidget.base, convert, vidget.period),\n        ...getColor(vidget.base),\n      },\n    ];\n\n    if (VIDGETS_BASE_DATA.includes(vidget.additional)) {\n      datasets.push({\n        label: vidget.additional,\n        data: getData(redux, vidget.additional, convert, vidget.period),\n        ...getColor(vidget.additional),\n      });\n    }\n\n    return datasets;\n  };\n\n  const getPredictionDatasets = () => {\n    const dataset = getDatasets();\n\n    dataset.push({\n      label: vidget.additional,\n      data: getPrediction(\n        getData(redux, vidget.base, convert, vidget.period),\n        vidget.period\n      ),\n      ...getColor(vidget.additional),\n    });\n\n    return dataset;\n  };\n\n  return (\n    <Card className={classes.card} elevation={3}>\n      <CardContent className={classes.cardContent}>\n        <Loader id={PROMISES.PRICE} width={950} height={550}>\n          {vidget.additional === VIDGET_ADDITION_PARAMETERS[4] ? (\n            <Line\n              data={{\n                labels: getPredictLabels(vidget.period),\n                datasets: getPredictionDatasets(),\n              }}\n            />\n          ) : (\n            <Line\n              data={{\n                labels: getLabels(vidget.period),\n                datasets: getDatasets(),\n              }}\n            />\n          )}\n        </Loader>\n        <div>\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleOpen}>\n            Delete\n          </Button>\n        </div>\n      </CardContent>\n      <DialogPrompt\n        isOpen={isOpenDelete}\n        description=\"Are you sure you want to detele this vidget?\"\n        title=\"Delete vidget\"\n        handleClose={handleClose}\n        handleSubmit={handleDelete}\n      />\n    </Card>\n  );\n};\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nexport const useDashboardVidgetListStyles = makeStyles((theme) =>\n  createStyles({\n    container: {\n      width: '100%',\n      margin: theme.spacing(1),\n    },\n  })\n);\n","import { Grid } from '@material-ui/core';\n\nimport { DashboardCard } from '../dashboard-card';\nimport { NewVidget } from '../new-vidget';\n\nimport { usePrice } from '@services/currency.api';\nimport { useReduxSelector } from '@services/redux';\n\nimport { useDashboardVidgetListStyles } from './dashboard-vidget-list.styles';\n\nexport const DashboardVidgetList = () => {\n  const classes = useDashboardVidgetListStyles();\n\n  const { vidgets } = useReduxSelector((redux) => redux.vidget);\n  const convert = usePrice();\n\n  return (\n    <Grid\n      className={classes.container}\n      container\n      justify=\"flex-start\"\n      spacing={3}\n    >\n      {vidgets.map((vidget) => (\n        <Grid item key={vidget.id}>\n          <DashboardCard vidget={vidget} convert={convert} />\n        </Grid>\n      ))}\n      <Grid item>\n        <NewVidget />\n      </Grid>\n    </Grid>\n  );\n};\n","import { usePromiseTracker } from 'react-promise-tracker';\n\nimport { Loader } from '@components/loader';\nimport { ScreenTitle } from '@components/screen-title';\nimport { DashboardVidgetList } from './components';\n\nimport { useUser } from '@services/utils';\n\nimport { PROMISES } from '@constants/promises';\n\nexport const Dashboard = () => {\n  useUser();\n\n  const { promiseInProgress } = usePromiseTracker({ area: PROMISES.USER });\n\n  return (\n    <div>\n      <ScreenTitle title=\"Dashboard\" />\n      {promiseInProgress ? (\n        <Loader id={PROMISES.USER} />\n      ) : (\n        <DashboardVidgetList />\n      )}\n    </div>\n  );\n};\n","import { FC } from 'react';\n\nimport { DialogRecord } from '@components/dialog-modal';\nimport { PlusButton } from '@components/plus-button';\n\nimport { useAddRecordState } from './add-record.state';\n\ninterface IAddRecord {\n  actionAdd: any;\n  isIncome: boolean;\n}\n\nexport const AddRecord: FC<IAddRecord> = ({ actionAdd, isIncome }) => {\n  const {\n    isModalOpen,\n    title,\n    description,\n    value,\n    setTitle,\n    setDescription,\n    setValue,\n    currency,\n    setCurrency,\n\n    date,\n    handleDateChange,\n\n    handleCloseModal,\n    handleSave,\n    handleOpenModal,\n\n    error,\n    handleFocus,\n  } = useAddRecordState(actionAdd, isIncome);\n\n  return (\n    <>\n      <PlusButton onClick={handleOpenModal} />\n      <DialogRecord\n        isOpen={isModalOpen}\n        title={title}\n        description={description}\n        value={value}\n        setTitle={setTitle}\n        setDescription={setDescription}\n        setValue={setValue}\n        handleClose={handleCloseModal}\n        currency={currency}\n        setCurrency={setCurrency}\n        handleSave={handleSave}\n        date={date}\n        handleDateChange={handleDateChange}\n        error={error}\n        handleFocus={handleFocus}\n      />\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\n\nimport { addRecord } from '@services/records.api';\nimport { useAction, useReduxSelector } from '@services/redux';\nimport { getCurrency } from '@services/utils';\n\nimport { Currency } from '@constants/currency';\nimport { PROMISES } from '@constants/promises';\n\nexport const useAddRecordState = (actionAdd: any, isIncome: boolean) => {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [value, setValue] = useState('');\n  const [currency, setCurrency] = useState(Currency.USD);\n  const [error, setError] = useState('');\n  const add = useAction(actionAdd);\n\n  const [date, setDate] = useState<Date | null>(new Date());\n  const handleDateChange = (date: Date | null) => {\n    setDate(date);\n  };\n\n  const { user } = useReduxSelector((redux) => redux.user);\n\n  const handleOpenModal = () => {\n    setModalOpen(true);\n  };\n\n  const handleFocus = () => setError('');\n\n  const handleCloseModal = () => {\n    setTitle('');\n    setDescription('');\n    setValue('');\n    setCurrency(Currency.USD);\n    setModalOpen(false);\n  };\n\n  const handleSave = async () => {\n    const error = await trackPromise(\n      addRecord(user?.jwt || '', {\n        title,\n        description,\n        value: parseFloat(value),\n        currency: getCurrency(currency),\n        time: date ? date.getTime() : new Date().getTime(),\n        isIncome,\n      }),\n      PROMISES.DIALOG_RECORD\n    );\n    if (typeof error === 'string') {\n      setError(error);\n    } else {\n      add({\n        id: error.id,\n        time: date ? date.getTime() : new Date().getTime(),\n        title,\n        description,\n        currency,\n        value: parseFloat(value),\n      });\n      handleCloseModal();\n    }\n  };\n\n  return {\n    isModalOpen,\n    title,\n    description,\n    value,\n    setTitle,\n    setDescription,\n    setValue,\n    currency,\n    setCurrency,\n\n    date,\n    handleDateChange,\n\n    handleOpenModal,\n    handleCloseModal,\n    handleSave,\n\n    error,\n    handleFocus,\n  };\n};\n","import {\n  TableCell, TableHead, TableRow, TableSortLabel\n} from '@material-ui/core';\nimport { FC } from 'react';\n\nimport { Order } from '../data-table.state';\n\ninterface IDataTableHead {\n  numSelected: number;\n  rowCount: number;\n  orderBy: number;\n  order: Order;\n  getHandleHeaderClick: (id: number) => () => void;\n}\n\ninterface IHeadCell {\n  id: number;\n  label: string;\n  numeric: boolean;\n  skipPadding?: boolean;\n}\n\nconst headCells: IHeadCell[] = [\n  { id: 0, label: 'Title', skipPadding: true, numeric: false },\n  { id: 1, label: 'Description', numeric: false },\n  { id: 2, label: 'Value', numeric: true },\n  { id: 3, label: 'Date Added', numeric: true },\n];\n\nexport const DataTableHead: FC<IDataTableHead> = ({\n  orderBy,\n  order,\n  getHandleHeaderClick,\n}) => (\n  <TableHead>\n    <TableRow>\n      <TableCell padding=\"checkbox\" />\n      {headCells.map((headCell) => (\n        <TableCell\n          key={headCell.id}\n          align={headCell.numeric ? 'right' : 'left'}\n          padding={headCell.skipPadding ? 'none' : 'default'}\n          onClick={getHandleHeaderClick(headCell.id)}\n        >\n          <TableSortLabel active={orderBy === headCell.id} direction={order}>\n            {headCell.label}\n          </TableSortLabel>\n        </TableCell>\n      ))}\n    </TableRow>\n  </TableHead>\n);\n","import { FC, useEffect, useState } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\n\nimport { DialogRecord } from '@components/dialog-modal';\n\nimport { editRecord } from '@services/records.api';\nimport { useReduxSelector } from '@services/redux';\nimport { getCurrency, getUUID } from '@services/utils';\n\nimport { Currency } from '@constants/currency';\nimport { PROMISES } from '@constants/promises';\n\ninterface IDataTableEdit {\n  record?: IRecord;\n  handleEdit: (record: IRecord) => void;\n  handleCloseModal: () => void;\n  isEditModal: boolean;\n  isIncome: boolean;\n}\n\nexport const DataTableEdit: FC<IDataTableEdit> = ({\n  record,\n  handleEdit,\n  isEditModal,\n  handleCloseModal,\n  isIncome,\n}) => {\n  const [title, setTitle] = useState(record?.title || '');\n  const [description, setDescription] = useState(record?.description || '');\n  const [value, setValue] = useState(record?.value.toString() || '');\n  const [currency, setCurrency] = useState(record?.currency || Currency.USD);\n  const [date, setDate] = useState(record?.currency || Currency.USD);\n  const [error, setError] = useState('');\n  const handleFocus = () => setError('');\n\n  const handleDateChange = (date: Date | null) => setDate(date);\n\n  const { user } = useReduxSelector((redux) => redux.user);\n\n  useEffect(() => {\n    setTitle(record?.title || '');\n    setDescription(record?.description || '');\n    setValue(record?.value.toString() || '');\n    setCurrency(record?.currency || Currency.USD);\n    setDate(new Date(record?.time || Date.now()));\n  }, [record]);\n\n  const handleSave = async () => {\n    await trackPromise(\n      editRecord(user?.jwt || '', {\n        title,\n        description,\n        value: parseFloat(value),\n        currency: getCurrency(currency),\n        time: date.getTime(),\n        isIncome,\n        id: record?.id,\n      }),\n      PROMISES.DIALOG_RECORD\n    );\n    handleEdit({\n      title,\n      description,\n      value: parseFloat(value),\n      currency,\n      time: date.getTime(),\n      id: record?.id || getUUID(),\n    });\n    handleCloseModal();\n  };\n\n  if (!record) {\n    return null;\n  }\n\n  return (\n    <DialogRecord\n      isOpen={isEditModal}\n      title={title}\n      description={description}\n      value={value}\n      setTitle={setTitle}\n      setDescription={setDescription}\n      setValue={setValue}\n      handleClose={handleCloseModal}\n      currency={currency}\n      setCurrency={setCurrency}\n      handleSave={handleSave}\n      date={date}\n      handleDateChange={handleDateChange}\n      error={error}\n      handleFocus={handleFocus}\n    />\n  );\n};\n","import { Button, TableCell, TableRow } from '@material-ui/core';\nimport { MoreHoriz } from '@material-ui/icons';\nimport { FC, MouseEvent } from 'react';\n\nimport { Loader } from '@components/loader';\n\nimport { getPrice } from '@services/currency.api';\nimport { getCurrency } from '@services/utils';\n\nimport { Currency } from '@constants/currency';\nimport { PROMISES } from '@constants/promises';\n\nimport { useDataTableStyles } from '../data-table.styles';\n\ninterface IDataRow extends IRecord {\n  currencyBase: Currency;\n  convert: readonly [number, number];\n  getHandleOpenMenu: (\n    id: string\n  ) => (event: MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const DataRow: FC<IDataRow> = ({\n  id,\n  title,\n  description,\n  value,\n  currencyBase,\n  getHandleOpenMenu,\n  convert,\n  time,\n  currency,\n}) => {\n  const classes = useDataTableStyles();\n\n  return (\n    <TableRow hover tabIndex={-1} role=\"checkbox\">\n      <TableCell padding=\"checkbox\">\n        <Button\n          aria-controls=\"data-table-menu\"\n          aria-haspopup=\"true\"\n          className={classes.button}\n          onClick={getHandleOpenMenu(id)}\n        >\n          <MoreHoriz className={classes.buttonContent} />\n        </Button>\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n        {title}\n      </TableCell>\n      <TableCell align=\"left\">{description}</TableCell>\n      <TableCell align=\"right\">\n        <Loader id={PROMISES.PRICE} height={20} justify=\"flex-end\" >\n          {getPrice(value, currency, currencyBase, convert).toFixed(2)}{' '}\n          {getCurrency(currencyBase)}\n        </Loader>\n      </TableCell>\n      <TableCell align=\"right\">\n        {new Date(time).toLocaleTimeString('en-US')} -{' '}\n        {new Date(time).toLocaleDateString('en-US')}\n      </TableCell>\n    </TableRow>\n  );\n};\n","import {\n  Menu, MenuItem, Paper, Table, TableBody, TableContainer, TablePagination,\n  Typography\n} from '@material-ui/core';\nimport { FC } from 'react';\nimport { usePromiseTracker } from 'react-promise-tracker';\n\nimport { DialogPrompt } from '@components/dialog-modal';\nimport { Loader } from '@components/loader';\nimport { Select } from '../select';\nimport { DataRow, DataTableEdit, DataTableHead } from './components';\n\nimport { usePrice } from '@services/currency.api';\nimport { useDataTableState } from './data-table.state';\nimport { getCompire } from './data-table.utils';\n\nimport { CurrencyList } from '@constants/currency';\nimport { PROMISES } from '@constants/promises';\n\nimport { useDataTableStyles } from './data-table.styles';\n\ninterface IDataTable {\n  data: IRecord[];\n  handleDelete: (id: string) => void;\n  handleEdit: (data: IRecord) => void;\n  isIncome: boolean;\n}\n\nexport const DataTable: FC<IDataTable> = ({\n  data,\n  handleDelete,\n  handleEdit,\n  isIncome,\n}) => {\n  const classes = useDataTableStyles();\n\n  const {\n    page,\n    orderBy,\n    order,\n    rowsPerPage,\n    getHandleHeaderClick,\n    handleChangeRowsPerPage,\n    handleChangePage,\n\n    menuAnchorEl,\n    getHandleOpenMenu,\n    handleCloseMenu,\n\n    handleOpenDelete,\n    handleSubmitDelete,\n    handleCancelDelete,\n    isDeleteModal,\n\n    handleOpenEdit,\n    handleCloseEdit,\n    isEditModal,\n\n    getActiveRecord,\n\n    currency,\n    setCurrency,\n  } = useDataTableState({ handleDelete });\n\n  const convert = usePrice();\n\n  const { promiseInProgress } = usePromiseTracker({\n    area: PROMISES.USER,\n  });\n\n  return promiseInProgress ? (\n    <Loader id={PROMISES.USER} />\n  ) : (\n    <Paper>\n      <TableContainer>\n        <Table\n          className={classes.table}\n          aria-labelledby=\"tableTitle\"\n          size=\"medium\"\n          aria-label=\"enhanced table\"\n        >\n          <DataTableHead\n            rowCount={data.length}\n            numSelected={0}\n            orderBy={orderBy}\n            order={order}\n            getHandleHeaderClick={getHandleHeaderClick}\n          />\n          <TableBody>\n            {data\n              .sort(getCompire(order, orderBy, currency, convert))\n              .slice((page - 1) * rowsPerPage, page * rowsPerPage)\n              .map((row) => (\n                <DataRow\n                  {...row}\n                  currencyBase={currency}\n                  getHandleOpenMenu={getHandleOpenMenu}\n                  key={row.id}\n                  convert={convert}\n                />\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <div className={classes.tableFooter}>\n        <div className={classes.currency}>\n          <Typography>Default Currency</Typography>\n          <div className={classes.currencySelect}>\n            <Select\n              list={CurrencyList}\n              value={currency}\n              setValue={setCurrency}\n            />\n          </div>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page - 1}\n          component=\"div\"\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </div>\n      <Menu\n        id=\"data-table-menu\"\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={handleOpenEdit}>Edit</MenuItem>\n        <MenuItem onClick={handleOpenDelete}>Delete</MenuItem>\n      </Menu>\n      <DialogPrompt\n        isOpen={isDeleteModal}\n        description=\"This action will delete this record\"\n        title=\"Delete\"\n        handleClose={handleCancelDelete}\n        handleSubmit={handleSubmitDelete}\n      />\n      <DataTableEdit\n        handleCloseModal={handleCloseEdit}\n        handleEdit={handleEdit}\n        record={getActiveRecord(data)}\n        isEditModal={isEditModal}\n        isIncome={isIncome}\n      />\n    </Paper>\n  );\n};\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nexport const useIncomeStyles = makeStyles((theme) =>\n  createStyles({\n    screen: {\n      paddingRight: theme.spacing(1),\n    },\n  })\n);\n","import { AddRecord } from '@components/add-record';\nimport { DataTable } from '@components/data-table';\nimport { ScreenTitle } from '@components/screen-title';\n\nimport { useAction, useReduxSelector } from '@services/redux';\nimport { IncomeActions } from '@services/redux/income';\n\nimport { useIncomeStyles } from './income.styles';\n\nexport const Income = () => {\n  const { incomes } = useReduxSelector((redux) => redux.income);\n  const handleDelete = useAction(IncomeActions.delete);\n  const handleEdit = useAction(IncomeActions.update);\n  const classes = useIncomeStyles();\n\n  return (\n    <div className={classes.screen}>\n      <ScreenTitle title=\"Income\" />\n      <AddRecord actionAdd={IncomeActions.add} isIncome />\n      <DataTable\n        data={incomes}\n        handleDelete={handleDelete}\n        handleEdit={handleEdit}\n        isIncome\n      />\n    </div>\n  );\n};\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nexport const useOutcomeStyles = makeStyles((theme) =>\n  createStyles({\n    screen: {\n      paddingRight: theme.spacing(1),\n    },\n  })\n);\n","import { AddRecord } from '@components/add-record';\nimport { DataTable } from '@components/data-table';\nimport { ScreenTitle } from '@components/screen-title';\n\nimport { useAction, useReduxSelector } from '@services/redux';\nimport { OutcomeActions } from '@services/redux/outcome';\n\nimport { useOutcomeStyles } from './outcome.styles';\n\nexport const Outcome = () => {\n  const { outcomes } = useReduxSelector((redux) => redux.outcome);\n  const handleDelete = useAction(OutcomeActions.delete);\n  const handleEdit = useAction(OutcomeActions.update);\n  const classes = useOutcomeStyles();\n\n  return (\n    <div className={classes.screen}>\n      <ScreenTitle title=\"Outcome\" />\n      <AddRecord actionAdd={OutcomeActions.add} isIncome={false} />\n      <DataTable\n        data={outcomes}\n        handleDelete={handleDelete}\n        handleEdit={handleEdit}\n        isIncome={false}\n      />\n    </div>\n  );\n};\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nexport const useProfileStyles = makeStyles((theme) =>\n  createStyles({\n    screen: {\n      paddingRight: theme.spacing(1),\n    },\n    input: {\n      maxWidth: 400,\n      display: 'block',\n      marginBottom: theme.spacing(1),\n      marginLeft: theme.spacing(2),\n    },\n    currency: {\n      width: 400,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginLeft: theme.spacing(2),\n    },\n    currencySelect: {\n      marginTop: theme.spacing(-1),\n      marginLeft: theme.spacing(1),\n    },\n    buttons: {\n      width: 400,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginLeft: theme.spacing(2),\n      marginTop: theme.spacing(2)\n    },\n  })\n);\n","import { Button, TextField, Typography } from '@material-ui/core';\nimport { ChangeEvent, useEffect, useState } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\n\nimport { DialogPrompt } from '@components/dialog-modal';\nimport { Loader } from '@components/loader';\nimport { ScreenTitle } from '@components/screen-title';\nimport { Select } from '@components/select';\n\nimport { useAction, useReduxSelector } from '@services/redux';\nimport { UserActions } from '@services/redux/user';\nimport { updateInfo } from '@services/user.api';\nimport { getCurrency, getLaunguage, parseCurrency } from '@services/utils';\n\nimport { CurrencyList } from '@constants/currency';\nimport { Language } from '@constants/language';\n// import { LanguageList } from '@constants/language';\nimport { PROMISES } from '@constants/promises';\n\nimport { useProfileStyles } from './profile.styles';\n\nexport const Profile = () => {\n  const classes = useProfileStyles();\n  const { user } = useReduxSelector((redux) => redux.user);\n\n  const logout = useAction(UserActions.logout);\n  const login = useAction(UserActions.login);\n\n  const [name, setName] = useState(user?.name ?? '');\n  const [email, setEmail] = useState(user?.email ?? '');\n  const [location, setLocation] = useState(user?.location ?? '');\n  const [currency, setCurrency] = useState(parseCurrency(user?.currency));\n  // const [language, setLanguage] = useState(parseLanguage(user?.language));\n\n  const [error, setError] = useState('');\n\n  const handleFocus = () => setError('');\n\n  const [isOpenLogout, setOpenLogout] = useState(false);\n\n  useEffect(() => {\n    setEmployee(user?.employee?.toString() || '');\n  }, [user?.employee]);\n\n  const [employee, setEmployee] = useState(user?.employee?.toString() || '');\n\n  const getHandleChange = (setter: (value: string) => void) => (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    const v = event.target.value;\n\n    setter(v);\n  };\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  const handleCancelLogout = () => {\n    setOpenLogout(false);\n  };\n\n  const handleOpenLogout = () => {\n    setOpenLogout(true);\n  };\n\n  const handleChangeEmployee = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    const v = event.target.value;\n    if (v === '') {\n      return setEmployee(v);\n    }\n    const value = parseInt(v);\n    if (value < 0) {\n      return setEmployee('0');\n    }\n    setEmployee(value.toString(10));\n  };\n\n  const handleUpdate = async () => {\n    const u = {\n      jwt: user?.jwt || '',\n      currency: getCurrency(currency),\n      email,\n      name,\n      location,\n      language: getLaunguage(Language.EN),\n      employee: +employee,\n    };\n\n    const e = await trackPromise(updateInfo(u, login), PROMISES.UPDATE);\n    setError(e);\n\n    if (!e && u.email !== user?.email) {\n      logout();\n      alert('You logged out because you change email');\n    }\n  };\n\n  return (\n    <div className={classes.screen}>\n      <ScreenTitle title=\"Profile\" />\n      <Typography\n        className={classes.input}\n        color=\"error\"\n        variant=\"body1\"\n        component=\"p\"\n      >\n        {error}\n      </Typography>\n      <TextField\n        className={classes.input}\n        fullWidth\n        id=\"name\"\n        label=\"Name\"\n        value={name}\n        onChange={getHandleChange(setName)}\n        onFocus={handleFocus}\n      />\n      <TextField\n        className={classes.input}\n        fullWidth\n        id=\"email\"\n        label=\"Email\"\n        value={email}\n        onChange={getHandleChange(setEmail)}\n        onFocus={handleFocus}\n      />\n      <TextField\n        className={classes.input}\n        fullWidth\n        id=\"location\"\n        label=\"Location\"\n        value={location}\n        onChange={getHandleChange(setLocation)}\n        onFocus={handleFocus}\n      />\n      <TextField\n        className={classes.input}\n        fullWidth\n        type=\"number\"\n        label=\"Employee\"\n        value={employee}\n        onChange={handleChangeEmployee}\n        onFocus={handleFocus}\n      />\n      <div className={classes.currency}>\n        <Typography>Default Currency</Typography>\n        <div className={classes.currencySelect}>\n          <Select list={CurrencyList} value={currency} setValue={setCurrency} />\n        </div>\n      </div>\n      {/* <div className={classes.currency}>\n        <Typography>Language</Typography>\n        <div className={classes.currencySelect}>\n          <Select list={LanguageList} value={language} setValue={setLanguage} />\n        </div>\n      </div> */}\n\n      <DialogPrompt\n        isOpen={isOpenLogout}\n        description=\"Are you sure you want to log out?\"\n        title=\"Logout\"\n        handleClose={handleCancelLogout}\n        handleSubmit={handleLogout}\n      />\n\n      <Loader id={PROMISES.UPDATE} width={400} height={36}>\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleOpenLogout}\n          >\n            Logout\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleUpdate}>\n            Save\n          </Button>\n        </div>\n      </Loader>\n    </div>\n  );\n};\n","import { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Navigation } from '@components/navigation';\nimport { Admin } from '@screens/admin';\nimport { Dashboard } from '@screens/dashboard';\nimport { Income } from '@screens/income';\nimport { Outcome } from '@screens/outcome';\nimport { Profile } from '@screens/profile';\n\nimport { useReduxSelector } from '@services/redux';\n\nimport { ROUTES } from '@constants/routes';\n\nexport const AppRouter = () => {\n  const { admin } = useReduxSelector((redux) => redux.admin);\n\n  if (admin) {\n    return <Admin />;\n  }\n\n  return (\n    <div className=\"app\">\n      <Navigation />\n      <main style={{ width: '100%' }}>\n        <Switch>\n          <Route exact path={ROUTES.dashboard} component={Dashboard} />\n\n          <Route path={`${ROUTES.income}/:id`} component={Income} />\n          <Redirect path={ROUTES.income} to={`${ROUTES.income}/1`} />\n\n          <Route path={`${ROUTES.outcome}/:id`} component={Outcome} />\n          <Redirect path={ROUTES.outcome} to={`${ROUTES.outcome}/1`} />\n\n          <Route path={ROUTES.profile} exact component={Profile} />\n        </Switch>\n      </main>\n    </div>\n  );\n};\n","import DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { loadCSS } from 'fg-loadcss';\nimport { FC, useEffect } from 'react';\nimport { HashRouter } from 'react-router-dom';\n\nimport { useUser } from '@services/utils';\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > .fa': {\n        margin: theme.spacing(2),\n      },\n    },\n  })\n);\n\nexport const AppService: FC = ({ children }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    const node = loadCSS(\n      'https://use.fontawesome.com/releases/v5.12.0/css/all.css',\n      document.querySelector('#font-awesome-css') as HTMLElement\n    );\n\n    return () => {\n      node.parentNode!.removeChild(node);\n    };\n  }, []);\n\n  useUser();\n\n  return (\n    <HashRouter>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <div className={classes.root}>{children}</div>\n      </MuiPickersUtilsProvider>\n    </HashRouter>\n  );\n};\n","import { Login } from '@screens/login';\nimport './app.css';\nimport { AppRouter } from './app.router';\n\nimport { ReduxProvider } from '@services/redux';\n\nimport { AppService } from './app.service';\n\nexport const App = () => (\n  <ReduxProvider>\n    <AppService>\n      <Login>\n        <AppRouter />\n      </Login>\n    </AppService>\n  </ReduxProvider>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from '@screens/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}